[%# QhtLink Firewall - WHM Global Banner include
  #%]
[%# This include renders a small status badge in the WHM header using
   # an official template include slot: /var/cpanel/customizations/whm/includes/global_banner.html.tt
   # It fetches a lightweight JSON from our CGI and maps to a badge.
   # Safe to include multiple times; no JS errors on failure. %]

<script>
(function(){
  function onReady(fn){ if(document.readyState!=='loading'){ fn(); } else { document.addEventListener('DOMContentLoaded', fn, { once:true }); } }
  onReady(function(){
    try {
      var base = (location.pathname.match(/\/cpsess[^/]+\//) || [''])[0];
      if (!base) { base = '/'; }
      if (base.charAt(base.length-1) !== '/') { base += '/'; }
      var url = base + 'cgi/qhtlink/qhtlfirewall.cgi?action=status_json';
      var controller = new AbortController();
      var to = setTimeout(function(){ try{controller.abort();}catch(e){} }, 1800);
      fetch(url, { credentials: 'same-origin', signal: controller.signal })
        .then(function(r){ return r && r.ok ? r.json() : null; })
        .then(function(data){
          clearTimeout(to);
          if(!data) return;
          var cls = data.class || 'default';
          var txt = data.text || 'Firewall';

          // Build a fixed-position fallback badge (visible and unobtrusive)
          var overlay = document.createElement('div');
          overlay.id = 'qhtlfw-badge';
          overlay.style.position = 'fixed';
          overlay.style.top = '10px';
          overlay.style.right = '16px';
          overlay.style.zIndex = '2147483647';
          overlay.style.pointerEvents = 'none';
          overlay.style.fontFamily = 'system-ui, -apple-system, Segoe UI, Roboto, sans-serif';
          var badge = document.createElement('span');
          badge.className = 'label label-' + cls;
          badge.style.pointerEvents = 'auto';
          badge.style.padding = '4px 8px';
          badge.style.display = 'inline-block';
          badge.style.margin = '0';
          badge.textContent = 'Firewall: ' + txt;
          overlay.appendChild(badge);
          document.body.appendChild(overlay);

          // Try to inject near header stats if accessible; hide overlay if success
          var injected = false;
          var attempt = function(){
            try {
              var stats = document.querySelector('cp-whm-header-stats-control');
              if (!stats) return false;
              if (stats.shadowRoot) {
                var host = stats.shadowRoot.querySelector('.header-stats, header, div');
                if (host) {
                  var span = document.createElement('span');
                  span.className = 'label label-' + cls;
                  span.style.marginLeft = '8px';
                  span.textContent = 'Firewall: ' + txt;
                  host.appendChild(span);
                  return true;
                }
              }
            } catch(e) {}
            return false;
          };
          var tries = 0;
          var iv = setInterval(function(){
            tries++;
            if (attempt()) {
              injected = true;
              overlay.style.display = 'none';
              clearInterval(iv);
            }
            if (tries > 20) { // ~2s
              clearInterval(iv);
            }
          }, 100);
        })
        .catch(function(e){ /* ignore */ });
    } catch(e) {}
  });
})();
</script>
