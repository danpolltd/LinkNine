QhtLink Firewall (qhtlfirewall) Changelog

Date: 2025-10-04
Version: 0.1.18 “Clean Cell”

UI / Inline Panel
- Removed nested placeholder <div> from inline action output cell; now a truly empty container ready for fresh action content.
- Increased minimum height from 220px to 280px to provide more breathing room for multi-line command results without immediate scroll.
- Stripped JS references to the removed placeholder element to avoid redundant DOM lookups.

Packaging
- Pending rebuild to propagate structural cleanup (will create -0.1.18 artifact after version bump).

Date: 2025-10-04
Version: 0.1.17 “Opt Reset”

UI
- Fixed invalid CSS selector (:contains) in Options tab double-click reset logic; replaced with robust textContent scan to eliminate DOMException noise.
- Ensures inline output reset still works after simplifying the panel structure.

Packaging
- Version bump to propagate selector fix via tarball so installer sees update immediately.

Date: 2025-10-04
Version: 0.1.16 “Single Cell”

UI / Inline Actions
- Simplified the inline output panel: removed nested inner wrapper & separate loader element; loader now appears as a background image on the single gradient cell.
- Reduced DOM depth (−1 div) and JS logic (removed inner query path) for faster repaint and clearer future styling tweaks.
- Brightness dim on load replaces prior blur for sharper perceived responsiveness.

Packaging
- Immediate version bump to force cache-bust so environments pick up the structural simplification without waiting for manual purge.

Date: 2025-10-04
Version: 0.1.15 “Twin Panel”

UI / Inline Actions
- Restyled the unified inline output panel to visually match the Options tab nested gradient style (outer surface + recessed inner gradient) for consistency.
- Added centered loader overlay while an action is in-flight; previous text-based “Loading +act…” placeholder replaced with spinner layer.
- Introduced subtle blur + opacity dim on stale content until new action output arrives; prevents flash/flicker on rapid successive submits.
- Structural change: inner container now retains height during loads to avoid layout shift, eliminating scroll jumps.

Code Quality
- Migrated the inline panel emission to a single heredoc with column-1 terminator to prevent future heredoc parsing edge cases.
- No behavioral changes to plus-button remaps (redirect on fwb7, hold-to-flush on fwb8), only presentation & load-state signaling.

Packaging
- Version bump solely to ensure updaters invalidate cached 0.1.14 tarballs when fetching the refined UI.

Date: 2025-10-04
Version: 0.1.14 “Inline Anchor”

Stability
- Fixed a heredoc emission block for the unified inline output panel that some target environments parsed incorrectly, triggering Perl errors around "comparison chaining" and bogus regexp modifiers. Refactored to an isolated interpolated variable + controlled heredoc.
- Added clearer isolation of the loader image URL to prevent accidental interpolation drift.

Packaging / Install
- Version bump to ensure cache-busting and to distinguish fixed builds from 0.1.13 artifacts that may still include the problematic heredoc formatting.


Date: 2025-10-02
Version: 0.1.11 “Curse Blade”

Upgrade UI/Flow
- “Check Manually” now morphs into a prominent orange “Upgrade” triangle when a newer version is available. The text and the short countdown render inside the triangle for clarity.
- Inline ChangeLog viewer added next to the manual check for quick review before upgrading.
- Post-upgrade behavior simplified: the UI now auto-refreshes every 10s (up to 60s) and stops when the Upgrade button disappears. This replaces the previous progress polling loop.
- Reduced the Upgrade tab’s height by removing the bottom info row while preserving all triangle buttons.

Version Check & Mirrors
- Robust manual version check endpoint: normalizes configured mirrors, tolerates minor formatting drifts in version.txt, and gives clearer error details.
- Explicit error handling when no HTTP client is available; resilient parsing with UTF-8 BOM stripping and multi-line token scanning.

Watcher UX
- Newest-first log display for AJAX tail output, with non-live auto-scroll targeting the newest entries (scroll to top).
- Modal pinned near the top of the viewport (20px) and constrained to keep 20px margins on both the left and right sides for better readability.

Stability & Optional Modules
- UI no longer errors if ServerCheck, RBLCheck, or Ports modules are missing. Optional requires and guarded calls prevent undefined subroutine/method crashes and surface a compact notice instead.

General
- Layout fix: all triangle buttons render normally; only the first morphs to the Upgrade state when applicable.
- Light CSS/JS polish around the triangle components and modal sizing.

Quick Actions & Inline Results
- Introduced a compact Quick Actions toolbar with six violet, five-point stars (non-scaling 10px halo) labeled Allow, Deny, Ignore, Search, Unblock, Temp.
- Stars 1–5 submit via a cancelable AJAX pathway and render results inline in a dedicated content area (no full-page navigation).
- Long-press behavior (3s) on Allow/Deny/Ignore shows an on-star countdown and opens Quick View popups. A capture-phase guard prevents background-tab misfires.
- Removed legacy quick rows and ensured all hidden forms (qallow, qdeny, qignore, grep, qkill) are intercepted for inline delivery.

Temporary Rule Modal
- Added a new Temporary Allow/Deny modal with a subtle, pulsating yellow glow; it scrolls with the firewall container and preserves 20px gutters.
- Close behavior hardened: clicking outside the dialog now closes the modal across mousedown/touchstart/pointerdown events; explicit Close button retained.
- Constrained inputs to ≤150px; kept concise helper text for ports and durations. Modal works with or without jQuery and degrades gracefully.

Security & Robustness Hardening
- Replaced instances of $.ajax with jQuery.ajax to eliminate dependency on the global "$" alias and improve supply-chain resilience of the JS runtime.
- Implemented a vanilla XMLHttpRequest fallback for all critical flows (form submits and modal apply) for defense-in-depth.
- Converted risky inline JS to single-quoted heredocs to prevent accidental Perl interpolation of "$" identifiers and ensure literal emission of JavaScript.
- Normalized CSS decimal literals and sanitized stray comment tokens embedded in Perl strings to avoid parse drift across browsers.
- Added capture-phase event interceptors for consistent behavior under nested handlers; guarded DOM appends and modal class toggles for idempotency.

UI Polish
- Removed the legacy inline Temporary Rule row/button now that the modal supersedes it.
- Tuned Options tab orange buttons: label font-size increased, then balanced to 15px, and reduced vertical line-height to tighten the gap between stacked words for greater legibility within 70×70 squares.
- Preserved the 10px bright-orange halo and hover micro-interactions; ensured accessible focus outlines remain present.

Date: 2025-09-30
Version: 0.1.10 “Sharp Scratch”

Waterfall UI/UX
- Replaced Waterfall “Status” with a dedicated “On” bubble and removed the old Status button.
- All bubble actions now load inline below the bubbles via AJAX only; page scaffolding is not re-rendered.
- Watcher modal fixed: JSON.parse issues resolved, now modal-only with outside-click close, and no scroll locking.
- Quick Actions/gear popup stabilized, closes on outside click, avoids header overlay issues.
- Kept Bootstrap JS, removed Bootstrap CSS to prevent WHM header shrinking.
- Added blue “water bubble” hover sheen and ring pulse on success.

Security & Robustness
- Safe JS delivery: added wstatus_js and banner_js endpoints with correct MIME and X-Content-Type-Options: nosniff; guarded script-like requests with a JS no-op.
- Early absolute QHTL_SCRIPT initializer fixed; added cache-busting via version token on script includes.
- Hardened status_json to tolerate transient service states and systemd presence or PID checks.

“On” Bubble Behavior
- Running state: short click does nothing; press-and-hold refined into a two-phase flow:
	1) 3s WARNING countdown (release during this phase triggers Restart immediately)
	2) then 3s dim countdown (auto-Restart at end)
- Stopped/Disabled state: tap-to-start works immediately.
- Cancel freeze during WARNING fixed; timers/classes cleaned safely.

APIs
- Implemented lightweight APIs: api_startwf, api_restartwf, api_stopwf, and retained api_disablewf for potential future use.

Post-save Auto-Restart
- After saving any of the seven Waterfall edit panels, the UI now auto-triggers the On bubble restart countdown (no manual Restart button). A brief “Restarting qhtlwaterfall…” message is shown.
- Added WStatus.restartCountdown() for programmatic restarts; resilient if widget isn’t mounted (mounts and triggers).

Seasonal Decorations
- Added a lightweight seasonal loader (Oct 1–31) that decorates the On bubble with a small pumpkin, a subtle bat animation, and a gentle glow. Assets live under ui/images/holiday/ and can be replaced.
- Added holiday_asset endpoint to serve holiday CSS/SVG with nosniff and sanitization.

General
- Reduced console noise and added singleton guards to avoid duplicate wiring.
- Back-compat maintained for qhtlwaterfallrestart.

Date: 2025-09-29
Version: 0.1.9 “Snow Castle”

TUI (Terminal UI)
- New dialog-based TUI available post-install (qhtlfirewall-tui).
- Config editor by section with safe backups and inline key editing.
- Lists editor for allow/deny/ignore/pignore/rignore/fignore/etc.
- Quick Allow/Deny, Temporary rules, Open Ports, Update helpers.
- Logs viewer now sources log paths from /etc/qhtlfirewall/qhtlfirewall.logfiles with live tail view and friendly empty/unreadable handling.
- Visual polish: global backtitle, animated splash, spinner while executing commands, and subtle transitions.
- Dedicated File Explorer menu launching Midnight Commander (mc) if available.

Installers
- Deploy the TUI and attempt to install dialog when available.
- Post-install message informs how to launch the TUI.

Misc
- Safer awk-based config updates replacing fragile sed expressions.
- Various bug fixes and portability improvements.

Date: 2025-09-25
Version: 0.1.8 “Frozen Meteor”

Install/Upgrade
- TGZ-first workflow hardened: robust archive layout detection, automatic installer selection (generic, cPanel, etc.), and idempotent reruns.
- Reinstall/upgrade one-liners added (with a debug variant that logs steps and output for support).

Web UI
- Internal wiring refactors to support future backgrounded operations triggered from the UI.

Packaging
- Normalized tarball layout; ensured top-level qhtlfirewall/ directory with installers.
- Included version.txt and updated changelog in artifacts; corrected file modes and permissions.

General
- Assorted stability fixes and minor performance improvements.

Date: 2025-09-23
Version: 0.1.7 “Ruby Lane”

cPanel/WHM UI — Watcher Modal
- Readability: Render each log line as a separate, single-line row with ellipsis truncation and a tooltip for the full content.
- Scrolling: Automatically scroll to the newest lines; in real-time mode, stick to bottom only if the user is already near it (respects manual scroll-up).
- Real-time tail: Added “Real Time” mode (1s) that appends only new lines (no flicker) while keeping “Autocheck” mode (5s). Suppressed temporary “Loading…” text during live updates.
- Safety: Strip any embedded <script> in responses and treat payload as plain text. Avoid fragile heredoc patterns by using safe newline handling (String.fromCharCode(10)).
- Controls & layout: Reworked footer layout into inputs + right-side button group, with a dedicated header bar. Moved the “Refresh in” counter to the header, right of “Watcher”. Reduced inter-button gap by an additional 10%.
- Buttons: Keep Autocheck (green) and Pause (orange) at normal intensity; highlight Real Time ~20% stronger while in live mode, and highlight Start ~20% stronger when paused.

Notes
- UI/UX improvements only; no backend API changes were required.

Date: 2025-09-22
Version: 0.1.6 “Flaming Rock”

WHM/Badge UI
- WHM banner: clickable badge linking to Firewall UI (cpsess-aware)
- Remove initial gray flash on login; defer render until status JSON loads
- Add 5px status-colored glow around badge and balanced spacing
- Minor WHM UI hardening and installer improvements

Status JSON/API
- Hardened the lightweight status endpoint used by WHM badge (resilient to transient service states and timeouts).
- Added conservative caching headers and clearer error signaling.

Date: 2025-09-20
Version: 0.1.5 “Snow White”

Installer and Service Sequencing
- Added an install guard flag at /var/lib/qhtlfirewall/.installing to prevent qhtlwaterfall from starting during installation.
- Updated systemd unit qhtlwaterfall.service to include ConditionPathExists=!/var/lib/qhtlfirewall/.installing so the daemon won’t launch while the guard exists.
- The installer now stops qhtlwaterfall at the beginning of install and restarts services at the end in the correct order.

DirWatch (LF_DIRWATCH) Stability During Install
- During install, if an existing configuration is detected, LF_DIRWATCH and LF_DIRWATCH_FILE are temporarily set to 0 to avoid false-positive alerts from temporary files and directories.
- Original LF_DIRWATCH settings are restored automatically after installation completes.

cPanel/WHM UI
- Hardened WHM CGI (cpanel/qhtlfirewall.cgi) template rendering: capture template output and safely print it (handles SCALAR/ARRAY refs), preventing undefined symbol and SCALAR(...) output issues.
- Confirmed compatibility with Cpanel::Template and ensured template discovery works as expected.

General
- Improved restart ordering and installer messaging for clarity.

Date: 2025-09-20
Version: 0.1.4

Packaging & Scripts
- Introduced helper script to build distributable TGZ from repo sources.
- Cleaned packaging excludes and normalized staging paths.

General
- Integration merges; minor fixes and code cleanup.

Date: 2025-09-19
Version: 0.1.2

Installers
- Finalized qhtlfirewallget migration and updated references.
- Reduced noise with quieter flags and conditional checks; no-op when system services are unavailable.

General
- Updated UI references and docs for the new package naming.

Date: 2025-09-19
Version: 0.1.1

Installers
- Reduce noisy output.
- Guard systemctl for unit enable/firewalld across installers.
 - Minor fixes to uninstaller scripts and detection logic.

Date: 2025-09-19
Version: 0.1.0

Packaging
- Initial packaging baseline; excluded upstream helper scripts from release archives.
- Established initial release notes and rebrand metadata.

Date: 2025-09-20
Version: 0.0.2 (maintenance update)

Installer and Service Sequencing
- Added an install guard flag at /var/lib/qhtlfirewall/.installing to prevent qhtlwaterfall from starting during installation.
- Updated systemd unit qhtlwaterfall.service to include ConditionPathExists=!/var/lib/qhtlfirewall/.installing so the daemon won’t launch while the guard exists.
- The installer now stops qhtlwaterfall at the beginning of install and restarts services at the end in the correct order.

DirWatch (LF_DIRWATCH) Stability During Install
- During install, if an existing configuration is detected, LF_DIRWATCH and LF_DIRWATCH_FILE are temporarily set to 0 to avoid false-positive alerts from temporary files and directories.
- Original LF_DIRWATCH settings are restored automatically after installation completes.

cPanel/WHM UI
- Hardened WHM CGI (cpanel/qhtlfirewall.cgi) template rendering: capture template output and safely print it (handles SCALAR/ARRAY refs), preventing undefined symbol and SCALAR(...) output issues.
- Confirmed compatibility with Cpanel::Template and ensured template discovery works as expected.

General
- Improved restart ordering and installer messaging for clarity.

Notes
- Note: A tag “v2.0” was published in error around this timeframe; these changes correspond to version 0.0.2.
- Consider adding environment-specific patterns to qhtlfirewall.fignore to keep DirWatch quiet for benign /tmp activity.

