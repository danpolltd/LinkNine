From 67bac6e3eb61705eea020d78d805c0608845f40c Mon Sep 17 00:00:00 2001
From: Daniel Nowakowski <asti.nowak@gmail.com>
Date: Mon, 15 Sep 2025 18:40:00 +0000
Subject: [PATCH 1/4] Safety snapshot: ongoing qhtlfirewall rebrand work
 preserved

---
 qhtlfirewall/ConfigServer/AbuseIP.pm          |   2 +-
 qhtlfirewall/ConfigServer/CheckIP.pm          |   2 +-
 qhtlfirewall/ConfigServer/CloudFlare.pm       |  10 +-
 qhtlfirewall/ConfigServer/Config.pm           |  18 +-
 .../ConfigServer/DisplayResellerUI.pm         |  28 +-
 qhtlfirewall/ConfigServer/DisplayUI.pm        | 638 +++++------
 qhtlfirewall/ConfigServer/GetEthDev.pm        |   2 +-
 qhtlfirewall/ConfigServer/GetIPs.pm           |   2 +-
 qhtlfirewall/ConfigServer/KillSSH.pm          |   2 +-
 qhtlfirewall/ConfigServer/Logger.pm           |  10 +-
 qhtlfirewall/ConfigServer/LookUpIP.pm         |  24 +-
 qhtlfirewall/ConfigServer/Messenger.pm        |  78 +-
 qhtlfirewall/ConfigServer/Ports.pm            |   2 +-
 qhtlfirewall/ConfigServer/RBLCheck.pm         |  18 +-
 qhtlfirewall/ConfigServer/RBLLookup.pm        |   2 +-
 qhtlfirewall/ConfigServer/RegexMain.pm        |   6 +-
 qhtlfirewall/ConfigServer/Sanity.pm           |   4 +-
 qhtlfirewall/ConfigServer/Sendmail.pm         |   2 +-
 qhtlfirewall/ConfigServer/ServerCheck.pm      |  10 +-
 qhtlfirewall/ConfigServer/ServerStats.pm      |   6 +-
 qhtlfirewall/ConfigServer/Service.pm          |  10 +-
 qhtlfirewall/ConfigServer/Slurp.pm            |   2 +-
 qhtlfirewall/ConfigServer/URLGet.pm           |   2 +-
 qhtlfirewall/ConfigServer/cseUI.pm            |   2 +-
 qhtlfirewall/auto.cyberpanel.pl               | 104 +-
 qhtlfirewall/auto.interworx.pl                | 133 +--
 qhtlfirewall/cpanel.comodo.allow              |   4 +-
 qhtlfirewall/cpanel/csf.cgi                   |  16 +-
 qhtlfirewall/csf.allow                        |  11 +-
 qhtlfirewall/csf.cwp.conf                     |   2 +-
 qhtlfirewall/csf.cyberpanel.conf              |   2 +-
 qhtlfirewall/csf.directadmin.conf             |   2 +-
 qhtlfirewall/csf.generic.conf                 |   2 +-
 qhtlfirewall/csf.interworx.conf               |   2 +-
 qhtlfirewall/csf.logfiles                     |   2 +-
 qhtlfirewall/csf.syslogs                      |   2 +-
 qhtlfirewall/csf.vesta.conf                   |   2 +-
 qhtlfirewall/csget.pl                         |  33 +-
 qhtlfirewall/cwp/ajax_csfframe.php            |   2 +-
 qhtlfirewall/cwp/qhtlfirewall.pl              | 204 ++++
 .../cyberpanel/configservercsf/views.py       |   8 +-
 qhtlfirewall/cyberpanel/cyberpanel.pl         |   8 +-
 qhtlfirewall/install.cpanel.sh                | 574 +++++-----
 qhtlfirewall/install.cwp.sh                   | 606 ++++++-----
 qhtlfirewall/install.cyberpanel.sh            | 622 ++++++-----
 qhtlfirewall/install.directadmin.sh           | 611 ++++++-----
 qhtlfirewall/install.generic.sh               | 617 ++++++-----
 qhtlfirewall/install.interworx.sh             | 619 ++++++-----
 qhtlfirewall/install.txt                      |   2 +-
 qhtlfirewall/install.vesta.sh                 | 621 ++++++-----
 qhtlfirewall/interworx/lib/index.pl           |   4 +-
 qhtlfirewall/interworx/lib/reseller.pl        |   6 +-
 qhtlfirewall/migratedata.sh                   |   6 +-
 qhtlfirewall/perf.sh                          |   6 +-
 qhtlfirewall/qhtlfirewall.1.txt               | 284 +++++
 qhtlfirewall/qhtlfirewall.help                |   5 +
 qhtlfirewall/qhtlfirewall.pl                  | 592 +++++------
 qhtlfirewall/qhtlfirewall.service             |   4 +-
 qhtlfirewall/qhtlwaterfall.pl                 | 990 +++++++++---------
 qhtlfirewall/qhtlwaterfall.service            |   4 +-
 qhtlfirewall/uninstall.cwp.sh                 |  60 +-
 qhtlfirewall/uninstall.cyberpanel.sh          |  62 +-
 qhtlfirewall/uninstall.directadmin.sh         |  62 +-
 qhtlfirewall/uninstall.generic.sh             |  62 +-
 qhtlfirewall/uninstall.interworx.sh           |  62 +-
 qhtlfirewall/uninstall.sh                     |  68 +-
 qhtlfirewall/uninstall.vesta.sh               |  50 +-
 qhtlfirewall/vestacp/csf.pl                   |   4 +-
 qhtlfirewall/vestacp/frame.php                |   2 +-
 qhtlfirewall/vestacp/qhtlfirewall.pl          | 203 ++++
 qhtlfirewall/webmin/qhtlfirewall/index.cgi    |  31 +-
 qhtlfirewall/webmin/qhtlfirewall/module.info  |   4 +-
 uninstallers/qhtlfirewall/uninstall.cpanel.sh |  64 +-
 uninstallers/qhtlfirewall/uninstall.cwp.sh    |  58 +-
 .../qhtlfirewall/uninstall.cyberpanel.sh      |  60 +-
 .../qhtlfirewall/uninstall.directadmin.sh     |   2 +-
 .../qhtlfirewall/uninstall.generic.sh         |  60 +-
 .../qhtlfirewall/uninstall.interworx.sh       |  60 +-
 uninstallers/qhtlfirewall/uninstall.vesta.sh  |  62 +-
 79 files changed, 4595 insertions(+), 4035 deletions(-)
 create mode 100644 qhtlfirewall/cwp/qhtlfirewall.pl
 create mode 100644 qhtlfirewall/qhtlfirewall.1.txt
 create mode 100644 qhtlfirewall/qhtlfirewall.help
 create mode 100644 qhtlfirewall/vestacp/qhtlfirewall.pl

diff --git a/qhtlfirewall/ConfigServer/AbuseIP.pm b/qhtlfirewall/ConfigServer/AbuseIP.pm
index 0399867..0ea7874 100644
--- a/qhtlfirewall/ConfigServer/AbuseIP.pm
+++ b/qhtlfirewall/ConfigServer/AbuseIP.pm
@@ -21,7 +21,7 @@
 package ConfigServer::AbuseIP;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use IPC::Open3;
 use Net::IP;
diff --git a/qhtlfirewall/ConfigServer/CheckIP.pm b/qhtlfirewall/ConfigServer/CheckIP.pm
index 1fc22d9..682a177 100644
--- a/qhtlfirewall/ConfigServer/CheckIP.pm
+++ b/qhtlfirewall/ConfigServer/CheckIP.pm
@@ -21,7 +21,7 @@
 package ConfigServer::CheckIP;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use Net::IP;
 use ConfigServer::Config;
diff --git a/qhtlfirewall/ConfigServer/CloudFlare.pm b/qhtlfirewall/ConfigServer/CloudFlare.pm
index 2efc375..fdbadf0 100644
--- a/qhtlfirewall/ConfigServer/CloudFlare.pm
+++ b/qhtlfirewall/ConfigServer/CloudFlare.pm
@@ -21,7 +21,7 @@
 package ConfigServer::CloudFlare;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use Fcntl qw(:DEFAULT :flock);
 use JSON::Tiny();
@@ -76,7 +76,7 @@ sub action {
 
 	if ($action eq "remove") {
 		my @newfile;
-		sysopen (my $TEMP, "/var/lib/csf/cloudflare.temp", O_RDWR | O_CREAT);
+		sysopen (my $TEMP, "/var/lib/qhtlfirewall/cloudflare.temp", O_RDWR | O_CREAT);
 		flock($TEMP, LOCK_EX);
 		my $hit;
 		while (my $line = <$TEMP>) {
@@ -143,7 +143,7 @@ sub action {
 			if ($action eq "deny") {
 				my ($id,$status) = &block($ip);
 				logfile($status." ($user)");
-				sysopen (my $TEMP, "/var/lib/csf/cloudflare.temp", O_WRONLY | O_APPEND | O_CREAT);
+				sysopen (my $TEMP, "/var/lib/qhtlfirewall/cloudflare.temp", O_WRONLY | O_APPEND | O_CREAT);
 				flock($TEMP, LOCK_EX);
 				print $TEMP "$ip|$mode|$user|$account|$authlist{$account}{apikey}|$id|".time."\n";
 				close ($TEMP);
@@ -151,7 +151,7 @@ sub action {
 			elsif ($action eq "allow") {
 				my ($id,$status) = &whitelist($ip);
 				logfile($status." ($user)");
-				sysopen (my $TEMP, "/var/lib/csf/cloudflare.temp", O_WRONLY | O_APPEND | O_CREAT);
+				sysopen (my $TEMP, "/var/lib/qhtlfirewall/cloudflare.temp", O_WRONLY | O_APPEND | O_CREAT);
 				flock($TEMP, LOCK_EX);
 				print $TEMP "$ip|$mode|$user|$account|$authlist{$account}{apikey}|$id|".time."\n";
 				close ($TEMP);
@@ -432,7 +432,7 @@ sub getscope {
 	my %scope;
 	my %disabled;
 	my %any;
-	my @entries = slurp("/etc/csf/csf.cloudflare");
+	my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.cloudflare");
 	foreach my $line (@entries) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
diff --git a/qhtlfirewall/ConfigServer/Config.pm b/qhtlfirewall/ConfigServer/Config.pm
index f7a4648..5f63535 100644
--- a/qhtlfirewall/ConfigServer/Config.pm
+++ b/qhtlfirewall/ConfigServer/Config.pm
@@ -21,7 +21,7 @@
 package ConfigServer::Config;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use version;
 use Fcntl qw(:DEFAULT :flock);
 use Carp;
@@ -43,7 +43,7 @@ my $version;
 
 my $slurpreg = ConfigServer::Slurp->slurpreg;
 my $cleanreg = ConfigServer::Slurp->cleanreg;
-my $configfile = "/etc/csf/csf.conf";
+my $configfile = "/etc/qhtlfirewall/qhtlfirewall.conf";
 
 # end main
 ###############################################################################
@@ -75,7 +75,7 @@ sub loadconfig {
 			croak "*Error* Invalid configuration line [$line] in $configfile";
 		}
 		if ($configsetting{$name}) {
-			croak "*Error* Setting $name is repeated in $configfile - you must remove the duplicates and then restart csf and lfd";
+			croak "*Error* Setting $name is repeated in $configfile - you must remove the duplicates and then restart qhtlfirewall and qhtlwaterfall";
 		}
 		$config{$name} = $value;
 		$configsetting{$name} = 1;
@@ -98,7 +98,7 @@ sub loadconfig {
 	}
 
 	if ($config{IPTABLES} eq "" or !(-x $config{IPTABLES})) {
-		croak "*Error* The path to iptables is either not set or incorrect for IPTABLES [$config{IPTABLES}] in /etc/csf/csf.conf";
+		croak "*Error* The path to iptables is either not set or incorrect for IPTABLES [$config{IPTABLES}] in /etc/qhtlfirewall/qhtlfirewall.conf";
 	}
 
 	if (-e "/proc/sys/net/netfilter/nf_conntrack_helper" and !$config{USE_FTPHELPER}) {
@@ -149,7 +149,7 @@ sub loadconfig {
 
 	if ($config{CC_LOOKUPS} and $config{CC_LOOKUPS} != 4 and $config{CC_SRC} eq "1") {
 		if ($config{MM_LICENSE_KEY} eq "") {
-			$warning .= "*ERROR*: Country Code Lookups setting MM_LICENSE_KEY must be set in /etc/csf/csf.conf to continue using the MaxMind databases\n";
+			$warning .= "*ERROR*: Country Code Lookups setting MM_LICENSE_KEY must be set in /etc/qhtlfirewall/qhtlfirewall.conf to continue using the MaxMind databases\n";
 		}
 	}
 
@@ -169,7 +169,7 @@ sub loadconfig {
 
 	if ($config{CC_DENY} or $config{CC_ALLOW} or $config{CC_ALLOW_FILTER} or $config{CC_ALLOW_PORTS} or $config{CC_DENY_PORTS} or $config{CC_ALLOW_SMTPAUTH}) {
 		if ($config{MM_LICENSE_KEY} eq "" and $config{CC_SRC} eq "1") {
-			$warning .= "*ERROR*: Country Code Filters setting MM_LICENSE_KEY must be set in /etc/csf/csf.conf to continue updating the MaxMind databases\n";
+			$warning .= "*ERROR*: Country Code Filters setting MM_LICENSE_KEY must be set in /etc/qhtlfirewall/qhtlfirewall.conf to continue updating the MaxMind databases\n";
 		}
 	}
 
@@ -327,7 +327,7 @@ sub loadconfig {
 			my $min = $3;
 			if (($maj > 2) or (($maj > 1) and ($mid > 6)) or (($maj > 1) and ($mid > 5) and ($min > 19))) {
 			} else {
-				$warning .=  "*WARNING* Kernel $data[0] may not support an ip6tables SPI firewall. You should set IPV6_SPI to \"0\" in /etc/csf/csf.conf\n\n";
+				$warning .=  "*WARNING* Kernel $data[0] may not support an ip6tables SPI firewall. You should set IPV6_SPI to \"0\" in /etc/qhtlfirewall/qhtlfirewall.conf\n\n";
 			}
 		}
 	}
@@ -356,7 +356,7 @@ sub loadconfig {
 	}
 
 	if ($config{PT_USERKILL}) {
-		$warning .= "*WARNING* PT_USERKILL should not normally be enabled as it can easily lead to legitimate processes being terminated, use csf.pignore instead\n";
+	$warning .= "*WARNING* PT_USERKILL should not normally be enabled as it can easily lead to legitimate processes being terminated, use qhtlfirewall.pignore instead\n";
 	}
 
 	$config{cc_src} = "MaxMind";
@@ -439,7 +439,7 @@ sub systemcmd {
 ## start getdownloadserver
 sub getdownloadserver {
 	my @servers;
-	my $downloadservers = "/etc/csf/downloadservers";
+	my $downloadservers = "/etc/qhtlfirewall/downloadservers";
 	my $chosen;
 	if (-e $downloadservers) {
 		foreach my $line (slurp($downloadservers)) {
diff --git a/qhtlfirewall/ConfigServer/DisplayResellerUI.pm b/qhtlfirewall/ConfigServer/DisplayResellerUI.pm
index 2c61064..14960d5 100644
--- a/qhtlfirewall/ConfigServer/DisplayResellerUI.pm
+++ b/qhtlfirewall/ConfigServer/DisplayResellerUI.pm
@@ -20,7 +20,7 @@
 package ConfigServer::DisplayResellerUI;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use POSIX qw(:sys_wait_h sysconf strftime);
 use File::Basename;
@@ -54,7 +54,7 @@ sub main {
 	$images = shift;
 	$myv = shift;
 
-	open (my $IN,"<","/etc/csf/csf.resellers");
+	open (my $IN,"<","/etc/qhtlfirewall/qhtlfirewall.resellers");
 	flock ($IN, LOCK_SH);
 	while (my $line = <$IN>) {
 		my ($user,$alert,$privs) = split(/\:/,$line);
@@ -100,11 +100,11 @@ sub main {
 				print "<table class='table table-bordered table-striped'>\n";
 				print "<tr><td>";
 				print "<p>Allowing $FORM{ip}...</p>\n<p><pre style='font-family: Courier New, Courier; font-size: 12px'>\n";
-				my $text = &printcmd("/usr/sbin/csf","-a",$FORM{ip},"ALLOW by Reseller $ENV{REMOTE_USER} ($FORM{comment})");
+				my $text = &printcmd("/usr/sbin/qhtlfirewall","-a",$FORM{ip},"ALLOW by Reseller $ENV{REMOTE_USER} ($FORM{comment})");
 				print "</p>\n<p>...<b>Done</b>.</p>\n";
 				print "</td></tr></table>\n";
 				if ($rprivs{$ENV{REMOTE_USER}}{ALERT}) {
-					open (my $IN, "<", "/usr/local/csf/tpl/reselleralert.txt");
+					open (my $IN, "<", "/usr/local/qhtlfirewall/tpl/reselleralert.txt");
 					flock ($IN, LOCK_SH);
 					my @alert = <$IN>;
 					close ($IN);
@@ -134,11 +134,11 @@ sub main {
 				print "<table class='table table-bordered table-striped'>\n";
 				print "<tr><td>";
 				print "<p>Blocking $FORM{ip}...</p>\n<p><pre style='font-family: Courier New, Courier; font-size: 12px'>\n";
-				my $text = &printcmd("/usr/sbin/csf","-d",$FORM{ip},"DENY by Reseller $ENV{REMOTE_USER} ($FORM{comment})");
+				my $text = &printcmd("/usr/sbin/qhtlfirewall","-d",$FORM{ip},"DENY by Reseller $ENV{REMOTE_USER} ($FORM{comment})");
 				print "</p>\n<p>...<b>Done</b>.</p>\n";
 				print "</td></tr></table>\n";
 				if ($rprivs{$ENV{REMOTE_USER}}{ALERT}) {
-					open (my $IN, "<", "/usr/local/csf/tpl/reselleralert.txt");
+					open (my $IN, "<", "/usr/local/qhtlfirewall/tpl/reselleralert.txt");
 					flock ($IN, LOCK_SH);
 					my @alert = <$IN>;
 					close ($IN);
@@ -163,22 +163,22 @@ sub main {
 			my $text = "";
 			if ($rprivs{$ENV{REMOTE_USER}}{ALERT}) {
 				my ($childin, $childout);
-				my $pid = open3($childin, $childout, $childout, "/usr/sbin/csf","-g",$FORM{ip});
+				my $pid = open3($childin, $childout, $childout, "/usr/sbin/qhtlfirewall","-g",$FORM{ip});
 				while (<$childout>) {$text .= $_}
 				waitpid ($pid, 0);
 			}
 			print "<table class='table table-bordered table-striped'>\n";
 			print "<tr><td>";
 			print "<p>Unblock $FORM{ip}, trying permanent blocks...</p>\n<p><pre style='font-family: Courier New, Courier; font-size: 12px'>\n";
-			my $text1 = &printcmd("/usr/sbin/csf","-dr",$FORM{ip});
+			my $text1 = &printcmd("/usr/sbin/qhtlfirewall","-dr",$FORM{ip});
 			print "</p>\n<p>...<b>Done</b>.</p>\n";
 			print "<p>Unblock $FORM{ip}, trying temporary blocks...</p>\n<p><pre style='font-family: Courier New, Courier; font-size: 12px'>\n";
-			my $text2 = &printcmd("/usr/sbin/csf","-tr",$FORM{ip});
+			my $text2 = &printcmd("/usr/sbin/qhtlfirewall","-tr",$FORM{ip});
 			print "</p>\n<p>...<b>Done</b>.</p>\n";
 			print "</td></tr></table>\n";
 			print "<p><form action='$script' method='post'><input type='hidden' name='mobi' value='$FORM{mobi}'><input type='submit' class='btn btn-default' value='Return'></form></p>\n";
 			if ($rprivs{$ENV{REMOTE_USER}}{ALERT}) {
-				open (my $IN, "<", "/usr/local/csf/tpl/reselleralert.txt");
+				open (my $IN, "<", "/usr/local/qhtlfirewall/tpl/reselleralert.txt");
 				flock ($IN, LOCK_SH);
 				my @alert = <$IN>;
 				close ($IN);
@@ -201,14 +201,14 @@ sub main {
 			print "<table class='table table-bordered table-striped'>\n";
 			print "<tr><td>";
 			print "<p>Searching for $FORM{ip}...</p>\n<p><pre style='font-family: Courier New, Courier; font-size: 12px'>\n";
-			&printcmd("/usr/sbin/csf","-g",$FORM{ip});
+			&printcmd("/usr/sbin/qhtlfirewall","-g",$FORM{ip});
 			print "</p>\n<p>...<b>Done</b>.</p>\n";
 			print "</td></tr></table>\n";
 			print "<p><form action='$script' method='post'><input type='submit' class='btn btn-default' value='Return'></form></p>\n";
 		}
 		else {
 			print "<table class='table table-bordered table-striped'>\n";
-			print "<thead><tr><th align='left' colspan='2'>csf - ConfigServer Firewall options for $ENV{REMOTE_USER}</th></tr></thead>";
+			print "<thead><tr><th align='left' colspan='2'>qhtlfirewall options for $ENV{REMOTE_USER}</th></tr></thead>";
 			if ($rprivs{$ENV{REMOTE_USER}}{ALLOW}) {print "<tr><td><form action='$script' method='post'><input type='hidden' name='action' value='qallow'><input type='submit' class='btn btn-default' value='Quick Allow'></td><td width='100%'>Allow IP address <input type='text' name='ip' id='allowip' value='' size='18' style='background-color: lightgreen'> through the firewall and add to the allow file (csf.allow).<br>Comment for Allow: <input type='text' name='comment' value='' size='30'> (required)</form></td></tr>\n"}
 			if ($rprivs{$ENV{REMOTE_USER}}{DENY}) {print "<tr><td><form action='$script' method='post'><input type='hidden' name='action' value='qdeny'><input type='submit' class='btn btn-default' value='Quick Deny'></td><td width='100%'>Block IP address <input type='text' name='ip' value='' size='18' style='background-color: pink'> in the firewall and add to the deny file (csf.deny).<br>Comment for Block: <input type='text' name='comment' value='' size='30'> (required)</form></td></tr>\n"}
 			if ($rprivs{$ENV{REMOTE_USER}}{UNBLOCK}) {print "<tr><td><form action='$script' method='post'><input type='hidden' name='action' value='qkill'><input type='submit' class='btn btn-default' value='Quick Unblock'></td><td width='100%'>Remove IP address <input type='text' name='ip' value='' size='18'> from the firewall (temp and perm blocks)</form></td></tr>\n"}
@@ -218,8 +218,8 @@ sub main {
 	}
 
 	print "<br>\n";
-	print "<pre>csf: v$myv</pre>";
-	print "<p>&copy;2006-2023, <a href='http://www.configserver.com' target='_blank'>ConfigServer Services</a> (Jonathan Michaelson)</p>\n";
+	print "<pre>qhtlfirewall: v$myv</pre>";
+	print "<p>&copy;2006-2025, <a href='https://github.com/waytotheweb/scripts' target='_blank'>QHTL</a></p>\n";
 
 	return;
 }
diff --git a/qhtlfirewall/ConfigServer/DisplayUI.pm b/qhtlfirewall/ConfigServer/DisplayUI.pm
index 22d02e2..5fd87f9 100644
--- a/qhtlfirewall/ConfigServer/DisplayUI.pm
+++ b/qhtlfirewall/ConfigServer/DisplayUI.pm
@@ -20,7 +20,7 @@
 package ConfigServer::DisplayUI;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use File::Basename;
 use File::Copy;
@@ -88,16 +88,16 @@ sub main {
 		if (!defined ConfigServer::ServerStats::init()) {$chart = 0}
 	}
 
-	$urlget = ConfigServer::URLGet->new($config{URLGET}, "csf/$myv", $config{URLPROXY});
+	$urlget = ConfigServer::URLGet->new($config{URLGET}, "qhtlfirewall/$myv", $config{URLPROXY});
 	unless (defined $urlget) {
 		$config{URLGET} = 1;
-		$urlget = ConfigServer::URLGet->new($config{URLGET}, "csf/$myv", $config{URLPROXY});
+		$urlget = ConfigServer::URLGet->new($config{URLGET}, "qhtlfirewall/$myv", $config{URLPROXY});
 		print "<p>*WARNING* URLGET set to use LWP but perl module is not installed, reverting to HTTP::Tiny<p>\n";
 	}
 
 	if ($config{RESTRICT_UI} == 2) {
 		print "<table class='table table-bordered table-striped'>\n";
-		print "<tr><td><font color='red'>csf UI Disabled via the RESTRICT_UI option in /etc/csf/csf.conf</font></td></tr>\n";
+		print "<tr><td><font color='red'>qhtlfirewall UI Disabled via the RESTRICT_UI option in /etc/qhtlfirewall/qhtlfirewall.conf</font></td></tr>\n";
 		print "</tr></table>\n";
 		exit;
 	}
@@ -117,20 +117,20 @@ sub main {
 		print "<div><p>Checking version...</p>\n\n";
 		my ($upgrade, $actv) = &manualversion($myv);
 		if ($upgrade) {
-			print "<form action='$script' method='post'><button name='action' value='upgrade' type='submit' class='btn btn-default'>Upgrade csf</button> A new version of csf (v$actv) is available. Upgrading will retain your settings. <a href='https://$config{DOWNLOADSERVER}/csf/changelog.txt' target='_blank'>View ChangeLog</a></form>\n";
+			print "<form action='$script' method='post'><button name='action' value='upgrade' type='submit' class='btn btn-default'>Upgrade qhtlfirewall</button> A new version of qhtlfirewall (v$actv) is available. Upgrading will retain your settings. <a href='https://$config{DOWNLOADSERVER}/qhtlfirewall/changelog.txt' target='_blank'>View ChangeLog</a></form>\n";
 		} else {
 			if ($actv ne "") {
 				print "<div class='bs-callout bs-callout-danger'>$actv</div>\n";
 			}
 			else {
-				print "<div class='bs-callout bs-callout-info'>You are running the latest version of csf (v$myv). An Upgrade button will appear here if a new version becomes available</div>\n";
+				print "<div class='bs-callout bs-callout-info'>You are running the latest version of qhtlfirewall (v$myv). An Upgrade button will appear here if a new version becomes available</div>\n";
 			}
 		}
 		print "</div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "lfdstatus") {
-		print "<div><p>Show lfd status...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+		print "<div><p>Show qhtlwaterfall status...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 		ConfigServer::Service::statuslfd();
 		print "</pre>\n<p>...<b>Done</b>.</div>\n";
 		&printreturn;
@@ -145,25 +145,25 @@ sub main {
 		&systemstats($FORM{graph});
 	}
 	elsif ($FORM{action} eq "lfdstart") {
-		print "<div><p>Starting lfd...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+	print "<div><p>Starting qhtlwaterfall...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 		ConfigServer::Service::startlfd();
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "lfdrestart") {
 		if ($config{THIS_UI}) {
-			print "<div><p>Signal lfd to <i>restart</i>...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-			sysopen (my $OUT, "/var/lib/csf/lfd.restart",, O_WRONLY | O_CREAT) or die "Unable to open file: $!";
+			print "<div><p>Signal qhtlwaterfall to <i>restart</i>...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+			sysopen (my $OUT, "/var/lib/qhtlfirewall/qhtlwaterfall.restart",, O_WRONLY | O_CREAT) or die "Unable to open file: $!";
 			close ($OUT);
 		} else {
-			print "<div><p>Restarting lfd...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+			print "<div><p>Restarting qhtlwaterfall...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 			ConfigServer::Service::restartlfd();
 		}
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "lfdstop") {
-		print "<div><p>Stopping lfd...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+	print "<div><p>Stopping qhtlwaterfall...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 		ConfigServer::Service::stoplfd();
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
@@ -171,36 +171,36 @@ sub main {
 	elsif ($FORM{action} eq "status") {
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-		&printcmd("/usr/sbin/csf","-l");
+		&printcmd("/usr/sbin/qhtlfirewall","-l");
 		if ($config{IPV6}) {
 			print "\n\nip6tables:\n\n";
-			&printcmd("/usr/sbin/csf","-l6");
+			&printcmd("/usr/sbin/qhtlfirewall","-l6");
 		}
 		print "</pre>\n";
 		&resize("bot",1);
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "start") {
-		print "<div><p>Starting csf...</p>\n";
+	print "<div><p>Starting qhtlfirewall...</p>\n";
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-		&printcmd("/usr/sbin/csf","-sf");
+		&printcmd("/usr/sbin/qhtlfirewall","-sf");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&resize("bot",1);
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "restart") {
-		print "<div><p>Restarting csf...</p>\n";
+	print "<div><p>Restarting qhtlfirewall...</p>\n";
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-		&printcmd("/usr/sbin/csf","-sf");
+		&printcmd("/usr/sbin/qhtlfirewall","-sf");
 		print "</pre>\n<p>...<b>Done</b>.</div>\n";
 		&resize("bot",1);
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "restartq") {
-		print "<div><p>Restarting csf via lfd...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-q");
+	print "<div><p>Restarting qhtlfirewall via qhtlwaterfall...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+		&printcmd("/usr/sbin/qhtlfirewall","-q");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
@@ -208,8 +208,8 @@ sub main {
 		print "<table class='table table-bordered table-striped'>\n";
 		print "<thead><tr><th>&nbsp;</th><th>A/D</th><th>IP address</th><th>Port</th><th>Dir</th><th>Time To Live</th><th>Comment</th></tr></thead>\n";
 		my @deny;
-		if (! -z "/var/lib/csf/csf.tempban") {
-			open (my $IN, "<", "/var/lib/csf/csf.tempban") or die $!;
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
+			open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempban") or die $!;
 			flock ($IN, LOCK_SH);
 			@deny = <$IN>;
 			chomp @deny;
@@ -238,8 +238,8 @@ sub main {
 			print "<td>DENY</td><td>$ip</td><td>$port</td><td>$inout</td><td>$time</td><td>$message</td></tr>\n";
 		}
 		my @allow;
-		if (! -z "/var/lib/csf/csf.tempallow") {
-			open (my $IN, "<", "/var/lib/csf/csf.tempallow") or die $!;
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
+			open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") or die $!;
 			flock ($IN, LOCK_SH);
 			@allow = <$IN>;
 			chomp @allow;
@@ -277,27 +277,27 @@ sub main {
 	elsif ($FORM{action} eq "temprm") {
 		print "<div><p>Removing all temporary entries:</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 		if ($FORM{ip} eq "all") {
-			&printcmd("/usr/sbin/csf","-tf");
+			&printcmd("/usr/sbin/qhtlfirewall","-tf");
 		}
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='temp'><input type='submit' class='btn btn-default' value='Return'></form></div>\n";
 	}
 	elsif ($FORM{action} eq "temprmd") {
 		print "<div><p>Removing temporary deny entry for $FORM{ip}:</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-trd",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-trd",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='temp'><input type='submit' class='btn btn-default' value='Return'></form></div>\n";
 	}
 	elsif ($FORM{action} eq "temprma") {
 		print "<div><p>Removing temporary allow entry for $FORM{ip}:</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-tra",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-tra",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='temp'><input type='submit' class='btn btn-default' value='Return'></form></div>\n";
 	}
 	elsif ($FORM{action} eq "temptoperm") {
 		print "<div><p>Permanent ban for $FORM{ip}:</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-tr",$FORM{ip});
-		&printcmd("/usr/sbin/csf","-d",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-tr",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-d",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='temp'><input type='submit' class='btn btn-default' value='Return'></form></div>\n";
 	}
@@ -309,39 +309,39 @@ sub main {
 		if ($FORM{ports} eq "") {$FORM{ports} = "*"}
 		print "<div><p>Temporarily $FORM{do}ing $FORM{ip} for $FORM{timeout} seconds:</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 		if ($FORM{do} eq "block") {
-			&printcmd("/usr/sbin/csf","-td",$FORM{ip},$FORM{timeout},"-p",$FORM{ports},$FORM{comment});
+			&printcmd("/usr/sbin/qhtlfirewall","-td",$FORM{ip},$FORM{timeout},"-p",$FORM{ports},$FORM{comment});
 		} else {
-			&printcmd("/usr/sbin/csf","-ta",$FORM{ip},$FORM{timeout},"-p",$FORM{ports},$FORM{comment});
+			&printcmd("/usr/sbin/qhtlfirewall","-ta",$FORM{ip},$FORM{timeout},"-p",$FORM{ports},$FORM{comment});
 		}
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "stop") {
-		print "<div><p>Stopping csf...</p>\n";
+	print "<div><p>Stopping qhtlfirewall...</p>\n";
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-		&printcmd("/usr/sbin/csf","-f");
+		&printcmd("/usr/sbin/qhtlfirewall","-f");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&resize("bot",1);
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "disable") {
-		print "<div><p>Disabling csf...</p>\n";
+	print "<div><p>Disabling qhtlfirewall...</p>\n";
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-		&printcmd("/usr/sbin/csf","-x");
+		&printcmd("/usr/sbin/qhtlfirewall","-x");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&resize("bot",1);
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "enable") {
 		if ($config{THIS_UI}) {
-			print "<div><p>You must login to the root shell to enable csf using:\n<p><b>csf -e</b></p>\n";
+			print "<div><p>You must login to the root shell to enable qhtlfirewall using:\n<p><b>qhtlfirewall -e</b></p>\n";
 		} else {
-			print "<div><p>Enabling csf...</p>\n";
+			print "<div><p>Enabling qhtlfirewall...</p>\n";
 			&resize("top");
 			print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-			&printcmd("/usr/sbin/csf","-e");
+			&printcmd("/usr/sbin/qhtlfirewall","-e");
 			print "</pre>";
 			&resize("bot",1);
 		}
@@ -359,7 +359,7 @@ sub main {
 			$CSFfrombot = 400;
 			$CSFfromright = 150;
 		}
-		my @data = slurp("/etc/csf/csf.syslogs");
+		my @data = slurp("/etc/qhtlfirewall/qhtlfirewall.syslogs");
 		foreach my $line (@data) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -382,7 +382,7 @@ sub main {
 				if (-f $globfile) {
 					my $size = int((stat($globfile))[7]/1024);
 					$options .= "<option value='$cnt'";
-					if ($globfile eq "/var/log/lfd.log") {$options .= " selected"}
+					if ($globfile eq "/var/log/qhtlwaterfall.log") {$options .= " selected"}
 					$options .= ">$globfile ($size kb)</option>\n";
 					$cnt++;
 				}
@@ -390,7 +390,7 @@ sub main {
 		}
 		$options .= "</select>\n";
 		
-		open (my $AJAX, "<", "/usr/local/csf/lib/csfajaxtail.js");
+		open (my $AJAX, "<", "/usr/local/qhtlfirewall/lib/csfajaxtail.js");
 		flock ($AJAX, LOCK_SH);
 		my @jsdata = <$AJAX>;
 		close ($AJAX);
@@ -430,7 +430,7 @@ EOF
 		$FORM{lines} =~ s/\D//g;
 		if ($FORM{lines} eq "" or $FORM{lines} == 0) {$FORM{lines} = 30}
 
-		my @data = slurp("/etc/csf/csf.syslogs");
+		my @data = slurp("/etc/qhtlfirewall/qhtlfirewall.syslogs");
 		foreach my $line (@data) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -439,7 +439,7 @@ EOF
 		}
 		@data = sort @data;
 		my $cnt = 0;
-		my $logfile = "/var/log/lfd.log";
+		my $logfile = "/var/log/qhtlwaterfall.log";
 		my $hit = 0;
 		foreach my $file (@data) {
 			$file =~ s/$cleanreg//g;
@@ -501,7 +501,7 @@ EOF
 			$CSFfrombot = 400;
 			$CSFfromright = 150;
 		}
-		my @data = slurp("/etc/csf/csf.syslogs");
+		my @data = slurp("/etc/qhtlfirewall/qhtlfirewall.syslogs");
 		foreach my $line (@data) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -524,7 +524,7 @@ EOF
 				if (-f $globfile) {
 					my $size = int((stat($globfile))[7]/1024);
 					$options .= "<option value='$cnt'";
-					if ($globfile eq "/var/log/lfd.log") {$options .= " selected"}
+					if ($globfile eq "/var/log/qhtlwaterfall.log") {$options .= " selected"}
 					$options .= ">$globfile ($size kb)</option>\n";
 					$cnt++;
 				}
@@ -532,7 +532,7 @@ EOF
 		}
 		$options .= "</select>\n";
 		
-		open (my $AJAX, "<", "/usr/local/csf/lib/csfajaxtail.js");
+		open (my $AJAX, "<", "/usr/local/qhtlfirewall/lib/csfajaxtail.js");
 		flock ($AJAX, LOCK_SH);
 		my @jsdata = <$AJAX>;
 		close ($AJAX);
@@ -549,7 +549,7 @@ EOF
 <img src="$images/loader.gif" id="CSFrefreshing" style="display:none" /></div>
 <div class='pull-right btn-group'><button class='btn btn-default' id='fontminus-btn'><strong>a</strong><span class='glyphicon glyphicon-arrow-down icon-configserver'></span></button>
 <button class='btn btn-default' id='fontplus-btn'><strong>A</strong><span class='glyphicon glyphicon-arrow-up icon-configserver'></span></button></div>
-<pre class='comment' id="CSFajax" style="overflow:auto;height:500px;resize:both; white-space: pre-wrap;clear: both">
+<pre class='comment' id="CSFajax" style="overflow:auto;height:500px;resize:both; white-space: pre-wrap;clear:both">
 Please Note:
 
  1. Searches use $config{GREP}/$config{ZGREP} if wildcard is used), so the search text/regex must be syntactically correct
@@ -557,8 +557,7 @@ Please Note:
  3. Use the "-E" option to perform an extended regular expression search
  4. Searching large log files can take a long time. This feature has a 30 second timeout
  5. The searched for text will usually be <mark>highlighted</mark> but may not always be successful
- 6. Only log files listed in /etc/csf/csf.syslogs can be searched. You can add to this file
- 7. The wildcard option will use $config{ZGREP} and search logs with a wildcard suffix, e.g. /var/log/lfd.log*
+ 6. Only log files listed in /etc/qhtlfirewall/qhtlfirewall.syslogs can be searched. You can add to this file
 </pre>
 
 <script>
@@ -583,7 +582,7 @@ EOF
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "loggrepcmd") {
-		my @data = slurp("/etc/csf/csf.syslogs");
+		my @data = slurp("/etc/qhtlfirewall/qhtlfirewall.syslogs");
 		foreach my $line (@data) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -592,7 +591,7 @@ EOF
 		}
 		@data = sort @data;
 		my $cnt = 0;
-		my $logfile = "/var/log/lfd.log";
+		my $logfile = "/var/log/qhtlwaterfall.log";
 		my $hit = 0;
 		foreach my $file (@data) {
 			$file =~ s/$cleanreg//g;
@@ -630,6 +629,7 @@ EOF
 				eval {
 					local $SIG{__DIE__} = undef;
 					local $SIG{'ALRM'} = sub {die};
+					alarm($timeout);
 					my $total;
 					if ($FORM{grepZ}) {
 						foreach my $file (glob $logfile."\*") {
@@ -696,7 +696,7 @@ EOF
 	elsif ($FORM{action} eq "readme") {
 		&resize("top");
 		print "<pre id='output' class='comment' style='white-space: pre-wrap;height: 500px; overflow: auto; resize:both; clear:both'>\n";
-		open (my $IN, "<", "/etc/csf/readme.txt") or die $!;
+		open (my $IN, "<", "/etc/qhtlfirewall/readme.txt") or die $!;
 		flock ($IN, LOCK_SH);
 		my @readme = <$IN>;
 		close ($IN);
@@ -714,15 +714,15 @@ EOF
 	elsif ($FORM{action} eq "servercheck") {
 		print ConfigServer::ServerCheck::report($FORM{verbose});
 
-		open (my $IN, "<", "/etc/cron.d/csf-cron");
+	open (my $IN, "<", "/etc/cron.d/qhtlfirewall-cron");
 		flock ($IN, LOCK_SH);
 		my @data = <$IN>;
 		close ($IN);
 		chomp @data;
 		my $optionselected = "never";
 		my $email;
-		if (my @ls = grep {$_ =~ /csf \-m/} @data) {
-			if ($ls[0] =~ /\@(\w+)\s+root\s+\/usr\/sbin\/csf \-m (.*)/) {$optionselected = $1; $email = $2}
+		if (my @ls = grep {$_ =~ /qhtlfirewall \-m/} @data) {
+			if ($ls[0] =~ /\@(\w+)\s+root\s+\/usr\/sbin\/qhtlfirewall \-m (.*)/) {$optionselected = $1; $email = $2}
 		}
 		print "<br><div><form action='$script' method='post'><input type='hidden' name='action' value='serverchecksave'>\n";
 		print "Generate and email this report <select name='freq'>\n";
@@ -743,7 +743,7 @@ EOF
 		if ($FORM{email} =~ /^[a-zA-Z0-9\-\_\.\@\+]+$/) {$email = $FORM{email}}
 		foreach my $option ("never","hourly","daily","weekly","monthly") {if ($FORM{freq} eq $option) {$freq = $option}}
 		unless ($email) {$freq = "never"; $extra = "(no valid email address supplied)";}
-		sysopen (my $CRON, "/etc/cron.d/csf-cron", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+	sysopen (my $CRON, "/etc/cron.d/qhtlfirewall-cron", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 		flock ($CRON, LOCK_EX);
 		my @data = <$CRON>;
 		chomp @data;
@@ -751,9 +751,9 @@ EOF
 		truncate ($CRON, 0);
 		my $done = 0;
 		foreach my $line (@data) {
-			if ($line =~ /csf \-m/) {
+			if ($line =~ /qhtlfirewall \-m/) {
 				if ($freq and ($freq ne "never") and !$done) {
-					print $CRON "\@$freq root /usr/sbin/csf -m $email\n";
+					print $CRON "\@$freq root /usr/sbin/qhtlfirewall -m $email\n";
 					$done = 1;
 				}
 			} else {
@@ -761,7 +761,7 @@ EOF
 			}
 		}
 		if (!$done and ($freq ne "never")) {
-				print $CRON "\@$freq root /usr/sbin/csf -m $email\n";
+				print $CRON "\@$freq root /usr/sbin/qhtlfirewall -m $email\n";
 		}
 		close ($CRON);
 
@@ -778,17 +778,17 @@ EOF
 		print "<div><b>These options can take a long time to run</b> (several minutes) depending on the number of IP addresses to check and the response speed of the DNS requests:</div>\n";
 		print "<br><div><form action='$script' method='post'><input type='hidden' name='action' value='rblcheck'><input type='hidden' name='verbose' value='1'><input type='submit' class='btn btn-default' value='Update All Checks (standard)'> Generates the normal report showing exceptions only</form></div>\n";
 		print "<br><div><form action='$script' method='post'><input type='hidden' name='action' value='rblcheck'><input type='hidden' name='verbose' value='2'><input type='submit' class='btn btn-default' value='Update All Checks (verbose)'> Generates the normal report but shows successes and failures</form></div>\n";
-		print "<br><div><form action='$script' method='post'><input type='hidden' name='action' value='rblcheckedit'><input type='submit' class='btn btn-default' value='Edit RBL Options'> Edit csf.rblconf to enable and disable IPs and RBLs</form></div>\n";
+	print "<br><div><form action='$script' method='post'><input type='hidden' name='action' value='rblcheckedit'><input type='submit' class='btn btn-default' value='Edit RBL Options'> Edit qhtlfirewall.rblconf to enable and disable IPs and RBLs</form></div>\n";
 
-		open (my $IN, "<", "/etc/cron.d/csf-cron");
+	open (my $IN, "<", "/etc/cron.d/qhtlfirewall-cron");
 		flock ($IN, LOCK_SH);
 		my @data = <$IN>;
 		close ($IN);
 		chomp @data;
 		my $optionselected = "never";
 		my $email;
-		if (my @ls = grep {$_ =~ /csf \-\-rbl/} @data) {
-			if ($ls[0] =~ /\@(\w+)\s+root\s+\/usr\/sbin\/csf \-\-rbl (.*)/) {$optionselected = $1; $email = $2}
+		if (my @ls = grep {$_ =~ /qhtlfirewall \-\-rbl/} @data) {
+			if ($ls[0] =~ /\@(\w+)\s+root\s+\/usr\/sbin\/qhtlfirewall \-\-rbl (.*)/) {$optionselected = $1; $email = $2}
 		}
 		print "<br><div><form action='$script' method='post'><input type='hidden' name='action' value='rblchecksave'>\n";
 		print "Generate and email this report <select name='freq'>\n";
@@ -806,7 +806,7 @@ EOF
 		if ($FORM{email} =~ /^[a-zA-Z0-9\-\_\.\@\+]+$/) {$email = $FORM{email}}
 		foreach my $option ("never","hourly","daily","weekly","monthly") {if ($FORM{freq} eq $option) {$freq = $option}}
 		unless ($email) {$freq = "never"; $extra = "(no valid email address supplied)";}
-		sysopen (my $CRON, "/etc/cron.d/csf-cron", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+	sysopen (my $CRON, "/etc/cron.d/qhtlfirewall-cron", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 		flock ($CRON, LOCK_EX);
 		my @data = <$CRON>;
 		chomp @data;
@@ -814,9 +814,9 @@ EOF
 		truncate ($CRON, 0);
 		my $done = 0;
 		foreach my $line (@data) {
-			if ($line =~ /csf \-\-rbl/) {
+			if ($line =~ /qhtlfirewall \-\-rbl/) {
 				if ($freq and ($freq ne "never") and !$done) {
-					print $CRON "\@$freq root /usr/sbin/csf --rbl $email\n";
+					print $CRON "\@$freq root /usr/sbin/qhtlfirewall --rbl $email\n";
 					$done = 1;
 				}
 			} else {
@@ -824,7 +824,7 @@ EOF
 			}
 		}
 		if (!$done and ($freq ne "never")) {
-				print $CRON "\@$freq root /usr/sbin/csf --rbl $email\n";
+				print $CRON "\@$freq root /usr/sbin/qhtlfirewall --rbl $email\n";
 		}
 		close ($CRON);
 
@@ -836,33 +836,33 @@ EOF
 		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='rblcheck'><input type='submit' class='btn btn-default' value='Return'></form></div>\n";
 	}
 	elsif ($FORM{action} eq "rblcheckedit") {
-		&editfile("/etc/csf/csf.rblconf","saverblcheckedit");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.rblconf","saverblcheckedit");
 		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='rblcheck'><input type='submit' class='btn btn-default' value='Return'></form></div>\n";
 	}
 	elsif ($FORM{action} eq "saverblcheckedit") {
-		&savefile("/etc/csf/csf.rblconf","");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.rblconf","");
 		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='rblcheck'><input type='submit' class='btn btn-default' value='Return'></form></div>\n";
 	}
 	elsif ($FORM{action} eq "cloudflareedit") {
-		&editfile("/etc/csf/csf.cloudflare","savecloudflareedit");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.cloudflare","savecloudflareedit");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savecloudflareedit") {
-		&savefile("/etc/csf/csf.cloudflare","");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.cloudflare","");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "restartboth") {
-		print "<div><p>Restarting csf...</p>\n";
+		print "<div><p>Restarting qhtlfirewall...</p>\n";
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-		&printcmd("/usr/sbin/csf","-sf");
+		&printcmd("/usr/sbin/qhtlfirewall","-sf");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		if ($config{THIS_UI}) {
-			print "<div><p>Signal lfd to <i>restart</i>...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-			sysopen (my $OUT, "/var/lib/csf/lfd.restart",, O_WRONLY | O_CREAT) or die "Unable to open file: $!";
+			print "<div><p>Signal qhtlwaterfall to <i>restart</i>...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+			sysopen (my $OUT, "/var/lib/qhtlfirewall/qhtlwaterfall.restart",, O_WRONLY | O_CREAT) or die "Unable to open file: $!";
 			close ($OUT);
 		} else {
-			print "<div><p>Restarting lfd...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+			print "<div><p>Restarting qhtlwaterfall...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 			ConfigServer::Service::restartlfd();
 		}
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
@@ -871,36 +871,36 @@ EOF
 	}
 	elsif ($FORM{action} eq "remapf") {
 		print "<div><p>Removing APF/BFD...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("sh","/usr/local/csf/bin/remove_apf_bfd.sh");
+		&printcmd("sh","/usr/local/qhtlfirewall/bin/remove_apf_bfd.sh");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		print "<div><p><b>Note: You should check the root cron and /etc/crontab to ensure that there are no apf or bfd related cron jobs remaining</b></p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "qallow") {
 		print "<div><p>Allowing $FORM{ip}...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-a",$FORM{ip},$FORM{comment});
+		&printcmd("/usr/sbin/qhtlfirewall","-a",$FORM{ip},$FORM{comment});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "qdeny") {
 		print "<div><p>Blocking $FORM{ip}...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-d",$FORM{ip},$FORM{comment});
+		&printcmd("/usr/sbin/qhtlfirewall","-d",$FORM{ip},$FORM{comment});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "qignore") {
 		print "<div><p>Ignoring $FORM{ip}...\n";
-		open (my $OUT, ">>", "/etc/csf/csf.ignore");
+		open (my $OUT, ">>", "/etc/qhtlfirewall/qhtlfirewall.ignore");
 		flock ($OUT, LOCK_EX);
 		print $OUT "$FORM{ip}\n";
 		close ($OUT);
 		print "<b>Done</b>.</p></div>\n";
 		if ($config{THIS_UI}) {
-			print "<div><p>Signal lfd to <i>restart</i>...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-			sysopen (my $OUT, "/var/lib/csf/lfd.restart",, O_WRONLY | O_CREAT) or die "Unable to open file: $!";
+			print "<div><p>Signal qhtlwaterfall to <i>restart</i>...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+			sysopen (my $OUT, "/var/lib/qhtlfirewall/qhtlwaterfall.restart",, O_WRONLY | O_CREAT) or die "Unable to open file: $!";
 			close ($OUT);
 		} else {
-			print "<div><p>Restarting lfd...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+			print "<div><p>Restarting qhtlwaterfall...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 			ConfigServer::Service::restartlfd();
 		}
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
@@ -908,19 +908,19 @@ EOF
 	}
 	elsif ($FORM{action} eq "kill") {
 		print "<div><p>Unblock $FORM{ip}, trying permanent blocks...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-dr",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-dr",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		print "<div><p>Unblock $FORM{ip}, trying temporary blocks...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-trd",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-trd",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "killallow") {
 		print "<div><p>Unblock $FORM{ip}, trying permanent blocks...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-ar",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-ar",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		print "<div><p>Unblock $FORM{ip}, trying temporary blocks...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-tra",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-tra",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
@@ -929,14 +929,14 @@ EOF
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
 		my ($childin, $childout);
-		my $pid = open3($childin, $childout, $childout, "/usr/sbin/csf","-g",$FORM{ip});
+		my $pid = open3($childin, $childout, $childout, "/usr/sbin/qhtlfirewall","-g",$FORM{ip});
 		my $unblock;
 		my $unallow;
 		while (<$childout>) {
 			my $line = $_;
-			if ($line =~ /^csf.deny:\s(\S+)\s*/) {$unblock = 1}
+			if ($line =~ /^qhtlfirewall.deny:\s(\S+)\s*/) {$unblock = 1}
 			if ($line =~ /^Temporary Blocks: IP:(\S+)\s*/) {$unblock = 1}
-			if ($line =~ /^csf.allow:\s(\S+)\s*/) {$unallow = 1}
+			if ($line =~ /^qhtlfirewall.allow:\s(\S+)\s*/) {$unallow = 1}
 			if ($line =~ /^Temporary Allows: IP:(\S+)\s*/) {$unallow = 1}
 			print $_;
 		}
@@ -949,19 +949,19 @@ EOF
 	}
 	elsif ($FORM{action} eq "callow") {
 		print "<div><p>Cluster Allow $FORM{ip}...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-ca",$FORM{ip},$FORM{comment});
+		&printcmd("/usr/sbin/qhtlfirewall","-ca",$FORM{ip},$FORM{comment});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "cignore") {
 		print "<div><p>Cluster Ignore $FORM{ip}...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-ci",$FORM{ip},$FORM{comment});
+		&printcmd("/usr/sbin/qhtlfirewall","-ci",$FORM{ip},$FORM{comment});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "cirm") {
 		print "<div><p>Cluster Remove ignore $FORM{ip}...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-cir",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-cir",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
@@ -971,30 +971,30 @@ EOF
 	elsif ($FORM{action} eq "cflist") {
 		print "<div class='panel panel-info'><div class='panel-heading'>CloudFlare list $FORM{type} rules for user(s) $FORM{domains}:</div>\n";
 		print "<div class='panel-body'><pre class='comment' style='white-space: pre-wrap;'>";
-		&printcmd("/usr/sbin/csf","--cloudflare","list",$FORM{type},$FORM{domains});
+		&printcmd("/usr/sbin/qhtlfirewall","--cloudflare","list",$FORM{type},$FORM{domains});
 		print "</pre>\n</div></div>\n";
 	}
 	elsif ($FORM{action} eq "cftempdeny") {
 		print "<div class='panel panel-info'><div class='panel-heading'>CloudFlare $FORM{do} $FORM{target} for user(s) $FORM{domains}:</div>\n";
 		print "<div class='panel-body'><pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","--cloudflare","tempadd",$FORM{do},$FORM{target},$FORM{domains});
+		&printcmd("/usr/sbin/qhtlfirewall","--cloudflare","tempadd",$FORM{do},$FORM{target},$FORM{domains});
 		print "</pre>\n</div></div>\n";
 	}
 	elsif ($FORM{action} eq "cfadd") {
 		print "<div class='panel panel-info'><div class='panel-heading'>CloudFlare Add $FORM{type} $FORM{target} for user(s) $FORM{domains}:</div>\n";
 		print "<div class='panel-body'><pre class='comment' style='white-space: pre-wrap;'>";
-		&printcmd("/usr/sbin/csf","--cloudflare","add",$FORM{type},$FORM{target},$FORM{domains});
+		&printcmd("/usr/sbin/qhtlfirewall","--cloudflare","add",$FORM{type},$FORM{target},$FORM{domains});
 		print "</pre>\n</div></div>\n";
 	}
 	elsif ($FORM{action} eq "cfremove") {
 		print "<div class='panel panel-info'><div class='panel-heading'>CloudFlare Delete $FORM{type} $FORM{target} for user(s) $FORM{domains}:</div>\n";
 		print "<div class='panel-body'><pre class='comment' style='white-space: pre-wrap;'>";
-		&printcmd("/usr/sbin/csf","--cloudflare","del", $FORM{target},$FORM{domains});
+		&printcmd("/usr/sbin/qhtlfirewall","--cloudflare","del", $FORM{target},$FORM{domains});
 		print "</pre>\n</div></div>\n";
 	}
 	elsif ($FORM{action} eq "cdeny") {
 		print "<div><p>Cluster Deny $FORM{ip}...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-cd",$FORM{ip},$FORM{comment});
+		&printcmd("/usr/sbin/qhtlfirewall","-cd",$FORM{ip},$FORM{comment});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
@@ -1006,28 +1006,28 @@ EOF
 		if ($FORM{ports} eq "") {$FORM{ports} = "*"}
 		print "<div><p>cluster Temporarily $FORM{do}ing $FORM{ip} for $FORM{timeout} seconds:</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
 		if ($FORM{do} eq "block") {
-			&printcmd("/usr/sbin/csf","-ctd",$FORM{ip},$FORM{timeout},"-p",$FORM{ports},$FORM{comment});
+			&printcmd("/usr/sbin/qhtlfirewall","-ctd",$FORM{ip},$FORM{timeout},"-p",$FORM{ports},$FORM{comment});
 		} else {
-			&printcmd("/usr/sbin/csf","-cta",$FORM{ip},$FORM{timeout},"-p",$FORM{ports},$FORM{comment});
+			&printcmd("/usr/sbin/qhtlfirewall","-cta",$FORM{ip},$FORM{timeout},"-p",$FORM{ports},$FORM{comment});
 		}
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "crm") {
 		print "<div><p>Cluster Remove Deny $FORM{ip}...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-cr",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-cr",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "carm") {
 		print "<div><p>Cluster Remove Allow $FORM{ip}...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-car",$FORM{ip});
+		&printcmd("/usr/sbin/qhtlfirewall","-car",$FORM{ip});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "cping") {
 		print "<div><p>Cluster PING...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-cp");
+		&printcmd("/usr/sbin/qhtlfirewall","-cp");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
@@ -1035,7 +1035,7 @@ EOF
 		print "<div><p>Cluster GREP for $FORM{ip}...</p>\n";
 		print "<pre class='comment' style='white-space: pre-wrap;'>\n";
 		my ($childin, $childout);
-		my $pid = open3($childin, $childout, $childout, "/usr/sbin/csf","-cg",$FORM{ip});
+	my $pid = open3($childin, $childout, $childout, "/usr/sbin/qhtlfirewall","-cg",$FORM{ip});
 		my $unblock;
 		my $start = 0;
 		while (<$childout>) {
@@ -1060,7 +1060,7 @@ EOF
 		$FORM{option} =~ s/\s*//g;
 		my %restricted;
 		if ($config{RESTRICT_UI}) {
-			sysopen (my $IN, "/usr/local/csf/lib/restricted.txt", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+			sysopen (my $IN, "/usr/local/qhtlfirewall/lib/restricted.txt", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 			flock ($IN, LOCK_SH);
 			while (my $entry = <$IN>) {
 				chomp $entry;
@@ -1073,114 +1073,114 @@ EOF
 			exit;
 		}
 		print "<div><p>Cluster configuration option...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","-cc",$FORM{option},$FORM{value});
+		&printcmd("/usr/sbin/qhtlfirewall","-cc",$FORM{option},$FORM{value});
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "crestart") {
-		print "<div><p>Cluster restart csf and lfd...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf --crestart");
+		print "<div><p>Cluster restart qhtlfirewall and qhtlwaterfall...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
+		&printcmd("/usr/sbin/qhtlfirewall --crestart");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "allow") {
-		&editfile("/etc/csf/csf.allow","saveallow");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.allow","saveallow");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "saveallow") {
-		&savefile("/etc/csf/csf.allow","both");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.allow","both");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "redirect") {
-		&editfile("/etc/csf/csf.redirect","saveredirect");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.redirect","saveredirect");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "saveredirect") {
-		&savefile("/etc/csf/csf.redirect","both");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.redirect","both");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "smtpauth") {
-		&editfile("/etc/csf/csf.smtpauth","savesmtpauth");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.smtpauth","savesmtpauth");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savesmtpauth") {
-		&savefile("/etc/csf/csf.smtpauth","both");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.smtpauth","both");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "reseller") {
-		&editfile("/etc/csf/csf.resellers","savereseller");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.resellers","savereseller");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savereseller") {
-		&savefile("/etc/csf/csf.resellers","");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.resellers","");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "dirwatch") {
-		&editfile("/etc/csf/csf.dirwatch","savedirwatch");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.dirwatch","savedirwatch");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savedirwatch") {
-		&savefile("/etc/csf/csf.dirwatch","lfd");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.dirwatch","qhtlwaterfall");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "dyndns") {
-		&editfile("/etc/csf/csf.dyndns","savedyndns");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.dyndns","savedyndns");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savedyndns") {
-		&savefile("/etc/csf/csf.dyndns","lfd");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.dyndns","qhtlwaterfall");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "blocklists") {
-		&editfile("/etc/csf/csf.blocklists","saveblocklists");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.blocklists","saveblocklists");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "saveblocklists") {
-		&savefile("/etc/csf/csf.blocklists","both");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.blocklists","both");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "syslogusers") {
-		&editfile("/etc/csf/csf.syslogusers","savesyslogusers");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.syslogusers","savesyslogusers");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savesyslogusers") {
-		&savefile("/etc/csf/csf.syslogusers","lfd");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.syslogusers","qhtlwaterfall");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "logfiles") {
-		&editfile("/etc/csf/csf.logfiles","savelogfiles");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.logfiles","savelogfiles");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savelogfiles") {
-		&savefile("/etc/csf/csf.logfiles","lfd");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.logfiles","qhtlwaterfall");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "deny") {
-		&editfile("/etc/csf/csf.deny","savedeny");
+		&editfile("/etc/qhtlfirewall/qhtlfirewall.deny","savedeny");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savedeny") {
-		&savefile("/etc/csf/csf.deny","both");
+		&savefile("/etc/qhtlfirewall/qhtlfirewall.deny","both");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "templates") {
-		&editfile("/usr/local/csf/tpl/$FORM{template}","savetemplates","template");
+		&editfile("/usr/local/qhtlfirewall/tpl/$FORM{template}","savetemplates","template");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "savetemplates") {
-		&savefile("/usr/local/csf/tpl/$FORM{template}","",1);
+		&savefile("/usr/local/qhtlfirewall/tpl/$FORM{template}","",1);
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "ignorefiles") {
-		&editfile("/etc/csf/$FORM{ignorefile}","saveignorefiles","ignorefile");
+		&editfile("/etc/qhtlfirewall/$FORM{ignorefile}","saveignorefiles","ignorefile");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "saveignorefiles") {
-		&savefile("/etc/csf/$FORM{ignorefile}","lfd");
+		&savefile("/etc/qhtlfirewall/$FORM{ignorefile}","qhtlwaterfall");
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "conf") {
-		sysopen (my $IN, "/etc/csf/csf.conf", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+		sysopen (my $IN, "/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 		flock ($IN, LOCK_SH);
 		my @confdata = <$IN>;
 		close ($IN);
@@ -1188,7 +1188,7 @@ EOF
 
 		my %restricted;
 		if ($config{RESTRICT_UI}) {
-			sysopen (my $IN, "/usr/local/csf/lib/restricted.txt", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+			sysopen (my $IN, "/usr/local/qhtlfirewall/lib/restricted.txt", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 			flock ($IN, LOCK_SH);
 			while (my $entry = <$IN>) {
 				chomp $entry;
@@ -1208,7 +1208,7 @@ function CSFexpand(obj){
 </script>
 EOF
 		print "<style>.hidepiece\{display:none\}</style>\n";
-		open (my $DIV, "<", "/usr/local/csf/lib/csf.div");
+		open (my $DIV, "<", "/usr/local/qhtlfirewall/lib/csf.div");
 		flock ($DIV, LOCK_SH);
 		my @divdata = <$DIV>;
 		close ($DIV);
@@ -1321,7 +1321,7 @@ EOD
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "saveconf") {
-		sysopen (my $IN, "/etc/csf/csf.conf", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+		sysopen (my $IN, "/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 		flock ($IN, LOCK_SH);
 		my @confdata = <$IN>;
 		close ($IN);
@@ -1329,7 +1329,7 @@ EOD
 
 		my %restricted;
 		if ($config{RESTRICT_UI}) {
-			sysopen (my $IN, "/usr/local/csf/lib/restricted.txt", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+			sysopen (my $IN, "/usr/local/qhtlfirewall/lib/restricted.txt", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 			flock ($IN, LOCK_SH);
 			while (my $entry = <$IN>) {
 				chomp $entry;
@@ -1338,7 +1338,7 @@ EOD
 			close ($IN);
 		}
 
-		sysopen (my $OUT, "/etc/csf/csf.conf", O_WRONLY | O_CREAT) or die "Unable to open file: $!";
+		sysopen (my $OUT, "/etc/qhtlfirewall/qhtlfirewall.conf", O_WRONLY | O_CREAT) or die "Unable to open file: $!";
 		flock ($OUT, LOCK_EX);
 		seek ($OUT, 0, 0);
 		truncate ($OUT, 0);
@@ -1369,13 +1369,13 @@ EOD
 			if ($insane) {print "<br>WARNING: $key sanity check. $key = \"$newconfig{$key}\". Recommended range: $range (Default: $default)\n"}
 		}
 
-		print "<div>Changes saved. You should restart both csf and lfd.</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart csf+lfd'></form></div>\n";
+		print "<div>Changes saved. You should restart both qhtlfirewall and qhtlwaterfall.</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall+qhtlwaterfall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "viewlogs") {
-		if (-e "/var/lib/csf/stats/iptables_log") {
-			open (my $IN, "<", "/var/lib/csf/stats/iptables_log") or die "Unable to open file: $!";
+		if (-e "/var/lib/qhtlfirewall/stats/iptables_log") {
+			open (my $IN, "<", "/var/lib/qhtlfirewall/stats/iptables_log") or die "Unable to open file: $!";
 			flock ($IN, LOCK_SH);
 			my @iptables = <$IN>;
 			close ($IN);
@@ -1435,7 +1435,7 @@ EOD
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "sips") {
-		sysopen (my $IN, "/etc/csf/csf.sips", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+		sysopen (my $IN, "/etc/qhtlfirewall/qhtlfirewall.sips", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 		flock ($IN, LOCK_SH);
 		my @confdata = <$IN>;
 		close ($IN);
@@ -1446,7 +1446,7 @@ EOD
 		print "<tr><td><b>IP Address</b></td><td><b>Deny All Access to IP</b></td></tr>\n";
 
 		my %sips;
-		open (my $SIPS, "<","/etc/csf/csf.sips");
+		open (my $SIPS, "<","/etc/qhtlfirewall/qhtlfirewall.sips");
 		flock ($SIPS, LOCK_SH);
 		my @data = <$SIPS>;
 		close ($SIPS);
@@ -1484,13 +1484,13 @@ EOD
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "sipsave") {
-		open (my $IN,"<","/etc/csf/csf.sips");
+		open (my $IN,"<","/etc/qhtlfirewall/qhtlfirewall.sips");
 		flock ($IN, LOCK_SH);
 		my @data = <$IN>;
 		close ($IN);
 		chomp @data;
 
-		open (my $OUT,">","/etc/csf/csf.sips");
+		open (my $OUT,">","/etc/qhtlfirewall/qhtlfirewall.sips");
 		flock ($OUT, LOCK_EX);
 		foreach my $line (@data) {
 			if ($line =~ /^\#/) {print $OUT "$line\n"} else {last}
@@ -1504,22 +1504,22 @@ EOD
 		}
 		close($OUT);
 
-		print "<div>Changes saved. You should restart csf.</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restart'><input type='submit' class='btn btn-default' value='Restart csf'></form></div>\n";
+		print "<div>Changes saved. You should restart qhtlfirewall.</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restart'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "upgrade") {
 		if ($config{THIS_UI}) {
-			print "<div>You cannot upgrade through the UI as restarting lfd will interrupt this session. You must login to the root shell to upgrade csf using:\n<p><b>csf -u</b></div>\n";
+			print "<div>You cannot upgrade through the UI as restarting qhtlwaterfall will interrupt this session. You must login to the root shell to upgrade the firewall using:\n<p><b>qhtlfirewall -u</b></div>\n";
 		} else {
-			print "<div><p>Upgrading csf...</p>\n";
+			print "<div><p>Upgrading qhtlfirewall...</p>\n";
 			&resize("top");
 			print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-			&printcmd("/usr/sbin/csf","-u");
+			&printcmd("/usr/sbin/qhtlfirewall","-u");
 			print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 			&resize("bot",1);
 
-			open (my $IN, "<", "/etc/csf/version.txt") or die $!;
+			open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
 			flock ($IN, LOCK_SH);
 			$myv = <$IN>;
 			close ($IN);
@@ -1529,30 +1529,30 @@ EOD
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "denyf") {
-		print "<div><p>Removing all entries from csf.deny...</p>\n";
+	print "<div><p>Removing all entries from qhtlfirewall.deny...</p>\n";
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-		&printcmd("/usr/sbin/csf","-df");
-		&printcmd("/usr/sbin/csf","-tf");
+		&printcmd("/usr/sbin/qhtlfirewall","-df");
+		&printcmd("/usr/sbin/qhtlfirewall","-tf");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&resize("bot",1);
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "csftest") {
 		print "<div><p>Testing iptables...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/local/csf/bin/csftest.pl");
+		&printcmd("/usr/local/qhtlfirewall/bin/csftest.pl");
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
-		print "<div>You should restart csf after having run this test.</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restart'><input type='submit' class='btn btn-default' value='Restart csf'></form></div>\n";
+	print "<div>You should restart qhtlfirewall after having run this test.</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restart'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "profiles") {
-		my @profiles = sort glob("/usr/local/csf/profiles/*");
-		my @backups = reverse glob("/var/lib/csf/backup/*");
+		my @profiles = sort glob("/usr/local/qhtlfirewall/profiles/*");
+		my @backups = reverse glob("/var/lib/qhtlfirewall/backup/*");
 
 		print "<form action='$script' method='post'><input type='hidden' name='action' value='profileapply'>\n";
 		print "<table class='table table-bordered table-striped'>\n";
-		print "<thead><tr><th>Preconfigured Profiles</th><th style='border-left:1px solid #990000'>&nbsp;</th></tr></thead>\n";
+		print "<thead><tr><th colspan='2'>Preconfigured Profiles</th><th style='border-left:1px solid #990000'>&nbsp;</th></tr></thead>\n";
 		foreach my $profile (@profiles) {
 			my ($file, undef) = fileparse($profile);
 			$file =~ s/\.conf$//;
@@ -1564,7 +1564,7 @@ EOD
 			chomp @profiledata;
 
 			if ($file eq "reset_to_defaults") {
-				$text = "This is the installation default profile and will reset all csf.conf settings, including enabling TESTING mode";
+				$text = "This is the installation default profile and will reset all qhtlfirewall.conf settings, including enabling TESTING mode";
 			}
 			elsif ($profiledata[0] =~ /^\# Profile:/) {
 				foreach my $line (@profiledata) {
@@ -1574,21 +1574,23 @@ EOD
 
 			print "<tr><td><b>$file</b><br>\n$text</td><td style='border-left:1px solid #990000'><input type='radio' name='profile' value='$file'></td></tr>\n";
 		}
-		print "<tr><td>You can apply one or more of these profiles to csf.conf. Apart from reset_to_defaults, most of these profiles contain only a subset of settings. You can find out what will be changed by comparing the profile to the current configuration below. A backup of csf.conf will be created before any profile is applied.</td><td style='border-left:1px solid #990000'><input type='submit' class='btn btn-default' value='Apply Profile'></td></tr>\n";
+		print "<tr><td>You can apply one or more of these profiles to qhtlfirewall.conf. Apart from reset_to_defaults, most of these profiles contain only a subset of settings. You can find out what will be changed by comparing the profile to the current configuration below. A backup of qhtlfirewall.conf will be created before any profile is applied.</td><td style='border-left:1px solid #990000'><input type='submit' class='btn btn-default' value='Apply Profile'></td></tr>\n";
+	print "<tr><td>You can apply one or more of these profiles to qhtlfirewall.conf. Apart from reset_to_defaults, most of these profiles contain only a subset of settings. You can find out what will be changed by comparing the profile to the current configuration below. A backup of qhtlfirewall.conf will be created before any profile is applied.</td><td style='border-left:1px solid #990000'><input type='submit' class='btn btn-default' value='Apply Profile'></td></tr>\n";
 		print "</table>\n";
 		print "</form>\n";
 
 		print "<br><form action='$script' method='post'><input type='hidden' name='action' value='profilebackup'>\n";
 		print "<table class='table table-bordered table-striped'>\n";
-		print "<thead><tr><th>Backup csf.conf</th></tr></thead>\n";
-		print "<tr><td>Create a backup of csf.conf. You can use an optional name for the backup that should only contain alphanumerics. Other characters (including spaces) will be replaced with an underscore ( _ )</td></tr>\n";
+		print "<thead><tr><th>Backup qhtlfirewall.conf</th></tr></thead>\n";
+	print "<thead><tr><th>Backup qhtlfirewall.conf</th></tr></thead>\n";
+		print "<tr><td>Create a backup of qhtlfirewall.conf. You can use an optional name for the backup that should only contain alphanumerics. Other characters (including spaces) will be replaced with an underscore ( _ )</td></tr>\n";
 		print "<tr><td><input type='text' size='40' name='backup' placeholder='Optional name'> <input type='submit' class='btn btn-default' value='Create Backup'></td></tr>\n";
 		print "</table>\n";
 		print "</form>\n";
 
 		print "<br><form action='$script' method='post'><input type='hidden' name='action' value='profilerestore'>\n";
 		print "<table class='table table-bordered table-striped'>\n";
-		print "<thead><tr><th>Restore Backup Of csf.conf</th></tr></thead>\n";
+		print "<thead><tr><th>Restore Backup Of qhtlfirewall.conf</th></tr></thead>\n";
 		print "<tr><td><select name='backup' size='10' style='min-width:400px'>\n";
 		foreach my $backup (@backups) {
 			my ($file, undef) = fileparse($backup);
@@ -1618,7 +1620,7 @@ EOD
 		}
 		print "</select></td></tr>\n";
 		print "<tr><td style='border-top:1px dashed #990000'>Select second configuration:<br>\n<select name='profile2' size='10' style='min-width:400px'>\n";
-		print "<optgroup label='Current Configuration:'><option value='current' selected>/etc/csf/csf.conf</option></optgroup>\n";
+		print "<optgroup label='Current Configuration:'><option value='current' selected>/etc/qhtlfirewall/qhtlfirewall.conf</option></optgroup>\n";
 		print "<optgroup label='Profiles:'>\n";
 		foreach my $profile (@profiles) {
 			my ($file, undef) = fileparse($profile);
@@ -1642,17 +1644,17 @@ EOD
 		my $profile = $FORM{profile};
 		$profile =~ s/\W/_/g;
 		print "<div><p>Applying profile ($profile)...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","--profile","apply",$profile);
+		&printcmd("/usr/sbin/qhtlfirewall","--profile","apply",$profile);
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
-		print "<div>You should restart both csf and lfd.</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart csf+lfd'></form></div>\n";
+		print "<div>You should restart both qhtlfirewall and qhtlwaterfall.</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall+qhtlwaterfall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "profilebackup") {
 		my $profile = $FORM{backup};
 		$profile =~ s/\W/_/g;
 		print "<div><p>Creating backup...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","--profile","backup",$profile);
+		&printcmd("/usr/sbin/qhtlfirewall","--profile","backup",$profile);
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
 		&printreturn;
 	}
@@ -1660,10 +1662,10 @@ EOD
 		my $profile = $FORM{backup};
 		$profile =~ s/\W/_/g;
 		print "<div><p>Restoring backup ($profile)...</p>\n<pre class='comment' style='white-space: pre-wrap;'>\n";
-		&printcmd("/usr/sbin/csf","--profile","restore",$profile);
+		&printcmd("/usr/sbin/qhtlfirewall","--profile","restore",$profile);
 		print "</pre>\n<p>...<b>Done</b>.</p></div>\n";
-		print "<div>You should restart both csf and lfd.</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart csf+lfd'></form></div>\n";
+		print "<div>You should restart both qhtlfirewall and qhtlwaterfall.</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall+qhtlwaterfall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "profilediff") {
@@ -1674,7 +1676,7 @@ EOD
 
 		print "<table class='table table-bordered table-striped'>\n";
 		my ($childin, $childout);
-		my $pid = open3($childin, $childout, $childout, "/usr/sbin/csf","--profile","diff",$profile1,$profile2);
+		my $pid = open3($childin, $childout, $childout, "/usr/sbin/qhtlfirewall","--profile","diff",$profile1,$profile2);
 		while (<$childout>) {
 			$_ =~ s/\[|\]//g;
 			my ($var,$p1,$p2) = split(/\s+/,$_);
@@ -1732,7 +1734,7 @@ EOD
 		print "</table>\n";
 	}
 	elsif ($FORM{action} eq "fix") {
-		print "<div class='bs-callout bs-callout-warning'>These options should only be used as a last resort as most of them will reduce the effectiveness of csf and lfd to protect the server</div>\n";
+		print "<div class='bs-callout bs-callout-warning'>These options should only be used as a last resort as most of them will reduce the effectiveness of qhtlfirewall and qhtlwaterfall to protect the server</div>\n";
 
 		print "<table class='table table-bordered table-striped'>\n";
 		print "<thead><tr><th colspan='2'>Fix Common Problems</th></tr></thead>";
@@ -1742,7 +1744,7 @@ EOD
 		} else {
 			print "<tr><td><button type='button' class='btn btn-default confirmButton' data-query='Are you sure you want to disable LF_SPI?' data-href='$script?action=fixspi' data-toggle='modal' data-target='#confirmmodal'>Disable SPI</button>\n";
 		}
-		print "</td><td style='width:100%'>If you find that ports listed in TCP_IN/UDP_IN are being blocked by iptables (e.g. port 80) as seen in /var/log/messages and users can only connect to the server if entered in csf.allow, then it could be that the kernel (usually on virtual servers) is broken and cannot perform connection tracking. In this case, disabling the Stateful Packet Inspection functionality of csf (LF_SPI) may help\n";
+		print "</td><td style='width:100%'>If you find that ports listed in TCP_IN/UDP_IN are being blocked by iptables (e.g. port 80) as seen in /var/log/messages and users can only connect to the server if entered in qhtlfirewall.allow, then it could be that the kernel (usually on virtual servers) is broken and cannot perform connection tracking. In this case, disabling the Stateful Packet Inspection functionality of qhtlfirewall (LF_SPI) may help\n";
 		if ($config{LF_SPI} == 0) {
 			print "<br><strong>Note: LF_SPI is already disabled</strong>";
 		}
@@ -1782,11 +1784,11 @@ EOD
 		print "</td></tr>\n";
 
 		print "<tr><td><button type='button' class='btn btn-default confirmButton' data-query='Are you sure you want to disable all alerts?' data-href='$script?action=fixalerts' data-toggle='modal' data-target='#confirmmodal'>Disable All Alerts</button>\n";
-		print "</td><td style='width:100%'>If you really want to disable all alerts in lfd you can do so here. This is <strong>not</strong> recommended in any situation - you should go through the csf configuration and only disable those you do not want. As new features are added to csf you may find that you have to go into the csf configuration and disable them manually as this procedure only disables the ones that it is aware of when applied\n";
+		print "</td><td style='width:100%'>If you really want to disable all alerts in qhtlwaterfall you can do so here. This is <strong>not</strong> recommended in any situation - you should go through the qhtlfirewall configuration and only disable those you do not want. As new features are added to qhtlfirewall you may find that you have to go into the qhtlfirewall configuration and disable them manually as this procedure only disables the ones that it is aware of when applied\n";
 		print "</td></tr>\n";
 
-		print "<tr><td><button type='button' class='btn btn-danger confirmButton' data-query='Are you sure you want to reinstall csf and lose all modifications?' data-href='$script?action=fixnuclear' data-toggle='modal' data-target='#confirmmodal'>Reinstall csf</button>\n";
-		print "</td><td style='width:100%'>If all else fails this option will <strong>completely</strong> uninstall csf and install it again with completely default options (including TESTING mode). The previous configuration will be lost including all modifications\n";
+		print "<tr><td><button type='button' class='btn btn-danger confirmButton' data-query='Are you sure you want to reinstall qhtlfirewall and lose all modifications?' data-href='$script?action=fixnuclear' data-toggle='modal' data-target='#confirmmodal'>Reinstall qhtlfirewall</button>\n";
+		print "</td><td style='width:100%'>If all else fails this option will <strong>completely</strong> uninstall qhtlfirewall and install it again with completely default options (including TESTING mode). The previous configuration will be lost including all modifications\n";
 		print "</td></tr>\n";
 
 		print "</table>\n";
@@ -1835,8 +1837,8 @@ EOD
 			$config{TCP_IN} .= ",30000:35000";
 			$config{TCP6_IN} .= ",30000:35000";
 
-			copy("/etc/csf/csf.conf","/var/lib/csf/backup/".time."_prefixpasvftp");
-			sysopen (my $CSFCONF,"/etc/csf/csf.conf", O_RDWR | O_CREAT);
+			copy("/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/".time."_prefixpasvftp");
+			sysopen (my $CSFCONF,"/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT);
 			flock ($CSFCONF, LOCK_EX);
 			my @csf = <$CSFCONF>;
 			chomp @csf;
@@ -1864,8 +1866,8 @@ EOD
 		unless ($ftpdone) {print "<p><strong>You MUST now open the same port range hole (30000 to 35000) in your FTP Server configuration</strong></p>\n"}
 		print "</div>\n";
 		print "</div>\n";
-		print "<div>You MUST now restart both csf and lfd:</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart csf+lfd'></form></div>\n";
+		print "<div>You MUST now restart both qhtlfirewall and qhtlwaterfall:</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall+qhtlwaterfall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "fixspi") {
@@ -1873,8 +1875,8 @@ EOD
 		print "<div class='panel-heading panel-heading'>Disabling LF_SPI:</div>\n";
 		print "<div class='panel-body'>";
 
-		copy("/etc/csf/csf.conf","/var/lib/csf/backup/".time."_prefixspi");
-		sysopen (my $CSFCONF,"/etc/csf/csf.conf", O_RDWR | O_CREAT);
+		copy("/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/".time."_prefixspi");
+		sysopen (my $CSFCONF,"/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT);
 		flock ($CSFCONF, LOCK_EX);
 		my @csf = <$CSFCONF>;
 		chomp @csf;
@@ -1893,8 +1895,8 @@ EOD
 		print "</div>\n";
 		print "<div class='panel-footer panel-footer'>Completed</div>\n";
 		print "</div>\n";
-		print "<div>You MUST now restart both csf and lfd:</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart csf+lfd'></form></div>\n";
+		print "<div>You MUST now restart both qhtlfirewall and qhtlwaterfall:</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall+qhtlwaterfall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "fixkill") {
@@ -1902,8 +1904,8 @@ EOD
 		print "<div class='panel-heading panel-heading'>Disabling PT_USERKILL:</div>\n";
 		print "<div class='panel-body'>";
 
-		copy("/etc/csf/csf.conf","/var/lib/csf/backup/".time."_prefixkill");
-		sysopen (my $CSFCONF,"/etc/csf/csf.conf", O_RDWR | O_CREAT);
+		copy("/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/".time."_prefixkill");
+		sysopen (my $CSFCONF,"/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT);
 		flock ($CSFCONF, LOCK_EX);
 		my @csf = <$CSFCONF>;
 		chomp @csf;
@@ -1922,8 +1924,8 @@ EOD
 		print "</div>\n";
 		print "<div class='panel-footer panel-footer'>Completed</div>\n";
 		print "</div>\n";
-		print "<div>You MUST now restart both csf and lfd:</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart csf+lfd'></form></div>\n";
+		print "<div>You MUST now restart both qhtlfirewall and qhtlwaterfall:</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall+qhtlwaterfall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "fixsmtp") {
@@ -1931,8 +1933,8 @@ EOD
 		print "<div class='panel-heading panel-heading'>Disabling SMTP_BLOCK:</div>\n";
 		print "<div class='panel-body'>";
 
-		copy("/etc/csf/csf.conf","/var/lib/csf/backup/".time."_prefixsmtp");
-		sysopen (my $CSFCONF,"/etc/csf/csf.conf", O_RDWR | O_CREAT);
+		copy("/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/".time."_prefixsmtp");
+		sysopen (my $CSFCONF,"/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT);
 		flock ($CSFCONF, LOCK_EX);
 		my @csf = <$CSFCONF>;
 		chomp @csf;
@@ -1952,6 +1954,7 @@ EOD
 		print "<div class='panel-footer panel-footer'>Completed</div>\n";
 		print "</div>\n";
 		print "<div>You MUST now restart both csf and lfd:</div>\n";
+	print "<div>You MUST now restart both qhtlfirewall and qhtlwaterfall:</div>\n";
 		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart csf+lfd'></form></div>\n";
 		&printreturn;
 	}
@@ -1962,15 +1965,15 @@ EOD
 
 		&resize("top");
 		print "<pre class='comment' style='white-space: pre-wrap; height: 500px; overflow: auto; resize:both; clear:both' id='output'>\n";
-		copy("/etc/csf/csf.conf","/var/lib/csf/backup/".time."_prefixalerts");
-		&printcmd("/usr/sbin/csf","--profile","apply","disable_alerts");
+		copy("/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/".time."_prefixalerts");
+		&printcmd("/usr/sbin/qhtlfirewall","--profile","apply","disable_alerts");
 		print "</pre>\n";
 		&resize("bot",1);
 		print "</div>\n";
 		print "<div class='panel-footer panel-footer'>Completed</div>\n";
 		print "</div>\n";
-		print "<div>You MUST now restart both csf and lfd:</div>\n";
-		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart csf+lfd'></form></div>\n";
+		print "<div>You MUST now restart both qhtlfirewall and qhtlwaterfall:</div>\n";
+		print "<div><form action='$script' method='post'><input type='hidden' name='action' value='restartboth'><input type='submit' class='btn btn-default' value='Restart qhtlfirewall+qhtlwaterfall'></form></div>\n";
 		&printreturn;
 	}
 	elsif ($FORM{action} eq "fixnuclear") {
@@ -1981,15 +1984,15 @@ EOD
 		my $time = time;
 		sysopen (my $REINSTALL, "/usr/src/reinstall_$time.sh", O_WRONLY | O_CREAT | O_TRUNC);
 		flock ($REINSTALL, LOCK_EX);
-		print $REINSTALL <<EOF;
+	print $REINSTALL <<EOF;
 #!/usr/bin/bash
-bash /etc/csf/uninstall.sh
+bash /etc/qhtlfirewall/uninstall.sh
 cd /usr/src
-mv -fv csf.tgz csf.tgz.$time
-mv -fv csf csf.$time
-wget https://$config{DOWNLOADSERVER}/csf.tgz
-tar -xzf csf.tgz
-cd csf
+mv -fv qhtlfirewall.tgz qhtlfirewall.tgz.$time
+mv -fv qhtlfirewall qhtlfirewall.$time
+wget https://$config{DOWNLOADSERVER}/qhtlfirewall.tgz
+tar -xzf qhtlfirewall.tgz
+cd qhtlfirewall
 sh install.sh
 EOF
 		close ($REINSTALL);
@@ -2011,13 +2014,13 @@ EOF
 				if ($line =~ /^name=csf$/) {
 					unless (-l "index.cgi") {
 						unlink "index.cgi";
-						my $status = symlink ("/usr/local/csf/lib/webmin/csf/index.cgi","index.cgi");
+						my $status = symlink ("/usr/local/qhtlfirewall/lib/webmin/csf/index.cgi","index.cgi");
 						if ($status and -l "index.cgi") {
-							symlink ("/usr/local/csf/lib/webmin/csf/images","csfimages");
-							print "<p><b>csf updated to symlink webmin module to /usr/local/csf/lib/webmin/csf/. Click <a href='index.cgi'>here</a> to continue<p></b>\n";
+							symlink ("/usr/local/qhtlfirewall/lib/webmin/csf/images","csfimages");
+							print "<p><b>csf updated to symlink webmin module to /usr/local/qhtlfirewall/lib/webmin/csf/. Click <a href='index.cgi'>here</a> to continue<p></b>\n";
 							exit;
 						} else {
-							print "<p>Failed to symlink to /usr/local/csf/lib/webmin/csf/<p>\n";
+							print "<p>Failed to symlink to /usr/local/qhtlfirewall/lib/webmin/csf/<p>\n";
 						}
 					}
 					last;
@@ -2034,7 +2037,7 @@ EOF
 		if ($iptstatus[0] =~ /# Warning: iptables-legacy tables present/) {shift @iptstatus}
 		my $status = "<div class='bs-callout bs-callout-success text-center'><h4>Firewall Status: Enabled and Running</h4></div>";
 
-		if (-e "/etc/csf/csf.disable") {
+		if (-e "/etc/qhtlfirewall/qhtlfirewall.disable") {
 			$status = "<div class='bs-callout bs-callout-danger text-center'><form action='$script' method='post'><h4>Firewall Status: Disabled and Stopped <input type='hidden' name='action' value='enable'><input type='submit' class='btn btn-default' value='Enable'></form></h4></div>\n"
 		}
 		elsif ($config{TESTING}) {
@@ -2043,13 +2046,13 @@ EOF
 		elsif ($iptstatus[0] !~ /^Chain LOCALINPUT/) {
 			$status = "<div class='bs-callout bs-callout-danger text-center'><form action='$script' method='post'><h4>Firewall Status: Enabled but Stopped <input type='hidden' name='action' value='start'><input type='submit' class='btn btn-default' value='Start'></form></h4></div>"
 		}
-		if (-e "/var/lib/csf/lfd.restart") {$status .= "<div class='bs-callout bs-callout-info text-center'><h4>lfd restart request pending</h4></div>"}
+		if (-e "/var/lib/qhtlfirewall/qhtlwaterfall.restart") {$status .= "<div class='bs-callout bs-callout-info text-center'><h4>qhtlwaterfall restart request pending</h4></div>"}
 		unless ($config{RESTRICT_SYSLOG}) {$status .= "<div class='bs-callout bs-callout-warning text-center'><h4>WARNING: RESTRICT_SYSLOG is disabled. See SECURITY WARNING in Firewall Configuration</h4></div>\n"}
 
 		my $tempcnt = 0;
-		if (! -z "/var/lib/csf/csf.tempban") {
-			sysopen (my $IN, "/var/lib/csf/csf.tempban", O_RDWR);
-			flock ($IN, LOCK_EX);
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
+			sysopen (my $IN, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR);
+			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			close ($IN);
 			chomp @data;
@@ -2057,9 +2060,9 @@ EOF
 		}
 		my $tempbans = "(Currently: <code>$tempcnt</code> temp IP bans, ";
 		$tempcnt = 0;
-		if (! -z "/var/lib/csf/csf.tempallow") {
-			sysopen (my $IN, "/var/lib/csf/csf.tempallow", O_RDWR);
-			flock ($IN, LOCK_EX);
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
+			sysopen (my $IN, "/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR);
+			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			close ($IN);
 			chomp @data;
@@ -2068,8 +2071,8 @@ EOF
 		$tempbans .= "<code>$tempcnt</code> temp IP allows)";
 
 		my $permcnt = 0;
-		if (! -z "/etc/csf/csf.deny") {
-			sysopen (my $IN, "/etc/csf/csf.deny", O_RDWR);
+		if (! -z "/etc/qhtlfirewall/qhtlfirewall.deny") {
+			sysopen (my $IN, "/etc/qhtlfirewall/qhtlfirewall.deny", O_RDWR);
 			flock ($IN, LOCK_SH);
 			while (my $line = <$IN>) {
 				chomp $line;
@@ -2081,8 +2084,8 @@ EOF
 		my $permbans = "(Currently: <code>$permcnt</code> permanent IP bans)";
 
 		$permcnt = 0;
-		if (! -z "/etc/csf/csf.allow") {
-			sysopen (my $IN, "/etc/csf/csf.allow", O_RDWR);
+		if (! -z "/etc/qhtlfirewall/qhtlfirewall.allow") {
+			sysopen (my $IN, "/etc/qhtlfirewall/qhtlfirewall.allow", O_RDWR);
 			flock ($IN, LOCK_SH);
 			while (my $line = <$IN>) {
 				chomp $line;
@@ -2096,13 +2099,13 @@ EOF
 		print $status;
 
 		print "<div class='normalcontainer'>\n";
-		print "<div class='bs-callout bs-callout-info text-center collapse' id='upgradebs'><h4>A new version of csf is <a href='#upgradetable'>available</a></h4></div>";
+		print "<div class='bs-callout bs-callout-info text-center collapse' id='upgradebs'><h4>A new version of qhtlfirewall is <a href='#upgradetable'>available</a></h4></div>";
 
 		print "<ul class='nav nav-tabs' id='myTabs' style='font-weight:bold'>\n";
 		print "<li class='active'><a data-toggle='tab' href='#' id='tabAll'>All</a></li>\n";
 		print "<li><a data-toggle='tab' href='#home'>Info</a></li>\n";
-		print "<li><a data-toggle='tab' href='#csf'>csf</a></li>\n";
-		print "<li><a data-toggle='tab' href='#lfd'>lfd</a></li>\n";
+		print "<li><a data-toggle='tab' href='#csf'>qhtlfirewall</a></li>\n";
+		print "<li><a data-toggle='tab' href='#lfd'>qhtlwaterfall</a></li>\n";
 		if ($config{CLUSTER_SENDTO}) {
 			print "<li><a data-toggle='tab' href='#cluster'>Cluster</a></li>\n";
 		}
@@ -2115,15 +2118,15 @@ EOF
 		print "<table class='table table-bordered table-striped'>\n";
 		print "<thead><tr><th colspan='2'>Server Information</th></tr></thead>";
 		print "<tr><td><button name='action' value='servercheck' type='submit' class='btn btn-default'>Check Server Security</button></td><td style='width:100%'>Perform a basic security, stability and settings check on the server</td></tr>\n";
-		print "<tr><td><button name='action' value='readme' type='submit' class='btn btn-default'>Firewall Information</button></td><td style='width:100%'>View the csf+lfd readme.txt file</td></tr>\n";
-		print "<tr><td><button name='action' value='logtail' type='submit' class='btn btn-default'>Watch System Logs</button></td><td style='width:100%'>Watch (tail) various system log files (listed in csf.syslogs)</td></tr>\n";
-		print "<tr><td><button name='action' value='loggrep' type='submit' class='btn btn-default'>Search System Logs</button></td><td style='width:100%'>Search (grep) various system log files (listed in csf.syslogs)</td></tr>\n";
+	print "<tr><td><button name='action' value='readme' type='submit' class='btn btn-default'>Firewall Information</button></td><td style='width:100%'>View the qhtlfirewall+qhtlwaterfall readme.txt file</td></tr>\n";
+		print "<tr><td><button name='action' value='logtail' type='submit' class='btn btn-default'>Watch System Logs</button></td><td style='width:100%'>Watch (tail) various system log files (listed in qhtlfirewall.syslogs)</td></tr>\n";
+		print "<tr><td><button name='action' value='loggrep' type='submit' class='btn btn-default'>Search System Logs</button></td><td style='width:100%'>Search (grep) various system log files (listed in qhtlfirewall.syslogs)</td></tr>\n";
 		print "<tr><td><button name='action' value='viewports' type='submit' class='btn btn-default'>View Listening Ports</button></td><td style='width:100%'>View ports on the server that have a running process behind them listening for external connections</td></tr>\n";
 		print "<tr><td><button name='action' value='rblcheck' type='submit' class='btn btn-default'>Check for IPs in RBLs</button></td><td style='width:100%'>Check whether any of the servers IP addresses are listed in RBLs</td></tr>\n";
 		if ($config{ST_ENABLE}) {
 			print "<tr><td><button name='action' value='viewlogs' type='submit' class='btn btn-default'>View iptables Log</button></td><td style='width:100%'>View the last $config{ST_IPTABLES} iptables log lines</td></tr>\n";
 			if ($chart) {
-				print "<tr><td><button name='action' value='chart' type='submit' class='btn btn-default'>View lfd Statistics</button></td><td style='width:100%'>View lfd blocking statistics</td></tr>\n";
+				print "<tr><td><button name='action' value='chart' type='submit' class='btn btn-default'>View qhtlwaterfall Statistics</button></td><td style='width:100%'>View qhtlwaterfall blocking statistics</td></tr>\n";
 				if ($config{ST_SYSTEM}) {
 					print "<tr><td><button name='action' value='systemstats' type='submit' class='btn btn-default'>View System Statistics</button></td><td style='width:100%'>View basic system statistics</td></tr>\n";
 				}
@@ -2135,16 +2138,16 @@ EOF
 		print "<form action='$script' method='post'>\n";
 		print "<table class='table table-bordered table-striped' id='upgradetable'>\n";
 		print "<thead><tr><th colspan='2'>Upgrade</th></tr></thead>";
-		my ($upgrade, $actv) = &csgetversion("csf",$myv);
+		my ($upgrade, $actv) = &csgetversion("qhtlfirewall",$myv);
 		if ($upgrade) {
-			print "<tr><td><button name='action' value='upgrade' type='submit' class='btn btn-default'>Upgrade csf</button></td><td style='width:100%'><b>A new version of csf (v$actv) is available. Upgrading will retain your settings<br><a href='https://$config{DOWNLOADSERVER}/csf/changelog.txt' target='_blank'>View ChangeLog</a></b></td></tr>\n";
+			print "<tr><td><button name='action' value='upgrade' type='submit' class='btn btn-default'>Upgrade qhtlfirewall</button></td><td style='width:100%'><b>A new version of qhtlfirewall (v$actv) is available. Upgrading will retain your settings<br><a href='https://$config{DOWNLOADSERVER}/qhtlfirewall/changelog.txt' target='_blank'>View ChangeLog</a></b></td></tr>\n";
 		} else {
 			print "<tr><td><button name='action' value='manualcheck' type='submit' class='btn btn-default'>Manual Check</button></td><td>";
 			if ($actv ne "") {
-				print "(csget cron check) $actv</td></tr>\n";
+				print "(version check) $actv</td></tr>\n";
 			}
 			else {
-				print "You are running the latest version of csf. An Upgrade button will appear here if a new version becomes available. New version checking is performed automatically by a daily cron job (csget)</td></tr>\n";
+				print "You are running the latest version of qhtlfirewall (v$myv). An Upgrade button will appear here if a new version becomes available. New version checking is performed automatically by a daily cron job</td></tr>\n";
 			}
 		}
 		if (!$config{INTERWORX} and (-e "/etc/apf" or -e "/usr/local/bfd")) {
@@ -2178,29 +2181,29 @@ EOF
 
 		print "<div id='csf' class='tab-pane active'>\n";
 		print "<table class='table table-bordered table-striped'>\n";
-		print "<thead><tr><th colspan='2'>csf - Quick Actions</th></tr></thead>";
-		print "<tr><td><button onClick='\$(\"#qallow\").submit();' class='btn btn-default'>Quick Allow</button></td><td style='width:100%'><form action='$script' method='post' id='qallow'><input type='submit' class='hide'><input type='hidden' name='action' value='qallow'>Allow IP address <a href='javascript:fillfield(\"allowip\",\"$ENV{REMOTE_ADDR}\")'><span class='glyphicon glyphicon-cog icon-configserver' style='font-size:1.3em;' data-tooltip='tooltip' title='$ENV{REMOTE_ADDR}'></span></a> <input type='text' name='ip' id='allowip' value='' size='18' style='background-color: #BDECB6'> through the firewall and add to the allow file (csf.allow).<br>Comment for Allow: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
-		print "<tr><td><button onClick='\$(\"#qdeny\").submit();' class='btn btn-default'>Quick Deny</button></td><td style='width:100%'><form action='$script' method='post' id='qdeny'><input type='submit' class='hide'><input type='hidden' name='action' value='qdeny'>Block IP address <input type='text' name='ip' value='' size='18' style='background-color: #FFD1DC'> in the firewall and add to the deny file (csf.deny).<br>Comment for Block: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
-		print "<tr><td><button onClick='\$(\"#qignore\").submit();' class='btn btn-default'>Quick Ignore</button></td><td style='width:100%'><form action='$script' method='post' id='qignore'><input type='submit' class='hide'><input type='hidden' name='action' value='qignore'>Ignore IP address <a href='javascript:fillfield(\"ignoreip\",\"$ENV{REMOTE_ADDR}\")'><span class='glyphicon glyphicon-cog icon-configserver' style='font-size:1.3em;' data-tooltip='tooltip' title='$ENV{REMOTE_ADDR}'></span></a> <input type='text' name='ip' id='ignoreip' value='' size='18' style='background-color: #D9EDF7'> in lfd, add to the ignore file (csf.ignore) and restart lfd</form></td></tr>\n";
+		print "<thead><tr><th colspan='2'>qhtlfirewall - Quick Actions</th></tr></thead>";
+		print "<tr><td><button onClick='\$(\"#qallow\").submit();' class='btn btn-default'>Quick Allow</button></td><td style='width:100%'><form action='$script' method='post' id='qallow'><input type='submit' class='hide'><input type='hidden' name='action' value='qallow'>Allow IP address <a href='javascript:fillfield(\"allowip\",\"$ENV{REMOTE_ADDR}\")'><span class='glyphicon glyphicon-cog icon-configserver' style='font-size:1.3em;' data-tooltip='tooltip' title='$ENV{REMOTE_ADDR}'></span></a> <input type='text' name='ip' id='allowip' value='' size='18' style='background-color: #BDECB6'> through the firewall and add to the allow file (qhtlfirewall.allow).<br>Comment for Allow: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
+		print "<tr><td><button onClick='\$(\"#qdeny\").submit();' class='btn btn-default'>Quick Deny</button></td><td style='width:100%'><form action='$script' method='post' id='qdeny'><input type='submit' class='hide'><input type='hidden' name='action' value='qdeny'>Block IP address <input type='text' name='ip' value='' size='18' style='background-color: #FFD1DC'> in the firewall and add to the deny file (qhtlfirewall.deny).<br>Comment for Block: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
+		print "<tr><td><button onClick='\$(\"#qignore\").submit();' class='btn btn-default'>Quick Ignore</button></td><td style='width:100%'><form action='$script' method='post' id='qignore'><input type='submit' class='hide'><input type='hidden' name='action' value='qignore'>Ignore IP address <a href='javascript:fillfield(\"ignoreip\",\"$ENV{REMOTE_ADDR}\")'><span class='glyphicon glyphicon-cog icon-configserver' style='font-size:1.3em;' data-tooltip='tooltip' title='$ENV{REMOTE_ADDR}'></span></a> <input type='text' name='ip' id='ignoreip' value='' size='18' style='background-color: #D9EDF7'> in qhtlwaterfall, add to the ignore file (qhtlfirewall.ignore) and restart qhtlwaterfall</form></td></tr>\n";
 		print "<tr><td><button onClick='\$(\"#kill\").submit();' class='btn btn-default'>Quick Unblock</button></td><td style='width:100%'><form action='$script' method='post' id='kill'><input type='submit' class='hide'><input type='hidden' name='action' value='kill'>Remove IP address <input type='text' name='ip' value='' size='18'> from the firewall (temp and perm blocks)</form></td></tr>\n";
 		print "</table>\n";
 
 		print "<table class='table table-bordered table-striped'>\n";
-		print "<thead><tr><th colspan='2'>csf - ConfigServer Firewall</th></tr></thead>";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='conf' type='submit' class='btn btn-default'>Firewall Configuration</button></form></td><td style='width:100%'>Edit the configuration file for the csf firewall and lfd</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='profiles' type='submit' class='btn btn-default'>Firewall Profiles</button></form></td><td style='width:100%'>Apply pre-configured csf.conf profiles and backup/restore csf.conf</td></tr>\n";
+		print "<thead><tr><th colspan='2'>qhtlfirewall - Firewall</th></tr></thead>";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='conf' type='submit' class='btn btn-default'>Firewall Configuration</button></form></td><td style='width:100%'>Edit the configuration file for the qhtlfirewall and qhtlwaterfall</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='profiles' type='submit' class='btn btn-default'>Firewall Profiles</button></form></td><td style='width:100%'>Apply pre-configured qhtlfirewall.conf profiles and backup/restore qhtlfirewall.conf</td></tr>\n";
 		print "<tr><td><form action='$script' method='post'><button name='action' value='status' type='submit' class='btn btn-default'>View iptables Rules</button></form></td><td style='width:100%'>Display the active iptables rules</td></tr>\n";
 		print "<tr><td><button onClick='\$(\"#grep\").submit();' class='btn btn-default'>Search for IP</button></td><td style='width:100%'><form action='$script' method='post' id='grep'><input type='submit' class='hide'><input type='hidden' name='action' value='grep'>Search iptables for IP address <input type='text' name='ip' value='' size='18'></form></td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='allow' type='submit' class='btn btn-default'>Firewall Allow IPs</button></form></td><td style='width:100%'>Edit csf.allow, the IP address allow file $permallows</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='deny' type='submit' class='btn btn-default'>Firewall Deny IPs</button></form></td><td style='width:100%'>Edit csf.deny, the IP address deny file $permbans</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='enable' type='submit' class='btn btn-default'>Firewall Enable</button></form></td><td style='width:100%'>Enables csf and lfd if previously Disabled</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='disable' type='submit' class='btn btn-default'>Firewall Disable</button></form></td><td style='width:100%'>Completely disables csf and lfd</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='restart' type='submit' class='btn btn-default'>Firewall Restart</button></form></td><td style='width:100%'>Restart the csf iptables firewall</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='restartq' type='submit' class='btn btn-default'>Firewall Quick Restart</button></form></td><td style='width:100%'>Have lfd restart the csf iptables firewall</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='allow' type='submit' class='btn btn-default'>Firewall Allow IPs</button></form></td><td style='width:100%'>Edit qhtlfirewall.allow, the IP address allow file $permallows</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='deny' type='submit' class='btn btn-default'>Firewall Deny IPs</button></form></td><td style='width:100%'>Edit qhtlfirewall.deny, the IP address deny file $permbans</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='enable' type='submit' class='btn btn-default'>Firewall Enable</button></form></td><td style='width:100%'>Enables qhtlfirewall and qhtlwaterfall if previously Disabled</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='disable' type='submit' class='btn btn-default'>Firewall Disable</button></form></td><td style='width:100%'>Completely disables qhtlfirewall and qhtlwaterfall</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='restart' type='submit' class='btn btn-default'>Firewall Restart</button></form></td><td style='width:100%'>Restart the qhtlfirewall iptables firewall</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='restartq' type='submit' class='btn btn-default'>Firewall Quick Restart</button></form></td><td style='width:100%'>Have qhtlwaterfall restart the qhtlfirewall iptables firewall</td></tr>\n";
 		print "<tr><td><button onClick='\$(\"#tempdeny\").submit();' class='btn btn-default'>Temporary Allow/Deny</button></td><td style='width:100%'><form action='$script' method='post' id='tempdeny'><input type='submit' class='hide'><input type='hidden' name='action' value='tempdeny'>Temporarily <select name='do'><option>block</option><option>allow</option></select> IP address <input type='text' name='ip' value='' size='18'> to port(s) <input type='text' name='ports' value='*' size='5'> for <input type='text' name='timeout' value='' size='4'> <select name='dur'><option>seconds</option><option>minutes</option><option>hours</option><option>days</option></select>.<br>Comment: <input type='text' name='comment' value='' size='30'><br>\n(ports can be either * for all ports, a single port, or a comma separated list of ports)</form></td></tr>\n";
 		print "<tr><td><form action='$script' method='post'><button name='action' value='temp' type='submit' class='btn btn-default'>Temporary IP Entries</button></form></td><td style='width:100%'>View/Remove the <i>temporary</i> IP entries $tempbans</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='sips' type='submit' class='btn btn-default'>Deny Server IPs</button></form></td><td style='width:100%'>Deny access to and from specific IP addresses configured on the server (csf.sips)</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='denyf' type='submit' class='btn btn-default'>Flush all Blocks</button></form></td><td style='width:100%'>Removes and unblocks all entries in csf.deny (excluding those marked \"do not delete\") and all temporary IP entries (blocks <i>and</i> allows)</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='sips' type='submit' class='btn btn-default'>Deny Server IPs</button></form></td><td style='width:100%'>Deny access to and from specific IP addresses configured on the server (qhtlfirewall.sips)</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='denyf' type='submit' class='btn btn-default'>Flush all Blocks</button></form></td><td style='width:100%'>Removes and unblocks all entries in qhtlfirewall.deny (excluding those marked \"do not delete\") and all temporary IP entries (blocks <i>and</i> allows)</td></tr>\n";
 		print "<tr><td><form action='$script' method='post'><button name='action' value='redirect' type='submit' class='btn btn-default'>Firewall Redirect</button></form></td><td style='width:100%'>Redirect connections to this server to other ports/IP addresses</td></tr>\n";
 		print "<tr><td><form action='$script' method='post'><button name='action' value='fix' type='submit' class='btn btn-default'>Fix Common Problems</button></form></td><td style='width:100%'>Offers solutions to some common problems when using an SPI firewall</td></tr>\n";
 		print "</table>\n";
@@ -2209,42 +2212,42 @@ EOF
 
 		print "<div id='lfd' class='tab-pane active'>\n";
 		print "<table class='table table-bordered table-striped'>\n";
-		print "<thead><tr><th colspan='2'>lfd - Login Failure Daemon</th></tr></thead>";
-		print "<tr><td><form action='$script' method='post'><input type='hidden' name='action' value='lfdstatus'><input type='submit' class='btn btn-default' value='lfd Status'></form></td><td style='width:100%'>Display lfd status</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><input type='hidden' name='action' value='lfdrestart'><input type='submit' class='btn btn-default' value='lfd Restart'></form></td><td style='width:100%'>Restart lfd</td></tr>\n";
+		print "<thead><tr><th colspan='2'>qhtlwaterfall - Login Failure Daemon</th></tr></thead>";
+		print "<tr><td><form action='$script' method='post'><input type='hidden' name='action' value='lfdstatus'><input type='submit' class='btn btn-default' value='qhtlwaterfall Status'></form></td><td style='width:100%'>Display qhtlwaterfall status</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><input type='hidden' name='action' value='lfdrestart'><input type='submit' class='btn btn-default' value='qhtlwaterfall Restart'></form></td><td style='width:100%'>Restart qhtlwaterfall</td></tr>\n";
 		print "<tr><td style='white-space: nowrap;'><form action='$script' method='post'><input type='hidden' name='action' value='ignorefiles'><select name='ignorefile'>\n";
-		print "<option value='csf.ignore'>csf.ignore - IP Blocking</option>\n";
-		print "<option value='csf.pignore'>csf.pignore, Process Tracking</option>\n";
-		print "<option value='csf.fignore'>csf.fignore, Directory Watching</option>\n";
-		print "<option value='csf.signore'>csf.signore, Script Alert</option>\n";
-		print "<option value='csf.rignore'>csf.rignore, Reverse DNS lookup</option>\n";
-		print "<option value='csf.suignore'>csf.suignore, Superuser check</option>\n";
-		print "<option value='csf.mignore'>csf.mignore, RT_LOCALRELAY</option>\n";
-		print "<option value='csf.logignore'>csf.logignore, Log Scanner</option>\n";
-		print "<option value='csf.uidignore'>csf.uidignore, User ID Tracking</option>\n";
+		print "<option value='qhtlfirewall.ignore'>qhtlfirewall.ignore - IP Blocking</option>\n";
+		print "<option value='qhtlfirewall.pignore'>qhtlfirewall.pignore, Process Tracking</option>\n";
+		print "<option value='qhtlfirewall.fignore'>qhtlfirewall.fignore, Directory Watching</option>\n";
+		print "<option value='qhtlfirewall.signore'>qhtlfirewall.signore, Script Alert</option>\n";
+		print "<option value='qhtlfirewall.rignore'>qhtlfirewall.rignore, Reverse DNS lookup</option>\n";
+		print "<option value='qhtlfirewall.suignore'>qhtlfirewall.suignore, Superuser check</option>\n";
+		print "<option value='qhtlfirewall.mignore'>qhtlfirewall.mignore, RT_LOCALRELAY</option>\n";
+		print "<option value='qhtlfirewall.logignore'>qhtlfirewall.logignore, Log Scanner</option>\n";
+		print "<option value='qhtlfirewall.uidignore'>qhtlfirewall.uidignore, User ID Tracking</option>\n";
 		print "</select> <input type='submit' class='btn btn-default' value='Edit'></form></td><td style='width:100%'>Edit lfd ignore file</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='dirwatch' type='submit' class='btn btn-default'>lfd Directory File Watching</button></form></td><td style='width:100%'>Edit the Directory File Watching file (csf.dirwatch) - all listed files and directories will be watched for changes by lfd</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='dyndns' type='submit' class='btn btn-default'>lfd Dynamic DNS</button></form></td><td style='width:100%'>Edit the Dynamic DNS file (csf.dyndns) - all listed domains will be resolved and allowed through the firewall</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='dirwatch' type='submit' class='btn btn-default'>qhtlwaterfall Directory File Watching</button></form></td><td style='width:100%'>Edit the Directory File Watching file (qhtlfirewall.dirwatch) - all listed files and directories will be watched for changes by qhtlwaterfall</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='dyndns' type='submit' class='btn btn-default'>qhtlwaterfall Dynamic DNS</button></form></td><td style='width:100%'>Edit the Dynamic DNS file (qhtlfirewall.dyndns) - all listed domains will be resolved and allowed through the firewall</td></tr>\n";
 		print "<tr><td><form action='$script' method='post'><select name='template'>\n";
 		foreach my $tmp ("alert.txt","tracking.txt","connectiontracking.txt","processtracking.txt","accounttracking.txt","usertracking.txt","sshalert.txt","webminalert.txt","sualert.txt","sudoalert.txt","uialert.txt","cpanelalert.txt","scriptalert.txt","filealert.txt","watchalert.txt","loadalert.txt","resalert.txt","integrityalert.txt","exploitalert.txt","relayalert.txt","portscan.txt","uidscan.txt","permblock.txt","netblock.txt","queuealert.txt","logfloodalert.txt","logalert.txt","modsecipdbcheck.txt") {print "<option>$tmp</option>\n"}
 		print "</select> <button name='action' value='templates' type='submit' class='btn btn-default'>Edit</button></form></td><td style='width:100%'>Edit email alert templates. See Firewall Information for details of each file</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='logfiles' type='submit' class='btn btn-default'>lfd Log Scanner Files</button></form></td><td style='width:100%'>Edit the Log Scanner file (csf.logfiles) - Scan listed log files for log lines and periodically send a report</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='blocklists' type='submit' class='btn btn-default'>lfd Blocklists</button></form></td><td style='width:100%'>Edit the Blocklists configuration file (csf.blocklists)</td></tr>\n";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='syslogusers' type='submit' class='btn btn-default'>lfd Syslog Users</button></form></td><td style='width:100%'>Edit the syslog/rsyslog allowed users file (csf.syslogusers)</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='logfiles' type='submit' class='btn btn-default'>qhtlwaterfall Log Scanner Files</button></form></td><td style='width:100%'>Edit the Log Scanner file (qhtlfirewall.logfiles) - Scan listed log files for log lines and periodically send a report</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='blocklists' type='submit' class='btn btn-default'>qhtlwaterfall Blocklists</button></form></td><td style='width:100%'>Edit the Blocklists configuration file (qhtlfirewall.blocklists)</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='syslogusers' type='submit' class='btn btn-default'>qhtlwaterfall Syslog Users</button></form></td><td style='width:100%'>Edit the syslog/rsyslog allowed users file (qhtlfirewall.syslogusers)</td></tr>\n";
 		print "</table>\n";
 		print "</div>\n";
 
 		if ($config{CLUSTER_SENDTO}) {
 			print "<div id='cluster' class='tab-pane active'>\n";
 			print "<table class='table table-bordered table-striped'>\n";
-			print "<thead><tr><th colspan='2'>csf - ConfigServer lfd Cluster</th></tr></thead>";
+			print "<thead><tr><th colspan='2'>qhtlfirewall - qhtlwaterfall Cluster</th></tr></thead>";
 
 			print "<tr><td><form action='$script' method='post'><button name='action' value='cping' type='submit' class='btn btn-default'>Cluster PING</button></form></td><td style='width:100%'>Ping each member of the cluster (logged in lfd.log)</td></tr>\n";
-			print "<tr><td><button onClick='\$(\"#callow\").submit();' class='btn btn-default'>Cluster Allow</button></td><td style='width:100%'><form action='$script' method='post' id='callow'><input type='submit' class='hide'><input type='hidden' name='action' value='callow'>Allow IP address <input type='text' name='ip' value='' size='18' style='background-color: lightgreen'> through the Cluster and add to the allow file (csf.allow)<br>Comment: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
-			print "<tr><td><button onClick='\$(\"#cdeny\").submit();' class='btn btn-default'>Cluster Deny</button></td><td style='width:100%'><form action='$script' method='post' id='cdeny'><input type='submit' class='hide'><input type='hidden' name='action' value='cdeny'>Block IP address <input type='text' name='ip' value='' size='18' style='background-color: pink'> in the Cluster and add to the deny file (csf.deny)<br>Comment: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
-			print "<tr><td><button onClick='\$(\"#cignore\").submit();' class='btn btn-default'>Cluster Ignore</button></td><td style='width:100%'><form action='$script' method='post' id='cignore'><input type='submit' class='hide'><input type='hidden' name='action' value='cignore'>Ignore IP address <input type='text' name='ip' value='' size='18'> in the Cluster and add to the ignore file (csf.ignore)<br>Comment: <input type='text' name='comment' value='' size='30'> Note: This will result in lfd being restarted</form></td></tr>\n";
+			print "<tr><td><button onClick='\$(\"#callow\").submit();' class='btn btn-default'>Cluster Allow</button></td><td style='width:100%'><form action='$script' method='post' id='callow'><input type='submit' class='hide'><input type='hidden' name='action' value='callow'>Allow IP address <input type='text' name='ip' value='' size='18' style='background-color: lightgreen'> through the Cluster and add to the allow file (qhtlfirewall.allow)<br>Comment: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
+			print "<tr><td><button onClick='\$(\"#cdeny\").submit();' class='btn btn-default'>Cluster Deny</button></td><td style='width:100%'><form action='$script' method='post' id='cdeny'><input type='submit' class='hide'><input type='hidden' name='action' value='cdeny'>Block IP address <input type='text' name='ip' value='' size='18' style='background-color: pink'> in the Cluster and add to the deny file (qhtlfirewall.deny)<br>Comment: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
+			print "<tr><td><button onClick='\$(\"#cignore\").submit();' class='btn btn-default'>Cluster Ignore</button></td><td style='width:100%'><form action='$script' method='post' id='cignore'><input type='submit' class='hide'><input type='hidden' name='action' value='cignore'>Ignore IP address <input type='text' name='ip' value='' size='18'> in the Cluster and add to the ignore file (qhtlfirewall.ignore)<br>Comment: <input type='text' name='comment' value='' size='30'> Note: This will result in qhtlwaterfall being restarted</form></td></tr>\n";
 			print "<tr><td><button onClick='\$(\"#cgrep\").submit();' class='btn btn-default'>Search the Cluster for IP</button></td><td style='width:100%'><form action='$script' method='post' id='cgrep'><input type='submit' class='hide'><input type='hidden' name='action' value='cgrep'>Search iptables for IP address <input type='text' name='ip' value='' size='18'></form></td></tr>\n";
-			print "<tr><td><button onClick='\$(\"#ctempdeny\").submit();' class='btn btn-default'>Cluster Temp Allow/Deny</button></td><td style='width:100%'><form action='$script' method='post' id='ctempdeny'><input type='submit' class='hide'><input type='hidden' name='action' value='ctempdeny'>Temporarily <select name='do'><option>block</option><option>allow</option></select> IP address <input type='text' name='ip' value='' size='18'> to port(s) <input type='text' name='ports' value='*' size='5'> for <input type='text' name='timeout' value='' size='4'> <select name='dur'><option>seconds</option><option>minutes</option><option>hours</option><option>days</option></select>.<br>Comment: <input type='text' name='comment' value='' size='30'><br>\n(ports can be either * for all ports, a single port, or a comma separated list of ports)</form></td></tr>\n";
+			print "<tr><td><button onClick='\$(\"#ctempdeny\").submit();' class='btn btn-default'>Cluster Temp Allow/Deny</button></td><td style='width:100%'><form action='$script' method='post' id='ctempdeny'><input type='submit' class='hide'><input type='hidden' name='action' value='ctempdeny'>Temporarily <select name='do' id='do'><option>allow</option><option>deny</option></select> IP address <input type='text' name='target' value='' size='18' id='target'> for $config{CF_TEMP} secs in CloudFlare AND qhtlfirewall for the chosen accounts and those with to \"any\"<br>Comment: <input type='text' name='comment' value='' size='30'></form></td></tr>\n";
 			print "<tr><td><button onClick='\$(\"#crm\").submit();' class='btn btn-default'>Cluster Remove Deny</button></td><td style='width:100%'><form action='$script' method='post' id='crm'><input type='submit' class='hide'><input type='hidden' name='action' value='crm'>Remove Deny IP address <input type='text' name='ip' value='' size='18' style=''> in the Cluster (temporary or permanent)</form></td></tr>\n";
 			print "<tr><td><button onClick='\$(\"#carm\").submit();' class='btn btn-default'>Cluster Remove Allow</button></td><td style='width:100%'><form action='$script' method='post' id='carm'><input type='submit' class='hide'><input type='hidden' name='action' value='carm'>Remove Allow IP address <input type='text' name='ip' value='' size='18' style=''> in the Cluster (temporary or permanent)</form></td></tr>\n";
 			print "<tr><td><button onClick='\$(\"#cirm\").submit();' class='btn btn-default'>Cluster Remove Ignore</button></td><td style='width:100%'><form action='$script' method='post' id='cirm'><input type='submit' class='hide'><input type='hidden' name='action' value='cirm'>Remove Ignore IP address <input type='text' name='ip' value='' size='18'> in the Cluster<br>Note: This will result in lfd being restarted</form></td></tr>\n";
@@ -2254,7 +2257,7 @@ EOF
 					my $options;
 					my %restricted;
 					if ($config{RESTRICT_UI}) {
-						sysopen (my $IN, "/usr/local/csf/lib/restricted.txt", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+						sysopen (my $IN, "/usr/local/qhtlfirewall/lib/restricted.txt", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 						flock ($IN, LOCK_SH);
 						while (my $entry = <$IN>) {
 							chomp $entry;
@@ -2268,7 +2271,7 @@ EOF
 					print "<tr><td><button onClick='\$(\"#cconfig\").submit();' class='btn btn-default'>Cluster Config</button></td><td style='width:100%'><form action='$script' method='post' id='cconfig'><input type='submit' class='hide'><input type='hidden' name='action' value='cconfig'>Change configuration option <select name='option'>$options</select> to <input type='text' name='value' value='' size='18'> in the Cluster";
 					if ($config{RESTRICT_UI}) {print "<br />\nSome items have been removed with RESTRICT_UI enabled"}
 					print "</form></td></tr>\n";
-					print "<tr><td><form action='$script' method='post'><button name='action' value='crestart' type='submit' class='btn btn-default'>Cluster Restart</button></form></td><td style='width:100%'>Restart csf and lfd on Cluster members</td></tr>\n";
+					print "<tr><td><form action='$script' method='post'><button name='action' value='crestart' type='submit' class='btn btn-default'>Cluster Restart</button></form></td><td style='width:100%'>Restart qhtlfirewall and qhtlwaterfall on Cluster members</td></tr>\n";
 				}
 			}
 			print "</table>\n";
@@ -2302,7 +2305,7 @@ EOF
 
 		print "<table class='table table-bordered table-striped'>\n";
 		print "<thead><tr><th colspan='2'>Extra</th></tr></thead>";
-		print "<tr><td><form action='$script' method='post'><button name='action' value='csftest' type='submit' class='btn btn-default'>Test iptables</button></form></td><td style='width:100%'>Check that iptables has the required modules to run csf</td></tr>\n";
+		print "<tr><td><form action='$script' method='post'><button name='action' value='csftest' type='submit' class='btn btn-default'>Test iptables</button></form></td><td style='width:100%'>Check that iptables has the required modules to run qhtlfirewall</td></tr>\n";
 		print "</table>\n";
 #		if ($config{DIRECTADMIN} and !$config{THIS_UI}) {
 #			print "<a href='/' class='btn btn-success' data-spy='affix' data-offset-bottom='0' style='bottom: 0; left:45%'><span class='glyphicon glyphicon-home'></span> DirectAdmin Main Page</a>\n";
@@ -2367,8 +2370,8 @@ EOF
 
 	unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq "logtailcmd" or $FORM{action} eq "loggrepcmd") {
 		print "<br>\n";
-		print "<div class='well well-sm'>csf: v$myv</div>";
-		print "<p>&copy;2006-2023, <a href='http://www.configserver.com' target='_blank'>ConfigServer Services</a> (Jonathan Michaelson)</p>\n";
+		print "<div class='well well-sm'>qhtlfirewall: v$myv</div>";
+		print "<p>&copy;2006-2025, qhtl</p>\n";
 		print "</div>\n";
 	}
 
@@ -2436,15 +2439,15 @@ sub chart {
 	}
 	if ($config{THIS_UI}) {
 		$imgdir = "$images/";
-		$imghddir = "/etc/csf/ui/images/";
+		$imghddir = "/etc/qhtlfirewall/ui/images/";
 	}
 
 	my $STATS;
-	if (-e "/var/lib/csf/stats/lfdstats") {
-		sysopen ($STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+	if (-e "/var/lib/qhtlfirewall/stats/lfdstats") {
+		sysopen ($STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 	}
-	elsif (-e "/var/lib/csf/stats/lfdmain") {
-		sysopen (my $OLDSTATS,"/var/lib/csf/stats/lfdmain", O_RDWR | O_CREAT);
+	elsif (-e "/var/lib/qhtlfirewall/stats/lfdmain") {
+		sysopen (my $OLDSTATS,"/var/lib/qhtlfirewall/stats/lfdmain", O_RDWR | O_CREAT);
 		flock ($OLDSTATS, LOCK_EX);
 		my @stats = <$OLDSTATS>;
 		chomp @stats;
@@ -2456,7 +2459,7 @@ sub chart {
 			push @newstats,$line;
 			$cnt++;
 		}
-		sysopen ($STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+		sysopen ($STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 		flock ($STATS, LOCK_EX);
 		seek ($STATS, 0, 0);
 		truncate ($STATS, 0);
@@ -2465,11 +2468,11 @@ sub chart {
 		}
 		close ($STATS);
 
-		rename "/var/lib/csf/stats/lfdmain", "/var/lib/csf/stats/lfdmain.".time;
+		rename "/var/lib/qhtlfirewall/stats/lfdmain", "/var/lib/qhtlfirewall/stats/lfdmain.".time;
 		close ($OLDSTATS);
-		sysopen ($STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+		sysopen ($STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 	} else {
-		sysopen ($STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+		sysopen ($STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 	}
 	flock ($STATS, LOCK_SH);
 	my @stats = <$STATS>;
@@ -2478,65 +2481,6 @@ sub chart {
 
 	if (@stats) {
 		ConfigServer::ServerStats::charts($config{CC_LOOKUPS},$imghddir);
-		print ConfigServer::ServerStats::charts_html($config{CC_LOOKUPS},$imgdir);
-	} else {
-		print "<table class='table table-bordered table-striped'>\n";
-		print "<tr><td>No statistical data has been collected yet</td></tr></table>\n";
-	}
-	&printreturn;
-
-	return;
-}
-# end chart
-###############################################################################
-# start systemstats
-sub systemstats {
-	my $type = shift;
-	if ($type eq "") {$type = "load"}
-	my $img;
-	my $imgdir = "";
-	my $imghddir = "";
-	if (-e "/usr/local/cpanel/version") {
-		if (-e "/usr/local/cpanel/bin/register_appconfig") {
-			$imgdir = "csf/";
-			$imghddir = "cgi/configserver/csf/";
-		} else {
-			$imgdir = "/";
-			$imghddir = "";
-		}
-	}
-	elsif (-e "/usr/local/directadmin/conf/directadmin.conf") {
-		$imgdir = "/CMD_PLUGINS_ADMIN/csf/images/";
-		$imghddir = "plugins/csf/images/";
-		umask(0133);
-	}
-	elsif (-e "/usr/local/interworx") {
-		$imgdir = "/configserver/csf/";
-		$imghddir = "/usr/local/interworx/html/configserver/csf/";
-		umask(0133);
-	}
-	elsif (-e "/usr/local/CyberCP/") {
-		$imgdir = "/static/configservercsf/";
-		$imghddir = "/usr/local/CyberCP/public/static/configservercsf/";
-		umask(0133);
-	}
-	if ($config{THIS_UI}) {
-		$imgdir = "$images/";
-		$imghddir = "/etc/csf/ui/images/";
-	}
-	if (defined $ENV{WEBMIN_VAR} and defined $ENV{WEBMIN_CONFIG}) {
-		$imgdir = "/csf/";
-		$imghddir = "";
-	}
-
-	sysopen (my $STATS,"/var/lib/csf/stats/system", O_RDWR | O_CREAT);
-	flock ($STATS, LOCK_SH);
-	my @stats = <$STATS>;
-	chomp @stats;
-	close ($STATS);
-
-	if (@stats > 1) {
-		ConfigServer::ServerStats::graphs($type,$config{ST_SYSTEM_MAXDAYS},$imghddir);
 
 		print "<div class='text-center'><form action='$script' method='post'><input type='hidden' name='action' value='systemstats'><select name='graph'>\n";
 		my $selected;
@@ -2556,7 +2500,7 @@ sub systemstats {
 			if ($type eq "diskw") {$selected = "selected"} else {$selected = ""}
 			print "<option value='diskw' $selected>Disk Write Performance</option>\n";
 		}
-		if (-e "/var/lib/csf/stats/email") {
+		if (-e "/var/lib/qhtlfirewall/stats/email") {
 			if ($type eq "email") {$selected = "selected"} else {$selected = ""}
 			print "<option value='email' $selected>Email Statistics</option>\n";
 		}
@@ -2765,7 +2709,7 @@ sub cloudflare {
 	print "</script>\n";
 
 	print "<table class='table table-bordered table-striped'>\n";
-	print "<thead><tr><th colspan='2'>csf - CloudFlare</th></tr></thead>";
+	print "<thead><tr><th colspan='2'>qhtlfirewall - CloudFlare</th></tr></thead>";
 	print "<tr><td>Select the user(s), then select the action below</td><td style='width:100%'><select data-placeholder='Select user(s)' class='chosen-select' id='domains' name='domains' multiple>\n";
 	foreach my $user (keys %{$scope->{user}}) {print "<option>$user</option>\n"}
 	print "</select></td></tr>\n";
@@ -2777,7 +2721,7 @@ sub cloudflare {
 	print "<tr><td><button type='button' id='cflistbtn' class='btn btn-default' disabled='true'>CF List Rules</button></td><td style='width:100%'><form action='#' id='cflist'>List <select name='type' id='type'><option>all</option><option>block</option><option>challenge</option><option>whitelist</option></select> rules in CloudFlare ONLY for the chosen accounts</form></td></tr>";
 	print "<tr><td><button type='button' id='cfaddbtn' class='btn btn-default' disabled='true'>CloudFlare Add</button></td><td style='width:100%'><form action='#' id='cfadd'>Add <select name='type' id='type'><option>block</option><option>challenge</option><option>whitelist</option></select> rule for target <input type='text' name='target' value='' size='18' id='target'> in CloudFlare ONLY for the chosen accounts</form></td></tr>\n";
 	print "<tr><td><button type='button' id='cfremovebtn' class='btn btn-default' disabled='true'>CloudFlare Delete</button></td><td style='width:100%'><form action='#' id='cfremove'>Delete rule for target <input type='text' name='target' value='' size='18' id='target'> in CloudFlare ONLY</form></td></tr>\n";
-	print "<tr><td><button type='button' id='cftempdenybtn' class='btn btn-default' disabled='true'>CF Temp Allow/Deny</button></td><td style='width:100%'><form action='#' id='cftempdeny'>Temporarily <select name='do' id='do'><option>allow</option><option>deny</option></select> IP address <input type='text' name='target' value='' size='18' id='target'> for $config{CF_TEMP} secs in CloudFlare AND csf for the chosen accounts and those with to \"any\"</form></td></tr>";
+	print "<tr><td><button type='button' id='cftempdenybtn' class='btn btn-default' disabled='true'>CF Temp Allow/Deny</button></td><td style='width:100%'><form action='#' id='cftempdeny'>Temporarily <select name='do' id='do'><option>allow</option><option>deny</option></select> IP address <input type='text' name='target' value='' size='18' id='target'> for $config{CF_TEMP} secs in CloudFlare AND qhtlfirewall for the chosen accounts and those with to \"any\"<br>Comment: <input type='text' name='comment' value='' size='30'></form></td></tr>";
 	print "</table>\n";
 	print "<div id='CFajax'><div class='panel panel-info'><div class='panel-heading'>Output will appear here</div></div></div>\n";
 	print "<div class='bs-callout bs-callout-success'>Note:\n<ul>\n";
@@ -2942,8 +2886,8 @@ sub csgetversion {
 sub manualversion {
 	my $current = shift;
 	my $upgrade = 0;
-	my $url = "https://$config{DOWNLOADSERVER}/csf/version.txt";
-	if ($config{URLGET} == 1) {$url = "http://$config{DOWNLOADSERVER}/csf/version.txt";}
+	my $url = "https://$config{DOWNLOADSERVER}/qhtlfirewall/version.txt";
+	if ($config{URLGET} == 1) {$url = "http://$config{DOWNLOADSERVER}/qhtlfirewall/version.txt";}
 	my ($status, $newversion) = $urlget->urlget($url);
 	if (!$status and $newversion ne "" and $newversion =~ /^[\d\.]*$/ and $newversion > $current) {$upgrade = 1} else {$newversion = ""}
 	return ($upgrade, $newversion);
diff --git a/qhtlfirewall/ConfigServer/GetEthDev.pm b/qhtlfirewall/ConfigServer/GetEthDev.pm
index 6d2f591..429a27b 100644
--- a/qhtlfirewall/ConfigServer/GetEthDev.pm
+++ b/qhtlfirewall/ConfigServer/GetEthDev.pm
@@ -21,7 +21,7 @@
 package ConfigServer::GetEthDev;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use Fcntl qw(:DEFAULT :flock);
 use IPC::Open3;
diff --git a/qhtlfirewall/ConfigServer/GetIPs.pm b/qhtlfirewall/ConfigServer/GetIPs.pm
index bb57096..56d10de 100644
--- a/qhtlfirewall/ConfigServer/GetIPs.pm
+++ b/qhtlfirewall/ConfigServer/GetIPs.pm
@@ -21,7 +21,7 @@
 package ConfigServer::GetIPs;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use Socket;
 use IPC::Open3;
diff --git a/qhtlfirewall/ConfigServer/KillSSH.pm b/qhtlfirewall/ConfigServer/KillSSH.pm
index 41bc5ed..97b193a 100644
--- a/qhtlfirewall/ConfigServer/KillSSH.pm
+++ b/qhtlfirewall/ConfigServer/KillSSH.pm
@@ -21,7 +21,7 @@
 package ConfigServer::KillSSH;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use ConfigServer::Logger;
 
diff --git a/qhtlfirewall/ConfigServer/Logger.pm b/qhtlfirewall/ConfigServer/Logger.pm
index d275da4..cafb9b7 100644
--- a/qhtlfirewall/ConfigServer/Logger.pm
+++ b/qhtlfirewall/ConfigServer/Logger.pm
@@ -21,7 +21,7 @@
 package ConfigServer::Logger;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use Fcntl qw(:DEFAULT :flock);
 use ConfigServer::Config;
@@ -59,18 +59,18 @@ sub logfile {
 	my @ts = split(/\s+/,scalar localtime);
 	if ($ts[2] < 10) {$ts[2] = " ".$ts[2]}
 
-	my $logfile = "/var/log/lfd.log";
-	if ($< != 0) {$logfile = "/var/log/lfd_messenger.log"}
+	my $logfile = "/var/log/qhtlwaterfall.log";
+	if ($< != 0) {$logfile = "/var/log/qhtlwaterfall_messenger.log"}
 	
 	sysopen (my $LOGFILE, $logfile, O_WRONLY | O_APPEND | O_CREAT);
 	flock ($LOGFILE, LOCK_EX);
-	print $LOGFILE "$ts[1] $ts[2] $ts[3] $hostshort lfd[$$]: $line\n";
+	print $LOGFILE "$ts[1] $ts[2] $ts[3] $hostshort qhtlwaterfall[$$]: $line\n";
 	close ($LOGFILE);
 
 	if ($config{SYSLOG} and $sys_syslog) {
 		eval {
 			local $SIG{__DIE__} = undef;
-			openlog('lfd', 'ndelay,pid', 'user');
+			openlog('qhtlwaterfall', 'ndelay,pid', 'user');
 			syslog('info', $line);
 			closelog();
 		}
diff --git a/qhtlfirewall/ConfigServer/LookUpIP.pm b/qhtlfirewall/ConfigServer/LookUpIP.pm
index 5c293c4..02f35eb 100644
--- a/qhtlfirewall/ConfigServer/LookUpIP.pm
+++ b/qhtlfirewall/ConfigServer/LookUpIP.pm
@@ -21,7 +21,7 @@
 package ConfigServer::LookUpIP;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use Fcntl qw(:DEFAULT :flock);
 use IPC::Open3;
@@ -63,7 +63,7 @@ sub iplookup {
 		my $dnsrip;
 		my $dnshost;
 		my $cachehit;
-		open (my $DNS, "<", "/var/lib/csf/csf.dnscache");
+		open (my $DNS, "<", "/var/lib/qhtlfirewall/csf.dnscache");
 		flock ($DNS, LOCK_SH);
 		while (my $line = <$DNS>) {
 			chomp $line;
@@ -119,7 +119,7 @@ sub iplookup {
 					alarm(0);
 				}
 			}
-			sysopen (DNS, "/var/lib/csf/csf.dnscache", O_WRONLY | O_APPEND | O_CREAT);
+			sysopen (DNS, "/var/lib/qhtlfirewall/csf.dnscache", O_WRONLY | O_APPEND | O_CREAT);
 			flock (DNS, LOCK_EX);
 			print DNS "$ip|$ip|$host\n";
 			close (DNS);
@@ -197,9 +197,9 @@ sub geo_binary {
 	}
 
 	if ($config{CC_SRC} eq "" or $config{CC_SRC} eq "1") {
-		my $file = "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv${ipv}.csv";
+		my $file = "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv${ipv}.csv";
 		if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {
-			$file = "/var/lib/csf/Geo/GeoLite2-City-Blocks-IPv${ipv}.csv";
+			$file = "/var/lib/qhtlfirewall/Geo/GeoLite2-City-Blocks-IPv${ipv}.csv";
 		}
 		my $start = 0;
 		my $end = -s $file;
@@ -238,9 +238,9 @@ sub geo_binary {
 		close ($CSV);
 
 		if ($geoid > 0) {
-			my $file = "/var/lib/csf/Geo/GeoLite2-Country-Locations-en.csv";
+			my $file = "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Locations-en.csv";
 			if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {
-				$file = "/var/lib/csf/Geo/GeoLite2-City-Locations-en.csv";
+				$file = "/var/lib/qhtlfirewall/Geo/GeoLite2-City-Locations-en.csv";
 			}
 			my $start = 0;
 			my $end = -s $file;
@@ -281,7 +281,7 @@ sub geo_binary {
 		}
 
 		if ($config{CC_LOOKUPS} == 3) {
-			my $file = "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv${ipv}.csv";
+			my $file = "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv${ipv}.csv";
 			my $start = 0;
 			my $end = -s $file;
 			$end += 4;
@@ -322,7 +322,7 @@ sub geo_binary {
 		}
 	} elsif ($config{CC_SRC} eq "2") {
 		my %country_name;
-		open (my $CC, "<", "/var/lib/csf/Geo/countryInfo.txt");
+		open (my $CC, "<", "/var/lib/qhtlfirewall/Geo/countryInfo.txt");
 		flock ($CC, LOCK_SH);
 		foreach my $line (<$CC>) {
 			if ($line eq "" or $line =~ /^\#/ or $line =~ /^\s/) {next}
@@ -331,9 +331,9 @@ sub geo_binary {
 		}
 		close ($CC);
 
-		my $file = "/var/lib/csf/Geo/dbip-country-lite.csv";
+		my $file = "/var/lib/qhtlfirewall/Geo/dbip-country-lite.csv";
 		if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {
-			$file = "/var/lib/csf/Geo/dbip-city-lite.csv";
+			$file = "/var/lib/qhtlfirewall/Geo/dbip-city-lite.csv";
 		}
 		my $start = 0;
 		my $end = -s $file;
@@ -384,7 +384,7 @@ sub geo_binary {
 		close ($CSV);
 
 		if ($config{CC_LOOKUPS} == 3) {
-			my $file = "/var/lib/csf/Geo/ip2asn-combined.tsv";
+			my $file = "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv";
 			my $start = 0;
 			my $end = -s $file;
 			$end += 4;
diff --git a/qhtlfirewall/ConfigServer/Messenger.pm b/qhtlfirewall/ConfigServer/Messenger.pm
index bb59fd6..c12ec3f 100644
--- a/qhtlfirewall/ConfigServer/Messenger.pm
+++ b/qhtlfirewall/ConfigServer/Messenger.pm
@@ -21,7 +21,7 @@
 package ConfigServer::Messenger;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use File::Copy;
 use JSON::Tiny;
@@ -69,7 +69,7 @@ my $osslkey;
 my $osslca;
 my $sslaliases;
 my $litestart = 0;
-my $ssldir = "/var/lib/csf/ssl/";
+my $ssldir = "/var/lib/qhtlfirewall/ssl/";
 my $phphandler;
 my $version = 1;
 my $serverroot;
@@ -278,9 +278,9 @@ sub messenger {
 	}
 	
 	my $index;
-	if ($type eq "HTML" and $config{RECAPTCHA_SITEKEY} ne "") {$index = "/etc/csf/messenger/index.recaptcha.html"}
-	elsif ($type eq "HTML") {$index = "/etc/csf/messenger/index.html"}
-	else {$index = "/etc/csf/messenger/index.text"}
+	if ($type eq "HTML" and $config{RECAPTCHA_SITEKEY} ne "") {$index = "/etc/qhtlfirewall/messenger/index.recaptcha.html"}
+	elsif ($type eq "HTML") {$index = "/etc/qhtlfirewall/messenger/index.html"}
+	else {$index = "/etc/qhtlfirewall/messenger/index.text"}
 	open (my $IN, "<", $index);
 	flock ($IN, LOCK_SH);
 	my @message = <$IN>;
@@ -289,10 +289,10 @@ sub messenger {
 
 	my %images;
 	if ($type eq "HTML") {
-		opendir (DIR, "/etc/csf/messenger");
+	opendir (DIR, "/etc/qhtlfirewall/messenger");
 		foreach my $file (readdir(DIR)) {
 			if ($file =~ /\.(gif|png|jpg)$/) {
-				open (my $IN, "<", "/etc/csf/messenger/$file");
+				open (my $IN, "<", "/etc/qhtlfirewall/messenger/$file");
 				flock ($IN, LOCK_SH);
 				my @data = <$IN>;
 				close ($IN);
@@ -388,7 +388,7 @@ sub messenger {
 								my $text;
 								eval {
 									local $SIG{__DIE__} = undef;
-									eval("no lib '/usr/local/csf/lib'");
+									eval("no lib '/usr/local/qhtlfirewall/lib'");
 									my $urlget = ConfigServer::URLGet->new(2, "", $config{URLPROXY});
 									my $url = "https://www.google.com/recaptcha/api/siteverify?secret=$config{RECAPTCHA_SECRET}&response=$recv";
 									($status, $text) = $urlget->urlget($url);
@@ -491,7 +491,7 @@ sub messenger {
 # start messengerv2
 sub messengerv2 {
 	my (undef,undef,$uid,$gid,undef,undef,undef,$homedir) = getpwnam($config{MESSENGER_USER});
-	if ($homedir eq "" or $homedir eq "/" or $homedir =~ m[/etc/csf]) {
+	if ($homedir eq "" or $homedir eq "/" or $homedir =~ m[/etc/qhtlfirewall]) {
 		return (1, "The home directory for $config{MESSENGER_USER} is not valid [$homedir]");
 	}
 	if (! -e $homedir) {
@@ -519,15 +519,15 @@ sub messengerv2 {
 	}
 	unless (-e $public_html."/index.php") {
 		if ($config{RECAPTCHA_SITEKEY}) {
-			system("cp","/etc/csf/messenger/index.recaptcha.php",$public_html."/index.php");
+			system("cp","/etc/qhtlfirewall/messenger/index.recaptcha.php",$public_html."/index.php");
 		} else {
-			system("cp","/etc/csf/messenger/index.php",$public_html."/index.php");
+			system("cp","/etc/qhtlfirewall/messenger/index.php",$public_html."/index.php");
 		}
 		system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}",$public_html."/index.php");
 		system("chmod","644",$public_html."/index.php");
 	}
 	unless (-e $homedir."/en.php") {
-		system("cp","/etc/csf/messenger/en.php",$homedir."/en.php");
+	system("cp","/etc/qhtlfirewall/messenger/en.php",$homedir."/en.php");
 		system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}",$homedir."/en.php");
 		system("chmod","644",$homedir."/en.php");
 	}
@@ -537,13 +537,13 @@ sub messengerv2 {
 	print $CONF "\$secret = '$config{RECAPTCHA_SECRET}';\n";
 	print $CONF "\$sitekey = '$config{RECAPTCHA_SITEKEY}';\n";
 	print $CONF "\$unblockfile = '$homedir/unblock.txt';\n";
-	print $CONF "\$logfile = '/var/log/lfd_messenger.log';\n";
+	print $CONF "\$logfile = '/var/log/qhtlwaterfall_messenger.log';\n";
 	print $CONF "?>\n";
 	system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}",$homedir."/recaptcha.php");
 	system("chmod","644",$homedir."/recaptcha.php");
 
 	
-	open (my $OUT, ">", "/var/lib/csf/csf.conf");
+	open (my $OUT, ">", "/var/lib/qhtlfirewall/qhtlfirewall.conf");
 	flock ($OUT, LOCK_EX);
 
 	if ($config{MESSENGER_HTML_IN} ne "") {
@@ -583,7 +583,7 @@ sub messengerv2 {
 		my $sslcert;
 		my $sslkey;
 		my $sslaliases;
-		my $ssldir = "/var/lib/csf/ssl/";
+	my $ssldir = "/var/lib/qhtlfirewall/ssl/";
 		unless (-d $ssldir) {
 			mkdir $ssldir;
 			mkdir $ssldir."certs/";
@@ -710,14 +710,14 @@ sub messengerv2 {
 	}
 	close ($OUT);
 
-	system("cp","-f","/var/lib/csf/csf.conf","/etc/apache2/conf.d/csf.messenger.conf");
+	system("cp","-f","/var/lib/qhtlfirewall/qhtlfirewall.conf","/etc/apache2/conf.d/qhtlfirewall.messenger.conf");
 
 	my ($childin, $childout);
 	my $cmdpid = open3($childin, $childout, $childout, "/usr/sbin/apachectl", "configtest");
 	my @data = <$childout>;
 	waitpid ($cmdpid, 0);
 
-	if (-e "/var/lib/csf/apachectl.error") {unlink("/var/lib/csf/apachectl.error")}
+	if (-e "/var/lib/qhtlfirewall/apachectl.error") {unlink("/var/lib/qhtlfirewall/apachectl.error")}
 	my $ok = 0;
 	foreach (@data) {
 		if ($_ =~ /^Syntax OK/) {$ok = 1}
@@ -726,11 +726,11 @@ sub messengerv2 {
 		system("/scripts/restartsrv_httpd");
 		logfile("MESSENGERV2: Started Apache MESSENGERV2 service using /etc/apache2/conf.d/csf.messenger.conf");
 	} else {
-		logfile("*MESSENGERV2*: Unable to generate a valid Apache configuration, see /var/lib/csf/apachectl.error");
+	logfile("*MESSENGERV2*: Unable to generate a valid Apache configuration, see /var/lib/qhtlfirewall/apachectl.error");
 		if (-e "/etc/apache2/conf.d/csf.messenger.conf") {unlink("/etc/apache2/conf.d/csf.messenger.conf")}
 		system("/scripts/restartsrv_httpd");
 		
-		open (my $ERROR, ">", "/var/lib/csf/apachectl.error");
+	open (my $ERROR, ">", "/var/lib/qhtlfirewall/apachectl.error");
 		flock ($ERROR, LOCK_EX);
 		foreach (@data) {print $ERROR $_}
 		close ($ERROR);
@@ -742,7 +742,7 @@ sub messengerv2 {
 # start messengerv3
 sub messengerv3 {
 	my (undef,undef,$uid,$gid,undef,undef,undef,$homedir) = getpwnam($config{MESSENGER_USER});
-	if ($homedir eq "" or $homedir eq "/" or $homedir =~ m[/etc/csf]) {
+	if ($homedir eq "" or $homedir eq "/" or $homedir =~ m[/etc/qhtlfirewall]) {
 		return (1, "The home directory for $config{MESSENGER_USER} is not valid [$homedir]");
 	}
 	if (! -e $homedir) {
@@ -771,15 +771,15 @@ EOF
 	}
 	unless (-e $public_html."/index.php") {
 		if ($config{RECAPTCHA_SITEKEY}) {
-			system("cp","/etc/csf/messenger/index.recaptcha.php",$public_html."/index.php");
+			system("cp","/etc/qhtlfirewall/messenger/index.recaptcha.php",$public_html."/index.php");
 		} else {
-			system("cp","/etc/csf/messenger/index.php",$public_html."/index.php");
+			system("cp","/etc/qhtlfirewall/messenger/index.php",$public_html."/index.php");
 		}
 		system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}",$public_html."/index.php");
 		system("chmod","644",$public_html."/index.php");
 	}
 	unless (-e $homedir."/en.php") {
-		system("cp","/etc/csf/messenger/en.php",$homedir."/en.php");
+	system("cp","/etc/qhtlfirewall/messenger/en.php",$homedir."/en.php");
 		system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}",$homedir."/en.php");
 		system("chmod","644",$homedir."/en.php");
 	}
@@ -789,7 +789,7 @@ EOF
 	print $CONF "\$secret = '$config{RECAPTCHA_SECRET}';\n";
 	print $CONF "\$sitekey = '$config{RECAPTCHA_SITEKEY}';\n";
 	print $CONF "\$unblockfile = '$homedir/unblock.txt';\n";
-	print $CONF "\$logfile = '/var/log/lfd_messenger.log';\n";
+	print $CONF "\$logfile = '/var/log/qhtlwaterfall_messenger.log';\n";
 	print $CONF "?>\n";
 	system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}",$homedir."/recaptcha.php");
 	system("chmod","644",$homedir."/recaptcha.php");
@@ -801,7 +801,7 @@ EOF
 		$webserver = "litespeed";
 	}
 
-	open (my $OUT, ">", "/var/lib/csf/csf.conf");
+	open (my $OUT, ">", "/var/lib/qhtlfirewall/qhtlfirewall.conf");
 	flock ($OUT, LOCK_EX);
 
 	if ($config{MESSENGERV3PHPHANDLER} ne "") {
@@ -818,7 +818,7 @@ EOF
 		}
 	}
 
-	foreach my $line (slurp("/usr/local/csf/tpl/$webserver.main.txt")) {
+	foreach my $line (slurp("/usr/local/qhtlfirewall/tpl/$webserver.main.txt")) {
 		$line =~ s/\[PORT\]/$config{MESSENGER_HTML}/g;
 		if ($line =~ /Listen \[::\]:/ and !$config{IPV6}) {next}
 		$line =~ s/\[SERVERNAME\]/$hostname/g;
@@ -830,7 +830,7 @@ EOF
 	}
 	
 	if ($config{MESSENGER_HTML_IN} ne "") {
-		foreach my $line (slurp("/usr/local/csf/tpl/$webserver.http.txt")) {
+	foreach my $line (slurp("/usr/local/qhtlfirewall/tpl/$webserver.http.txt")) {
 			$line =~ s/\[PORT\]/$config{MESSENGER_HTML}/g;
 			if ($line =~ /Listen \[::\]:/ and !$config{IPV6}) {next}
 			$line =~ s/\[SERVERNAME\]/$hostname/g;
@@ -888,7 +888,7 @@ EOF
 		my @virtualhost;
 		my $start = 0;
 		my $key = $ssldomainkeys[0];
-		foreach my $line (slurp("/usr/local/csf/tpl/$webserver.https.txt")) {
+	foreach my $line (slurp("/usr/local/qhtlfirewall/tpl/$webserver.https.txt")) {
 			if ($line =~ /^\# Virtualhost start/) {$start = 1}
 			if ($start) {
 				if ($line =~ /^\# Virtualhost end/) {$start = 0}
@@ -975,26 +975,26 @@ EOF
 
 	my $location;
 	if (-d $config{MESSENGERV3LOCATION}) {
-		system("cp","-f","/var/lib/csf/csf.conf",$config{MESSENGERV3LOCATION}."/csf.messenger.conf");
+		system("cp","-f","/var/lib/qhtlfirewall/qhtlfirewall.conf",$config{MESSENGERV3LOCATION}."/qhtlfirewall.messenger.conf");
 		$location = $config{MESSENGERV3LOCATION}."/csf.messenger.conf";
 	}
 	elsif (-f $config{MESSENGERV3LOCATION}) {
 		my @conf = slurp($config{MESSENGERV3LOCATION});
-		unless (grep {$_ =~ m[^Include /var/lib/csf/csf.conf]i} @conf) {
+		unless (grep {$_ =~ m[^Include /var/lib/qhtlfirewall/qhtlfirewall.conf]i} @conf) {
 			sysopen (my $FILE, $config{MESSENGERV3LOCATION}, O_WRONLY | O_APPEND | O_CREAT);
 			flock ($FILE, LOCK_EX);
 			if ($webserver eq "apache") {
-				print $FILE "Include /var/lib/csf/csf.conf\n";
+				print $FILE "Include /var/lib/qhtlfirewall/qhtlfirewall.conf\n";
 			}
 			elsif ($webserver eq "litespeed") {
-				print $FILE "include /var/lib/csf/csf.conf\n";
+				print $FILE "include /var/lib/qhtlfirewall/qhtlfirewall.conf\n";
 			}
 			close ($FILE);
 		}
 		$location = $config{MESSENGERV3LOCATION};
 	}
 	else {
-		logfile("MESSENGERV3: [$config{MESSENGERV3LOCATION}] is neither a directory nor a file. You must manually include /var/lib/csf/csf.conf into the $webserver configuration");
+		logfile("MESSENGERV3: [$config{MESSENGERV3LOCATION}] is neither a directory nor a file. You must manually include /var/lib/qhtlfirewall/qhtlfirewall.conf into the $webserver configuration");
 		return;
 	}
 
@@ -1004,7 +1004,7 @@ EOF
 		my @data = <$childout>;
 		waitpid ($cmdpid, 0);
 
-		if (-e "/var/lib/csf/messenger.error") {unlink("/var/lib/csf/messenger.error")}
+		if (-e "/var/lib/qhtlfirewall/messenger.error") {unlink("/var/lib/qhtlfirewall/messenger.error")}
 		my $ok = 0;
 		foreach (@data) {
 			if ($_ =~ /^Syntax OK/) {$ok = 1}
@@ -1013,7 +1013,7 @@ EOF
 			system($config{MESSENGERV3RESTART});
 			logfile("MESSENGERV3: Restarted $webserver MESSENGERV3 service using $location");
 		} else {
-			open (my $ERROR, ">", "/var/lib/csf/messenger.error");
+		open (my $ERROR, ">", "/var/lib/qhtlfirewall/messenger.error");
 			flock ($ERROR, LOCK_EX);
 			foreach (@data) {print $ERROR $_}
 			close ($ERROR);
@@ -1023,12 +1023,12 @@ EOF
 			}
 			elsif (-f $config{MESSENGERV3LOCATION}) {
 				my @conf = slurp($config{MESSENGERV3LOCATION});
-				if (grep {$_ =~ m[^Include /var/lib/csf/csf.conf]i} @conf) {
+				if (grep {$_ =~ m[^Include /var/lib/qhtlfirewall/qhtlfirewall.conf]i} @conf) {
 					sysopen (my $FILE, $config{MESSENGERV3LOCATION}, O_WRONLY | O_CREAT | O_TRUNC);
 					flock ($FILE, LOCK_EX);
 					foreach my $line (@conf) {
 						$line =~ s/$cleanreg//g;
-						if ($line =~ m[^Include /var/lib/csf/csf.conf]i) {next}
+						if ($line =~ m[^Include /var/lib/qhtlfirewall/qhtlfirewall.conf]i) {next}
 						print $FILE $line."\n";
 					}
 					close ($FILE);
@@ -1037,7 +1037,7 @@ EOF
 
 			system($config{MESSENGERV3RESTART});
 
-			logfile("*MESSENGERV3*: Unable to generate a valid $webserver configuration, see /var/lib/csf/messenger.error");
+		logfile("*MESSENGERV3*: Unable to generate a valid $webserver configuration, see /var/lib/qhtlfirewall/messenger.error");
 		}
 	} else {
 		system($config{MESSENGERV3RESTART});
@@ -1052,7 +1052,7 @@ sub messengerlog {
 	my $homedir = shift;
 	my $message = shift;
 	if ($config{DEBUG}) {
-		sysopen (my $LOG, "/var/log/lfd_messenger.log", O_WRONLY | O_APPEND | O_CREAT);
+		sysopen (my $LOG, "/var/log/qhtlwaterfall_messenger.log", O_WRONLY | O_APPEND | O_CREAT);
 		print $LOG "[$$]: ".$message."\n";
 		close ($LOG);
 	}
diff --git a/qhtlfirewall/ConfigServer/Ports.pm b/qhtlfirewall/ConfigServer/Ports.pm
index 2bacaaf..e160d06 100644
--- a/qhtlfirewall/ConfigServer/Ports.pm
+++ b/qhtlfirewall/ConfigServer/Ports.pm
@@ -21,7 +21,7 @@
 package ConfigServer::Ports;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use ConfigServer::Config;
 
diff --git a/qhtlfirewall/ConfigServer/RBLCheck.pm b/qhtlfirewall/ConfigServer/RBLCheck.pm
index 6034f88..abc35fb 100644
--- a/qhtlfirewall/ConfigServer/RBLCheck.pm
+++ b/qhtlfirewall/ConfigServer/RBLCheck.pm
@@ -21,7 +21,7 @@
 package ConfigServer::RBLCheck;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use ConfigServer::Config;
 use ConfigServer::CheckIP qw(checkip);
@@ -61,10 +61,10 @@ sub report {
 
 	&getethdev;
 
-	my @RBLS = slurp("/usr/local/csf/lib/csf.rbls");
+	my @RBLS = slurp("/usr/local/qhtlfirewall/lib/csf.rbls");
 
-	if (-e "/etc/csf/csf.rblconf") {
-		my @entries = slurp("/etc/csf/csf.rblconf");
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.rblconf") {
+		my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.rblconf");
 		foreach my $line (@entries) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -101,12 +101,12 @@ sub report {
 		my $type = $netip->iptype();
 		if ($type eq "PUBLIC") {
 
-			if ($verbose and -e "/var/lib/csf/${ip}.rbls") {
-				unlink "/var/lib/csf/${ip}.rbls";
+			if ($verbose and -e "/var/lib/qhtlfirewall/${ip}.rbls") {
+				unlink "/var/lib/qhtlfirewall/${ip}.rbls";
 			}
 
-			if (-e "/var/lib/csf/${ip}.rbls") {
-				my $text = join("\n",slurp("/var/lib/csf/${ip}.rbls"));
+			if (-e "/var/lib/qhtlfirewall/${ip}.rbls") {
+				my $text = join("\n",slurp("/var/lib/qhtlfirewall/${ip}.rbls"));
 				if ($ui) {print $text} else {$output .= $text}
 			} else {
 				if ($verbose) {
@@ -146,7 +146,7 @@ sub report {
 						if ($ui) {print $text} else {$output .= $text}
 						$ipresult .= $text;
 					}
-					sysopen (my $OUT, "/var/lib/csf/${ip}.rbls", O_WRONLY | O_CREAT);
+					sysopen (my $OUT, "/var/lib/qhtlfirewall/${ip}.rbls", O_WRONLY | O_CREAT);
 					flock($OUT, LOCK_EX);
 					print $OUT $ipresult;
 					close ($OUT);
diff --git a/qhtlfirewall/ConfigServer/RBLLookup.pm b/qhtlfirewall/ConfigServer/RBLLookup.pm
index 16de33f..a0dd0b2 100644
--- a/qhtlfirewall/ConfigServer/RBLLookup.pm
+++ b/qhtlfirewall/ConfigServer/RBLLookup.pm
@@ -21,7 +21,7 @@
 package ConfigServer::RBLLookup;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use IPC::Open3;
 use Net::IP;
diff --git a/qhtlfirewall/ConfigServer/RegexMain.pm b/qhtlfirewall/ConfigServer/RegexMain.pm
index 483cf6e..2b15ffa 100644
--- a/qhtlfirewall/ConfigServer/RegexMain.pm
+++ b/qhtlfirewall/ConfigServer/RegexMain.pm
@@ -21,7 +21,7 @@
 package ConfigServer::RegexMain;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use IPC::Open3;
 use ConfigServer::Config;
 use ConfigServer::CheckIP qw(checkip);
@@ -83,7 +83,7 @@ my $ethdev = ConfigServer::GetEthDev->new();
 %brd = $ethdev->brd;
 %ips = $ethdev->ipv4;
 
-if (-e "/usr/local/csf/bin/regex.custom.pm") {require "/usr/local/csf/bin/regex.custom.pm"} ##no critic
+if (-e "/usr/local/qhtlfirewall/bin/regex.custom.pm") {require "/usr/local/qhtlfirewall/bin/regex.custom.pm"} ##no critic
 
 # end main
 ###############################################################################
@@ -96,7 +96,7 @@ sub processline {
 	$line =~ s/\n//g;
 	$line =~ s/\r//g;
 
-	if (-e "/usr/local/csf/bin/regex.custom.pm") {
+	if (-e "/usr/local/qhtlfirewall/bin/regex.custom.pm") {
 		my ($text,$ip,$app,$trigger,$ports,$temp,$cf) = &custom_line($line,$lgfile);
 		if ($text) {
 			return ($text,$ip,$app,$trigger,$ports,$temp,$cf);
diff --git a/qhtlfirewall/ConfigServer/Sanity.pm b/qhtlfirewall/ConfigServer/Sanity.pm
index dc2fc12..e8f22b1 100644
--- a/qhtlfirewall/ConfigServer/Sanity.pm
+++ b/qhtlfirewall/ConfigServer/Sanity.pm
@@ -21,7 +21,7 @@
 package ConfigServer::Sanity;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use Carp;
 use ConfigServer::Config;
@@ -33,7 +33,7 @@ our @EXPORT_OK   = qw(sanity);
 
 my %sanity;
 my %sanitydefault;
-my $sanityfile = "/usr/local/csf/lib/sanity.txt";
+my $sanityfile = "/usr/local/qhtlfirewall/lib/sanity.txt";
 
 open (my $IN, "<", $sanityfile);
 flock ($IN, LOCK_SH);
diff --git a/qhtlfirewall/ConfigServer/Sendmail.pm b/qhtlfirewall/ConfigServer/Sendmail.pm
index 8829440..b52d2af 100644
--- a/qhtlfirewall/ConfigServer/Sendmail.pm
+++ b/qhtlfirewall/ConfigServer/Sendmail.pm
@@ -21,7 +21,7 @@
 package ConfigServer::Sendmail;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use POSIX qw(strftime);
 use Fcntl qw(:DEFAULT :flock);
diff --git a/qhtlfirewall/ConfigServer/ServerCheck.pm b/qhtlfirewall/ConfigServer/ServerCheck.pm
index af9283a..32b0c94 100644
--- a/qhtlfirewall/ConfigServer/ServerCheck.pm
+++ b/qhtlfirewall/ConfigServer/ServerCheck.pm
@@ -21,7 +21,7 @@
 package ConfigServer::ServerCheck;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use File::Basename;
 use IPC::Open3;
@@ -215,7 +215,7 @@ sub endoutput {
 sub firewallcheck {
 	&addtitle("Firewall Check");
 	my $status = 0;
-	open (my $IN, "<", "/etc/csf/csf.conf");
+	open (my $IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf");
 	flock ($IN, LOCK_SH);
 	my @config = <$IN>;
 	chomp @config;
@@ -234,7 +234,7 @@ sub firewallcheck {
 	}
 
 	$status = 0;
-	if (-e "/etc/csf/csf.disable") {$status = 1}
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.disable") {$status = 1}
 	&addline($status,"csf enabled check","csf is currently disabled and should be enabled otherwise it is not functioning");
 	
 	if (-x $config{IPTABLES}) {
@@ -255,7 +255,7 @@ sub firewallcheck {
 
 	$status = 0;
 	unless ($config{RESTRICT_SYSLOG}) {$status = 1}
-	&addline($status,"RESTRICT_SYSLOG option check","Due to issues with syslog/rsyslog you should consider enabling this option. See the Firewall Configuration (/etc/csf/csf.conf) for more information");
+	&addline($status,"RESTRICT_SYSLOG option check","Due to issues with syslog/rsyslog you should consider enabling this option. See the Firewall Configuration (/etc/qhtlfirewall/qhtlfirewall.conf) for more information");
 
 	$status = 0;
 	unless ($config{AUTO_UPDATES}) {$status = 1}
@@ -328,7 +328,7 @@ sub firewallcheck {
 		&addline($status,"PT_ALL_USERS option check","This option ensures that almost all Linux accounts are checked with Process Tracking, not just the cPanel ones");
 	}
 
-	sysopen (my $CONF, "/etc/csf/csf.conf", O_RDWR | O_CREAT);
+	sysopen (my $CONF, "/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT);
 	flock ($CONF, LOCK_SH);
 	my @confdata = <$CONF>;
 	close ($CONF);
diff --git a/qhtlfirewall/ConfigServer/ServerStats.pm b/qhtlfirewall/ConfigServer/ServerStats.pm
index 2fdbd49..7403aec 100644
--- a/qhtlfirewall/ConfigServer/ServerStats.pm
+++ b/qhtlfirewall/ConfigServer/ServerStats.pm
@@ -21,7 +21,7 @@
 package ConfigServer::ServerStats;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 
 use Exporter qw(import);
@@ -59,7 +59,7 @@ sub graphs {
 	require GD::Graph::lines;
 	import GD::Graph::lines;
 
-	sysopen (my $STATS,"/var/lib/csf/stats/system", O_RDWR | O_CREAT);
+	sysopen (my $STATS,"/var/lib/qhtlfirewall/stats/system", O_RDWR | O_CREAT);
 	flock ($STATS, LOCK_SH);
 	my @stats = <$STATS>;
 	chomp @stats;
@@ -3183,7 +3183,7 @@ sub charts {
 	require GD::Graph::lines;
 	import GD::Graph::lines;
 
-	sysopen (my $STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+	sysopen (my $STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 	flock ($STATS, LOCK_SH);
 	my @stats = <$STATS>;
 	chomp @stats;
diff --git a/qhtlfirewall/ConfigServer/Service.pm b/qhtlfirewall/ConfigServer/Service.pm
index bdb2d12..2eec671 100644
--- a/qhtlfirewall/ConfigServer/Service.pm
+++ b/qhtlfirewall/ConfigServer/Service.pm
@@ -21,7 +21,7 @@
 package ConfigServer::Service;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Carp;
 use IPC::Open3;
 use Fcntl qw(:DEFAULT :flock);
@@ -56,7 +56,7 @@ sub startlfd {
 		&printcmd($config{SYSTEMCTL},"start","qhtlwaterfall.service");
 		&printcmd($config{SYSTEMCTL},"status","qhtlwaterfall.service");
 	} else {
-		&printcmd("/etc/init.d/lfd","start");
+		&printcmd("/etc/init.d/qhtlwaterfall","start");
 	}
 
 	return;
@@ -69,7 +69,7 @@ sub stoplfd {
 		&printcmd($config{SYSTEMCTL},"stop","qhtlwaterfall.service");
 	}
 	else {
-		&printcmd("/etc/init.d/lfd","stop");
+		&printcmd("/etc/init.d/qhtlwaterfall","stop");
 	}
 
 	return;
@@ -83,7 +83,7 @@ sub restartlfd {
 		&printcmd($config{SYSTEMCTL},"status","qhtlwaterfall.service");
 	}
 	else {
-		&printcmd("/etc/init.d/lfd","restart");
+		&printcmd("/etc/init.d/qhtlwaterfall","restart");
 	}
 
 	return;
@@ -96,7 +96,7 @@ sub statuslfd {
 		&printcmd($config{SYSTEMCTL},"status","qhtlwaterfall.service");
 	}
 	else {
-		&printcmd("/etc/init.d/lfd","status");
+		&printcmd("/etc/init.d/qhtlwaterfall","status");
 	}
 
 	return 0
diff --git a/qhtlfirewall/ConfigServer/Slurp.pm b/qhtlfirewall/ConfigServer/Slurp.pm
index 6524b80..130ab6c 100644
--- a/qhtlfirewall/ConfigServer/Slurp.pm
+++ b/qhtlfirewall/ConfigServer/Slurp.pm
@@ -21,7 +21,7 @@
 package ConfigServer::Slurp;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use Carp;
 
diff --git a/qhtlfirewall/ConfigServer/URLGet.pm b/qhtlfirewall/ConfigServer/URLGet.pm
index cdb8a66..2ac4325 100644
--- a/qhtlfirewall/ConfigServer/URLGet.pm
+++ b/qhtlfirewall/ConfigServer/URLGet.pm
@@ -21,7 +21,7 @@
 package ConfigServer::URLGet;
 
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use Carp;
 use IPC::Open3;
diff --git a/qhtlfirewall/ConfigServer/cseUI.pm b/qhtlfirewall/ConfigServer/cseUI.pm
index 6b0d74a..a869dde 100644
--- a/qhtlfirewall/ConfigServer/cseUI.pm
+++ b/qhtlfirewall/ConfigServer/cseUI.pm
@@ -1016,7 +1016,7 @@ sub countfiles {
 ###############################################################################
 # loadconfig
 sub loadconfig {
-	sysopen (my $IN, "/etc/csf/csf.conf", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+	sysopen (my $IN, "/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 	flock ($IN, LOCK_SH);
 	my @config = <$IN>;
 	close ($IN);
diff --git a/qhtlfirewall/auto.cyberpanel.pl b/qhtlfirewall/auto.cyberpanel.pl
index ea4c079..b8f32b3 100644
--- a/qhtlfirewall/auto.cyberpanel.pl
+++ b/qhtlfirewall/auto.cyberpanel.pl
@@ -28,13 +28,13 @@ our (%config, %configsetting, $vps, $oldversion);
 
 $oldversion = $ARGV[0];
 
-open (VERSION, "<","/etc/csf/version.txt");
+open (VERSION, "<","/etc/qhtlfirewall/version.txt");
 flock (VERSION, LOCK_SH);
 my $version = <VERSION>;
 close (VERSION);
 chomp $version;
 $version =~ s/\W/_/g;
-system("/bin/cp","-avf","/etc/csf/csf.conf","/var/lib/csf/backup/".time."_pre_v${version}_upgrade");
+system("/bin/cp","-avf","/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/".time."_pre_v${version}_upgrade");
 
 &loadcsfconfig;
 
@@ -56,8 +56,8 @@ if (-e "/proc/vz/veinfo") {
 }
 
 foreach my $alertfile ("sshalert.txt","sualert.txt","sudoalert.txt","webminalert.txt","cpanelalert.txt") {
-	if (-e "/usr/local/csf/tpl/".$alertfile) {
-		sysopen (my $IN, "/usr/local/csf/tpl/".$alertfile, O_RDWR | O_CREAT);
+	if (-e "/usr/local/qhtlfirewall/tpl/".$alertfile) {
+		sysopen (my $IN, "/usr/local/qhtlfirewall/tpl/".$alertfile, O_RDWR | O_CREAT);
 		flock ($IN, LOCK_EX);
 		my @data = <$IN>;
 		chomp @data;
@@ -72,9 +72,9 @@ foreach my $alertfile ("sshalert.txt","sualert.txt","sudoalert.txt","webminalert
 	}
 }
 
-if (&checkversion("10.11") and !-e "/var/lib/csf/auto1011") {
-	if (-e "/var/lib/csf/stats/lfdstats") {
-		sysopen (STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+if (&checkversion("10.11") and !-e "/var/lib/qhtlfirewall/auto1011") {
+	if (-e "/var/lib/qhtlfirewall/stats/lfdstats") {
+		sysopen (STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 		flock (STATS, LOCK_EX);
 		my @stats = <STATS>;
 		chomp @stats;
@@ -91,14 +91,14 @@ if (&checkversion("10.11") and !-e "/var/lib/csf/auto1011") {
 		close (STATS);
 	}
 
-	open (OUT, ">", "/var/lib/csf/auto1011");
+	open (OUT, ">", "/var/lib/qhtlfirewall/auto1011");
 	flock (OUT, LOCK_EX);
 	print OUT time;
 	close (OUT);
 }
-if (&checkversion("10.23") and !-e "/var/lib/csf/auto1023") {
-	if (-e "/etc/csf/csf.blocklists") {
-		sysopen (IN,"/etc/csf/csf.blocklists", O_RDWR | O_CREAT);
+if (&checkversion("10.23") and !-e "/var/lib/qhtlfirewall/auto1023") {
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.blocklists") {
+		sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.blocklists", O_RDWR | O_CREAT);
 		flock (IN, LOCK_EX);
 		my @data = <IN>;
 		chomp @data;
@@ -126,14 +126,14 @@ if (&checkversion("10.23") and !-e "/var/lib/csf/auto1023") {
 		close (IN);
 	}
 
-	open (OUT, ">", "/var/lib/csf/auto1023");
+	open (OUT, ">", "/var/lib/qhtlfirewall/auto1023");
 	flock (OUT, LOCK_EX);
 	print OUT time;
 	close (OUT);
 }
-if (&checkversion("12.02") and !-e "/var/lib/csf/auto1202") {
-	if (-e "/etc/csf/csf.blocklists") {
-		sysopen (IN,"/etc/csf/csf.blocklists", O_RDWR | O_CREAT);
+if (&checkversion("12.02") and !-e "/var/lib/qhtlfirewall/auto1202") {
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.blocklists") {
+		sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.blocklists", O_RDWR | O_CREAT);
 		flock (IN, LOCK_EX);
 		my @data = <IN>;
 		chomp @data;
@@ -146,14 +146,14 @@ if (&checkversion("12.02") and !-e "/var/lib/csf/auto1202") {
 		close (IN);
 	}
 
-	open (OUT, ">", "/var/lib/csf/auto1202");
+	open (OUT, ">", "/var/lib/qhtlfirewall/auto1202");
 	flock (OUT, LOCK_EX);
 	print OUT time;
 	close (OUT);
 }
-if (&checkversion("14.03") and !-e "/var/lib/csf/auto1403") {
-	if (-e "/etc/csf/csf.blocklists") {
-		sysopen (IN,"/etc/csf/csf.blocklists", O_RDWR | O_CREAT);
+if (&checkversion("14.03") and !-e "/var/lib/qhtlfirewall/auto1403") {
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.blocklists") {
+		sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.blocklists", O_RDWR | O_CREAT);
 		flock (IN, LOCK_EX);
 		my @data = <IN>;
 		chomp @data;
@@ -166,14 +166,14 @@ if (&checkversion("14.03") and !-e "/var/lib/csf/auto1403") {
 		close (IN);
 	}
 
-	open (OUT, ">", "/var/lib/csf/auto1403");
+	open (OUT, ">", "/var/lib/qhtlfirewall/auto1403");
 	flock (OUT, LOCK_EX);
 	print OUT time;
 	close (OUT);
 }
 
-if (-e "/etc/csf/csf.allow") {
-	sysopen (IN,"/etc/csf/csf.allow", O_RDWR | O_CREAT);
+if (-e "/etc/qhtlfirewall/qhtlfirewall.allow") {
+	sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.allow", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -185,8 +185,8 @@ if (-e "/etc/csf/csf.allow") {
 	}
 	close (IN);
 }
-if (-e "/etc/csf/csf.ignore") {
-	sysopen (IN,"/etc/csf/csf.ignore", O_RDWR | O_CREAT);
+if (-e "/etc/qhtlfirewall/qhtlfirewall.ignore") {
+	sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.ignore", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -198,8 +198,8 @@ if (-e "/etc/csf/csf.ignore") {
 	}
 	close (IN);
 }
-if (-e "/usr/local/csf/bin/regex.custom.pm") {
-	sysopen (IN,"/usr/local/csf/bin/regex.custom.pm", O_RDWR | O_CREAT);
+if (-e "/usr/local/qhtlfirewall/bin/regex.custom.pm") {
+	sysopen (IN,"/usr/local/qhtlfirewall/bin/regex.custom.pm", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -211,8 +211,8 @@ if (-e "/usr/local/csf/bin/regex.custom.pm") {
 	}
 	close (IN);
 }
-if (-e "/etc/csf/csf.blocklists") {
-	sysopen (IN,"/etc/csf/csf.blocklists", O_RDWR | O_CREAT);
+if (-e "/etc/qhtlfirewall/qhtlfirewall.blocklists") {
+	sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.blocklists", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -226,8 +226,8 @@ if (-e "/etc/csf/csf.blocklists") {
 	}
 	close (IN);
 }
-if (-e "/var/lib/csf/csf.tempban") {
-	sysopen (IN,"/var/lib/csf/csf.tempban", O_RDWR | O_CREAT);
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
+	sysopen (IN,"/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -239,8 +239,8 @@ if (-e "/var/lib/csf/csf.tempban") {
 	}
 	close (IN);
 }
-if (-e "/var/lib/csf/csf.tempallow") {
-	sysopen (IN,"/var/lib/csf/csf.tempallow", O_RDWR | O_CREAT);
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
+	sysopen (IN,"/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -276,12 +276,12 @@ if ($config{TESTING}) {
 	if ($sshport ne "22") {
 		$config{TCP_IN} .= ",$sshport";
 		$config{TCP6_IN} .= ",$sshport";
-		open (IN, "<", "/etc/csf/csf.conf") or die $!;
+		open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 		flock (IN, LOCK_SH) or die $!;
 		my @config = <IN>;
 		close (IN);
 		chomp @config;
-		open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+		open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 		flock (OUT, LOCK_EX) or die $!;
 		foreach my $line (@config) {
 			if ($line =~ /^TCP6_IN/) {
@@ -311,12 +311,12 @@ if ($config{TESTING}) {
 		my $mid = $2;
 		my $min = $3;
 		if ($maj == 3 and $mid > 6) {
-			open (IN, "<", "/etc/csf/csf.conf") or die $!;
+			open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			flock (IN, LOCK_SH) or die $!;
 			my @config = <IN>;
 			close (IN);
 			chomp @config;
-			open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+			open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			flock (OUT, LOCK_EX) or die $!;
 			foreach my $line (@config) {
 				if ($line =~ /^USE_CONNTRACK =/) {
@@ -348,12 +348,12 @@ if ($config{TESTING}) {
 	if ($@ ne "alarm\n" and $ipdata[0] =~ /^Chain OUTPUT/) {
 		$config{IPTABLESWAIT} = "--wait";
 		$config{WAITLOCK} = 1;
-		open (IN, "<", "/etc/csf/csf.conf") or die $!;
+		open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 		flock (IN, LOCK_SH) or die $!;
 		my @config = <IN>;
 		close (IN);
 		chomp @config;
-		open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+		open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 		flock (OUT, LOCK_EX) or die $!;
 		foreach my $line (@config) {
 			if ($line =~ /WAITLOCK =/) {
@@ -391,12 +391,12 @@ if ($config{TESTING}) {
 					$config{IPV6_SPI} = 0;
 				}
 			}
-			open (IN, "<", "/etc/csf/csf.conf") or die $!;
+			open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			flock (IN, LOCK_SH) or die $!;
 			my @config = <IN>;
 			close (IN);
 			chomp @config;
-			open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+			open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			flock (OUT, LOCK_EX) or die $!;
 			foreach my $line (@config) {
 				if ($line =~ /^IPV6 =/) {
@@ -421,7 +421,7 @@ flock (IN, LOCK_SH) or die $!;
 my @config = <IN>;
 close (IN);
 chomp @config;
-open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 flock (OUT, LOCK_EX) or die $!;
 foreach my $line (@config) {
 	if ($line =~ /^\#/) {
@@ -439,10 +439,10 @@ foreach my $line (@config) {
 	} else {
 		print "Error: Invalid configuration line [$line]";
 	}
-	if (&checkversion("10.15") and !-e "/var/lib/csf/auto1015") {
+	if (&checkversion("10.15") and !-e "/var/lib/qhtlfirewall/auto1015") {
 		if ($name eq "MESSENGER_RATE" and $config{$name} eq "30/m") {$config{$name} = "100/s"}
 		if ($name eq "MESSENGER_BURST" and $config{$name} eq "5") {$config{$name} = "150"}
-		open (my $AUTO, ">", "/var/lib/csf/auto1015");
+		open (my $AUTO, ">", "/var/lib/qhtlfirewall/auto1015");
 		flock ($AUTO, LOCK_EX);
 		print $AUTO time;
 		close ($AUTO);
@@ -450,9 +450,9 @@ foreach my $line (@config) {
 	if ($configsetting{$name}) {
 		print OUT "$name = \"$config{$name}\"\n";
 	} else {
-		if (&checkversion("9.29") and !-e "/var/lib/csf/auto929" and $name eq "PT_USERRSS") {
+		if (&checkversion("9.29") and !-e "/var/lib/qhtlfirewall/auto929" and $name eq "PT_USERRSS") {
 			$line = "PT_USERRSS = \"$config{PT_USERMEM}\"";
-			open (my $AUTO, ">", "/var/lib/csf/auto929");
+			open (my $AUTO, ">", "/var/lib/qhtlfirewall/auto929");
 			flock ($AUTO, LOCK_EX);
 			print $AUTO time;
 			close ($AUTO);
@@ -537,25 +537,25 @@ if ($config{TESTING}) {
 			}
 		}
 	}
-	print "\n\nNote: The port details above are for information only, csf hasn't been auto-configured.\n\n";
+	print "\n\nNote: The port details above are for information only, qhtlfirewall hasn't been auto-configured.\n\n";
 	print "Don't forget to:\n";
-	print "1. Configure the following options in the csf configuration to suite your server: $opts\n";
-	print "2. Restart csf and lfd\n";
-	print "3. Set TESTING to 0 once you're happy with the firewall, lfd will not run until you do so\n";
+	print "1. Configure the following options in the qhtlfirewall configuration to suit your server: $opts\n";
+	print "2. Restart qhtlfirewall and qhtlwaterfall\n";
+	print "3. Set TESTING to 0 once you're happy with the firewall, qhtlwaterfall will not run until you do so\n";
 }
 
 if ($ENV{SSH_CLIENT}) {
 	my $ip = (split(/ /,$ENV{SSH_CLIENT}))[0];
 	if ($ip =~ /(\d+\.\d+\.\d+\.\d+)/) {
-		print "\nAdding current SSH session IP address to the csf whitelist in csf.allow:\n";
-		system("/usr/sbin/csf -a $1 csf SSH installation/upgrade IP address");
+		print "\nAdding current SSH session IP address to the qhtlfirewall whitelist in qhtlfirewall.allow:\n";
+		system("/usr/sbin/qhtlfirewall -a $1 qhtlfirewall SSH installation/upgrade IP address");
 	}
 }
 
 exit;
 ###############################################################################
 sub loadcsfconfig {
-	open (IN, "<", "/etc/csf/csf.conf") or die $!;
+	open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 	flock (IN, LOCK_SH) or die $!;
 	my @config = <IN>;
 	close (IN);
diff --git a/qhtlfirewall/auto.interworx.pl b/qhtlfirewall/auto.interworx.pl
index 672909c..ff08198 100644
--- a/qhtlfirewall/auto.interworx.pl
+++ b/qhtlfirewall/auto.interworx.pl
@@ -3,19 +3,19 @@
 # Copyright (C) 2006-2025 Jonathan Michaelson
 #
 # https://github.com/waytotheweb/scripts
-#
+		open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 # This program is free software; you can redistribute it and/or modify it under
 # the terms of the GNU General Public License as published by the Free Software
 # Foundation; either version 3 of the License, or (at your option) any later
 # version.
 #
 # This program is distributed in the hope that it will be useful, but WITHOUT
-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+		open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 # FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 # details.
 #
 # You should have received a copy of the GNU General Public License along with
-# this program; if not, see <https://www.gnu.org/licenses>.
+			open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 ###############################################################################
 ## no critic (ProhibitBarewordFileHandles, ProhibitExplicitReturnUndef, ProhibitMixedBooleanOperators, RequireBriefOpen)
 use strict;
@@ -28,13 +28,13 @@ our (%config, %configsetting, $vps, $oldversion);
 
 $oldversion = $ARGV[0];
 
-open (VERSION, "<","/etc/csf/version.txt");
+open (VERSION, "<","/etc/qhtlfirewall/version.txt");
 flock (VERSION, LOCK_SH);
 my $version = <VERSION>;
 close (VERSION);
 chomp $version;
 $version =~ s/\W/_/g;
-system("/bin/cp","-avf","/etc/csf/csf.conf","/var/lib/csf/backup/".time."_pre_v${version}_upgrade");
+system("/bin/cp","-avf","/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/".time."_pre_v${version}_upgrade");
 
 &loadcsfconfig;
 
@@ -51,13 +51,13 @@ if (-e "/proc/vz/veinfo") {
 				last;
 			}
 		}
-	}
+						open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 	close (IN);
 }
 
-foreach my $alertfile ("sshalert.txt","sualert.txt","sudoalert.txt","webminalert.txt","cpanelalert.txt") {
-	if (-e "/usr/local/csf/tpl/".$alertfile) {
-		sysopen (my $IN, "/usr/local/csf/tpl/".$alertfile, O_RDWR | O_CREAT);
+		open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
+	if (-e "/usr/local/qhtlfirewall/tpl/".$alertfile) {
+		sysopen (my $IN, "/usr/local/qhtlfirewall/tpl/".$alertfile, O_RDWR | O_CREAT);
 		flock ($IN, LOCK_EX);
 		my @data = <$IN>;
 		chomp @data;
@@ -66,15 +66,15 @@ foreach my $alertfile ("sshalert.txt","sualert.txt","sudoalert.txt","webminalert
 			if ($line =~ /\[text\]/) {$hit = 1}
 		}
 		unless ($hit) {
-			print $IN "\nLog line:\n\n[text]\n";
+				open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 		}
 		close ($IN);
-	}
+					open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 }
 
-if (&checkversion("10.11") and !-e "/var/lib/csf/auto1011") {
-	if (-e "/var/lib/csf/stats/lfdstats") {
-		sysopen (STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+			open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
+	if (-e "/var/lib/qhtlfirewall/stats/lfdstats") {
+		sysopen (STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 		flock (STATS, LOCK_EX);
 		my @stats = <STATS>;
 		chomp @stats;
@@ -89,16 +89,16 @@ if (&checkversion("10.11") and !-e "/var/lib/csf/auto1011") {
 			print STATS "$line\n";
 		}
 		close (STATS);
-	}
+			open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 
-	open (OUT, ">", "/var/lib/csf/auto1011");
+	open (OUT, ">", "/var/lib/qhtlfirewall/auto1011");
 	flock (OUT, LOCK_EX);
 	print OUT time;
 	close (OUT);
 }
-if (&checkversion("10.23") and !-e "/var/lib/csf/auto1023") {
-	if (-e "/etc/csf/csf.blocklists") {
-		sysopen (IN,"/etc/csf/csf.blocklists", O_RDWR | O_CREAT);
+if (&checkversion("10.23") and !-e "/var/lib/qhtlfirewall/auto1023") {
+			open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
+		sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.blocklists", O_RDWR | O_CREAT);
 		flock (IN, LOCK_EX);
 		my @data = <IN>;
 		chomp @data;
@@ -112,28 +112,28 @@ if (&checkversion("10.23") and !-e "/var/lib/csf/auto1023") {
 			print IN "$line\n";
 		}
 		unless ($SPAMDROPV6) {
-			print IN "\n# Spamhaus IPv6 Don't Route Or Peer List (DROPv6)\n";
+					open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			print IN "# Details: http://www.spamhaus.org/drop/\n";
 			print IN "#SPAMDROPV6|86400|0|https://www.spamhaus.org/drop/dropv6.txt\n";
 		}
 		unless ($STOPFORUMSPAMV6) {
-			print IN "\n# Stop Forum Spam IPv6\n";
+				open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			print IN "# Details: http://www.stopforumspam.com/downloads/\n";
 			print IN "# Many of the lists available contain a vast number of IP addresses so special\n";
 			print IN "# care needs to be made when selecting from their lists\n";
 			print IN "#STOPFORUMSPAMV6|86400|0|http://www.stopforumspam.com/downloads/listed_ip_1_ipv6.zip\n";
 		}
 		close (IN);
-	}
+				open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 
-	open (OUT, ">", "/var/lib/csf/auto1023");
+	open (OUT, ">", "/var/lib/qhtlfirewall/auto1023");
 	flock (OUT, LOCK_EX);
 	print OUT time;
 	close (OUT);
 }
-if (&checkversion("12.02") and !-e "/var/lib/csf/auto1202") {
-	if (-e "/etc/csf/csf.blocklists") {
-		sysopen (IN,"/etc/csf/csf.blocklists", O_RDWR | O_CREAT);
+if (&checkversion("12.02") and !-e "/var/lib/qhtlfirewall/auto1202") {
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.blocklists") {
+		sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.blocklists", O_RDWR | O_CREAT);
 		flock (IN, LOCK_EX);
 		my @data = <IN>;
 		chomp @data;
@@ -146,14 +146,14 @@ if (&checkversion("12.02") and !-e "/var/lib/csf/auto1202") {
 		close (IN);
 	}
 
-	open (OUT, ">", "/var/lib/csf/auto1202");
+	open (OUT, ">", "/var/lib/qhtlfirewall/auto1202");
 	flock (OUT, LOCK_EX);
 	print OUT time;
 	close (OUT);
 }
-if (&checkversion("14.03") and !-e "/var/lib/csf/auto1403") {
-	if (-e "/etc/csf/csf.blocklists") {
-		sysopen (IN,"/etc/csf/csf.blocklists", O_RDWR | O_CREAT);
+if (&checkversion("14.03") and !-e "/var/lib/qhtlfirewall/auto1403") {
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.blocklists") {
+		sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.blocklists", O_RDWR | O_CREAT);
 		flock (IN, LOCK_EX);
 		my @data = <IN>;
 		chomp @data;
@@ -166,14 +166,14 @@ if (&checkversion("14.03") and !-e "/var/lib/csf/auto1403") {
 		close (IN);
 	}
 
-	open (OUT, ">", "/var/lib/csf/auto1403");
+	open (OUT, ">", "/var/lib/qhtlfirewall/auto1403");
 	flock (OUT, LOCK_EX);
 	print OUT time;
 	close (OUT);
 }
 
-if (-e "/etc/csf/csf.allow") {
-	sysopen (IN,"/etc/csf/csf.allow", O_RDWR | O_CREAT);
+if (-e "/etc/qhtlfirewall/qhtlfirewall.allow") {
+	sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.allow", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -185,8 +185,8 @@ if (-e "/etc/csf/csf.allow") {
 	}
 	close (IN);
 }
-if (-e "/etc/csf/csf.ignore") {
-	sysopen (IN,"/etc/csf/csf.ignore", O_RDWR | O_CREAT);
+if (-e "/etc/qhtlfirewall/qhtlfirewall.ignore") {
+	sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.ignore", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -198,8 +198,8 @@ if (-e "/etc/csf/csf.ignore") {
 	}
 	close (IN);
 }
-if (-e "/usr/local/csf/bin/regex.custom.pm") {
-	sysopen (IN,"/usr/local/csf/bin/regex.custom.pm", O_RDWR | O_CREAT);
+if (-e "/usr/local/qhtlfirewall/bin/regex.custom.pm") {
+	sysopen (IN,"/usr/local/qhtlfirewall/bin/regex.custom.pm", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -211,8 +211,8 @@ if (-e "/usr/local/csf/bin/regex.custom.pm") {
 	}
 	close (IN);
 }
-if (-e "/etc/csf/csf.blocklists") {
-	sysopen (IN,"/etc/csf/csf.blocklists", O_RDWR | O_CREAT);
+if (-e "/etc/qhtlfirewall/qhtlfirewall.blocklists") {
+	sysopen (IN,"/etc/qhtlfirewall/qhtlfirewall.blocklists", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -226,8 +226,8 @@ if (-e "/etc/csf/csf.blocklists") {
 	}
 	close (IN);
 }
-if (-e "/var/lib/csf/csf.tempban") {
-	sysopen (IN,"/var/lib/csf/csf.tempban", O_RDWR | O_CREAT);
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
+	sysopen (IN,"/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -239,8 +239,8 @@ if (-e "/var/lib/csf/csf.tempban") {
 	}
 	close (IN);
 }
-if (-e "/var/lib/csf/csf.tempallow") {
-	sysopen (IN,"/var/lib/csf/csf.tempallow", O_RDWR | O_CREAT);
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
+	sysopen (IN,"/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR | O_CREAT);
 	flock (IN, LOCK_EX);
 	my @data = <IN>;
 	chomp @data;
@@ -276,12 +276,12 @@ if ($config{TESTING}) {
 	if ($sshport ne "22") {
 		$config{TCP_IN} .= ",$sshport";
 		$config{TCP6_IN} .= ",$sshport";
-		open (IN, "<", "/etc/csf/csf.conf") or die $!;
+		open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 		flock (IN, LOCK_SH) or die $!;
 		my @config = <IN>;
 		close (IN);
 		chomp @config;
-		open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+		open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 		flock (OUT, LOCK_EX) or die $!;
 		foreach my $line (@config) {
 			if ($line =~ /^TCP6_IN/) {
@@ -311,12 +311,12 @@ if ($config{TESTING}) {
 		my $mid = $2;
 		my $min = $3;
 		if ($maj == 3 and $mid > 6) {
-			open (IN, "<", "/etc/csf/csf.conf") or die $!;
+			open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			flock (IN, LOCK_SH) or die $!;
 			my @config = <IN>;
 			close (IN);
 			chomp @config;
-			open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+			open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			flock (OUT, LOCK_EX) or die $!;
 			foreach my $line (@config) {
 				if ($line =~ /^USE_CONNTRACK =/) {
@@ -345,15 +345,16 @@ if ($config{TESTING}) {
 		alarm(0);
 	};
 	alarm(0);
-	if ($@ ne "alarm\n" and $ipdata[0] =~ /^Chain OUTPUT/) {
-		$config{IPTABLESWAIT} = "--wait";
-		$config{WAITLOCK} = 1;
-		open (IN, "<", "/etc/csf/csf.conf") or die $!;
+	print "\n\nNote: The port details above are for information only, qhtlfirewall hasn't been auto-configured.\n\n";
+	print "Don't forget to:\n";
+	print "1. Configure the following options in the qhtlfirewall configuration to suit your server: $opts\n";
+	print "2. Restart qhtlfirewall and qhtlwaterfall\n";
+	print "3. Set TESTING to 0 once you're happy with the firewall, qhtlwaterfall will not run until you do so\n";
 		flock (IN, LOCK_SH) or die $!;
 		my @config = <IN>;
 		close (IN);
 		chomp @config;
-		open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+		open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 		flock (OUT, LOCK_EX) or die $!;
 		foreach my $line (@config) {
 			if ($line =~ /WAITLOCK =/) {
@@ -391,12 +392,12 @@ if ($config{TESTING}) {
 					$config{IPV6_SPI} = 0;
 				}
 			}
-			open (IN, "<", "/etc/csf/csf.conf") or die $!;
+			open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			flock (IN, LOCK_SH) or die $!;
 			my @config = <IN>;
 			close (IN);
 			chomp @config;
-			open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+			open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 			flock (OUT, LOCK_EX) or die $!;
 			foreach my $line (@config) {
 				if ($line =~ /^IPV6 =/) {
@@ -421,7 +422,7 @@ flock (IN, LOCK_SH) or die $!;
 my @config = <IN>;
 close (IN);
 chomp @config;
-open (OUT, ">", "/etc/csf/csf.conf") or die $!;
+open (OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 flock (OUT, LOCK_EX) or die $!;
 foreach my $line (@config) {
 	if ($line =~ /^\#/) {
@@ -439,10 +440,10 @@ foreach my $line (@config) {
 	} else {
 		print "Error: Invalid configuration line [$line]";
 	}
-	if (&checkversion("10.15") and !-e "/var/lib/csf/auto1015") {
+	if (&checkversion("10.15") and !-e "/var/lib/qhtlfirewall/auto1015") {
 		if ($name eq "MESSENGER_RATE" and $config{$name} eq "30/m") {$config{$name} = "100/s"}
 		if ($name eq "MESSENGER_BURST" and $config{$name} eq "5") {$config{$name} = "150"}
-		open (my $AUTO, ">", "/var/lib/csf/auto1015");
+		open (my $AUTO, ">", "/var/lib/qhtlfirewall/auto1015");
 		flock ($AUTO, LOCK_EX);
 		print $AUTO time;
 		close ($AUTO);
@@ -450,9 +451,9 @@ foreach my $line (@config) {
 	if ($configsetting{$name}) {
 		print OUT "$name = \"$config{$name}\"\n";
 	} else {
-		if (&checkversion("9.29") and !-e "/var/lib/csf/auto929" and $name eq "PT_USERRSS") {
+		if (&checkversion("9.29") and !-e "/var/lib/qhtlfirewall/auto929" and $name eq "PT_USERRSS") {
 			$line = "PT_USERRSS = \"$config{PT_USERMEM}\"";
-			open (my $AUTO, ">", "/var/lib/csf/auto929");
+			open (my $AUTO, ">", "/var/lib/qhtlfirewall/auto929");
 			flock ($AUTO, LOCK_EX);
 			print $AUTO time;
 			close ($AUTO);
@@ -537,25 +538,25 @@ if ($config{TESTING}) {
 			}
 		}
 	}
-	print "\n\nNote: The port details above are for information only, csf hasn't been auto-configured.\n\n";
+	print "\n\nNote: The port details above are for information only, qhtlfirewall hasn't been auto-configured.\n\n";
 	print "Don't forget to:\n";
-	print "1. Configure the following options in the csf configuration to suite your server: $opts\n";
-	print "2. Restart csf and lfd\n";
-	print "3. Set TESTING to 0 once you're happy with the firewall, lfd will not run until you do so\n";
+	print "1. Configure the following options in the qhtlfirewall configuration to suit your server: $opts\n";
+	print "2. Restart qhtlfirewall and qhtlwaterfall\n";
+	print "3. Set TESTING to 0 once you're happy with the firewall, qhtlwaterfall will not run until you do so\n";
 }
 
 if ($ENV{SSH_CLIENT}) {
 	my $ip = (split(/ /,$ENV{SSH_CLIENT}))[0];
 	if ($ip =~ /(\d+\.\d+\.\d+\.\d+)/) {
-		print "\nAdding current SSH session IP address to the csf whitelist in csf.allow:\n";
-		system("/usr/sbin/csf -a $1 csf SSH installation/upgrade IP address");
+		print "\nAdding current SSH session IP address to the qhtlfirewall whitelist in qhtlfirewall.allow:\n";
+		system("/usr/sbin/qhtlfirewall -a $1 qhtlfirewall SSH installation/upgrade IP address");
 	}
 }
 
 exit;
 ###############################################################################
 sub loadcsfconfig {
-	open (IN, "<", "/etc/csf/csf.conf") or die $!;
+	open (IN, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 	flock (IN, LOCK_SH) or die $!;
 	my @config = <IN>;
 	close (IN);
diff --git a/qhtlfirewall/cpanel.comodo.allow b/qhtlfirewall/cpanel.comodo.allow
index bb8ede0..14c5a32 100644
--- a/qhtlfirewall/cpanel.comodo.allow
+++ b/qhtlfirewall/cpanel.comodo.allow
@@ -22,9 +22,9 @@
 #
 # Each IP address belongs to the Sectigo SSL provider (formerly Comodo)
 #
-# Note: This file will be replaced when csf is upgraded - do NOT make any
+# Note: This file may be replaced during upgrades - do NOT make any
 # changes to this file. If you do not want to whitelist these IP addresses you
-# need to remove the Include line from csf.allow as this is only added there
+# need to remove the Include line from qhtlfirewall.allow as this is only added there
 # once
 
 tcp|in|d=80|s=178.255.81.12 # Sectigo SSL Resolver
diff --git a/qhtlfirewall/cpanel/csf.cgi b/qhtlfirewall/cpanel/csf.cgi
index fa61547..45d903f 100644
--- a/qhtlfirewall/cpanel/csf.cgi
+++ b/qhtlfirewall/cpanel/csf.cgi
@@ -25,7 +25,7 @@ use Fcntl qw(:DEFAULT :flock);
 use Sys::Hostname qw(hostname);
 use IPC::Open3;
 
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use ConfigServer::DisplayUI;
 use ConfigServer::DisplayResellerUI;
 use ConfigServer::Config;
@@ -62,7 +62,7 @@ if (-e "/usr/local/cpanel/bin/register_appconfig") {
 	$images = "csf";
 }
 
-foreach my $line (slurp("/etc/csf/csf.resellers")) {
+foreach my $line (slurp("/etc/qhtlfirewall/qhtlfirewall.resellers")) {
 	$line =~ s/$cleanreg//g;
 	my ($user,$alert,$privs) = split(/\:/,$line);
 	$privs =~ s/\s//g;
@@ -83,7 +83,7 @@ if (!Whostmgr::ACLS::hasroot()) {
 	}
 }
 
-open (my $IN, "<", "/etc/csf/version.txt") or die $!;
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
 $myv = <$IN>;
 close ($IN);
 chomp $myv;
@@ -95,14 +95,14 @@ my $bootstrapjs = "<script src='$images/bootstrap/js/bootstrap.min.js'></script>
 my @header;
 my @footer;
 my $htmltag = "data-post='$FORM{action}'";
-if (-e "/etc/csf/csf.header") {
-	open (my $HEADER, "<", "/etc/csf/csf.header");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.header") {
+	open (my $HEADER, "<", "/etc/qhtlfirewall/qhtlfirewall.header");
 	flock ($HEADER, LOCK_SH);
 	@header = <$HEADER>;
 	close ($HEADER);
 }
-if (-e "/etc/csf/csf.footer") {
-	open (my $FOOTER, "<", "/etc/csf/csf.footer");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.footer") {
+	open (my $FOOTER, "<", "/etc/qhtlfirewall/qhtlfirewall.footer");
 	flock ($FOOTER, LOCK_SH);
 	@footer = <$FOOTER>;
 	close ($FOOTER);
@@ -187,7 +187,7 @@ unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq
 	print <<EOF;
 <div id="loader"></div><br />
 <div class='panel panel-default'>
-<h4><img src='$images/csf_small.png' style='padding-left: 10px'> ConfigServer Security &amp; Firewall - csf v$myv</h4></div>
+<h4><img src='$images/csf_small.png' style='padding-left: 10px'> QHTL Firewall - qhtlfirewall v$myv</h4></div>
 EOF
 	if ($reregister ne "") {print $reregister}
 }
diff --git a/qhtlfirewall/csf.allow b/qhtlfirewall/csf.allow
index 77bf88f..4e9156d 100644
--- a/qhtlfirewall/csf.allow
+++ b/qhtlfirewall/csf.allow
@@ -25,9 +25,10 @@
 # tcp/udp|in/out|s/d=port,port,...|s/d=ip
 # See readme.txt for more information
 #
-# Note: IP addressess listed in this file will NOT be ignored by lfd, so they
-# can still be blocked. If you do not want lfd to block an IP address you must
-# add it to csf.ignore
+# Note: IP addresses listed in this file will NOT be ignored by qhtlwaterfall,
+# so they can still be blocked. If you do not want qhtlwaterfall to block an IP
+# address you must add it to qhtlfirewall.ignore
 
-Include /etc/csf/cpanel.comodo.allow
-Include /etc/csf/cpanel.allow
+# cPanel-specific includes (migrated in install scripts if needed):
+# Include /etc/qhtlfirewall/cpanel.comodo.allow
+# Include /etc/qhtlfirewall/cpanel.allow
diff --git a/qhtlfirewall/csf.cwp.conf b/qhtlfirewall/csf.cwp.conf
index feae1b9..789ee6a 100644
--- a/qhtlfirewall/csf.cwp.conf
+++ b/qhtlfirewall/csf.cwp.conf
@@ -98,7 +98,7 @@ RESTRICT_SYSLOG_GROUP = "mysyslog"
 # 2 = Disabled UI
 RESTRICT_UI = "1"
 
-# Enabling auto updates creates a cron job called /etc/cron.d/csf_update which
+# Enabling auto updates creates a cron job called /etc/cron.d/qhtlfirewall_update which
 # runs once per day to see if there is an update to csf+lfd and upgrades if
 # available and restarts csf and lfd
 #
diff --git a/qhtlfirewall/csf.cyberpanel.conf b/qhtlfirewall/csf.cyberpanel.conf
index 5c18538..4a18557 100644
--- a/qhtlfirewall/csf.cyberpanel.conf
+++ b/qhtlfirewall/csf.cyberpanel.conf
@@ -98,7 +98,7 @@ RESTRICT_SYSLOG_GROUP = "mysyslog"
 # 2 = Disabled UI
 RESTRICT_UI = "1"
 
-# Enabling auto updates creates a cron job called /etc/cron.d/csf_update which
+# Enabling auto updates creates a cron job called /etc/cron.d/qhtlfirewall_update which
 # runs once per day to see if there is an update to csf+lfd and upgrades if
 # available and restarts csf and lfd
 #
diff --git a/qhtlfirewall/csf.directadmin.conf b/qhtlfirewall/csf.directadmin.conf
index 97ae202..9755bd0 100644
--- a/qhtlfirewall/csf.directadmin.conf
+++ b/qhtlfirewall/csf.directadmin.conf
@@ -98,7 +98,7 @@ RESTRICT_SYSLOG_GROUP = "mysyslog"
 # 2 = Disabled UI
 RESTRICT_UI = "1"
 
-# Enabling auto updates creates a cron job called /etc/cron.d/csf_update which
+# Enabling auto updates creates a cron job called /etc/cron.d/qhtlfirewall_update which
 # runs once per day to see if there is an update to csf+lfd and upgrades if
 # available and restarts csf and lfd
 #
diff --git a/qhtlfirewall/csf.generic.conf b/qhtlfirewall/csf.generic.conf
index 7df13a4..160e25b 100644
--- a/qhtlfirewall/csf.generic.conf
+++ b/qhtlfirewall/csf.generic.conf
@@ -98,7 +98,7 @@ RESTRICT_SYSLOG_GROUP = "mysyslog"
 # 2 = Disabled UI
 RESTRICT_UI = "1"
 
-# Enabling auto updates creates a cron job called /etc/cron.d/csf_update which
+# Enabling auto updates creates a cron job called /etc/cron.d/qhtlfirewall_update which
 # runs once per day to see if there is an update to csf+lfd and upgrades if
 # available and restarts csf and lfd
 #
diff --git a/qhtlfirewall/csf.interworx.conf b/qhtlfirewall/csf.interworx.conf
index 60d4cec..e246b42 100644
--- a/qhtlfirewall/csf.interworx.conf
+++ b/qhtlfirewall/csf.interworx.conf
@@ -98,7 +98,7 @@ RESTRICT_SYSLOG_GROUP = "mysyslog"
 # 2 = Disabled UI
 RESTRICT_UI = "1"
 
-# Enabling auto updates creates a cron job called /etc/cron.d/csf_update which
+# Enabling auto updates creates a cron job called /etc/cron.d/qhtlfirewall_update which
 # runs once per day to see if there is an update to csf+lfd and upgrades if
 # available and restarts csf and lfd
 #
diff --git a/qhtlfirewall/csf.logfiles b/qhtlfirewall/csf.logfiles
index 55aa4dc..ad51de3 100644
--- a/qhtlfirewall/csf.logfiles
+++ b/qhtlfirewall/csf.logfiles
@@ -20,7 +20,7 @@
 
 # All:
 /var/log/messages
-/var/log/lfd.log
+/var/log/qhtlwaterfall.log
 /var/log/cxswatch.log
 
 # RedHat:
diff --git a/qhtlfirewall/csf.syslogs b/qhtlfirewall/csf.syslogs
index 7e7c373..5b8fa5a 100644
--- a/qhtlfirewall/csf.syslogs
+++ b/qhtlfirewall/csf.syslogs
@@ -24,7 +24,7 @@
 # All:
 /var/log/cron
 /var/log/cxswatch.log
-/var/log/lfd.log
+/var/log/qhtlwaterfall.log
 /var/log/maillog
 /var/log/messages
 /var/log/rkhunter.log
diff --git a/qhtlfirewall/csf.vesta.conf b/qhtlfirewall/csf.vesta.conf
index d30993c..c594e12 100644
--- a/qhtlfirewall/csf.vesta.conf
+++ b/qhtlfirewall/csf.vesta.conf
@@ -98,7 +98,7 @@ RESTRICT_SYSLOG_GROUP = "mysyslog"
 # 2 = Disabled UI
 RESTRICT_UI = "1"
 
-# Enabling auto updates creates a cron job called /etc/cron.d/csf_update which
+# Enabling auto updates creates a cron job called /etc/cron.d/qhtlfirewall_update which
 # runs once per day to see if there is an update to csf+lfd and upgrades if
 # available and restarts csf and lfd
 #
diff --git a/qhtlfirewall/csget.pl b/qhtlfirewall/csget.pl
index 016ecb6..63cbec0 100644
--- a/qhtlfirewall/csget.pl
+++ b/qhtlfirewall/csget.pl
@@ -36,9 +36,18 @@ open STDIN, "<","/dev/null";
 open STDOUT, ">","/dev/null";
 open STDERR, ">","/dev/null";
 
-$0 = "ConfigServer Version Check";
+$0 = "qhtlfirewall Version Check";
 
-my @downloadservers = ""; # ("https://download.configserver.com", "https://download2.configserver.com");
+my @downloadservers = ();
+if (open(my $DS, '<', '/etc/qhtlfirewall/downloadservers')) {
+	while (my $line = <$DS>) {
+		chomp $line;
+		$line =~ s/^\s+|\s+$//g;
+		next if ($line eq '' || $line =~ /^\s*#/);
+		push @downloadservers, $line;
+	}
+	close($DS);
+}
 
 system("mkdir -p /var/lib/configserver/");
 system("rm -f /var/lib/configserver/*.txt /var/lib/configserver/*error");
@@ -56,15 +65,7 @@ my $GET;
 if (-e "/usr/bin/GET") {$GET = "/usr/bin/GET -sd -t 120"}
 
 my %versions;
-if (-e "/etc/csf/csf.pl") {$versions{"/csf/version.txt"} = "/var/lib/configserver/csf.txt"}
-if (-e "/etc/cxs/cxs.pl") {$versions{"/cxs/version.txt"} = "/var/lib/configserver/cxs.txt"}
-if (-e "/usr/local/cpanel/whostmgr/docroot/cgi/configserver/cmm.cgi") {$versions{"/cmm/cmmversion.txt"} = "/var/lib/configserver/cmm.txt"}
-if (-e "/usr/local/cpanel/whostmgr/docroot/cgi/configserver/cse.cgi") {$versions{"/cse/cseversion.txt"} = "/var/lib/configserver/cse.txt"}
-if (-e "/usr/local/cpanel/whostmgr/docroot/cgi/configserver/cmq.cgi") {$versions{"/cmq/cmqversion.txt"} = "/var/lib/configserver/cmq.txt"}
-if (-e "/usr/local/cpanel/whostmgr/docroot/cgi/configserver/cmc.cgi") {$versions{"/cmc/cmcversion.txt"} = "/var/lib/configserver/cmc.txt"}
-if (-e "/etc/osm/osmd.pl") {$versions{"/osm/osmversion.txt"} = "/var/lib/configserver/osm.txt"}
-if (-e "/usr/msfe/version.txt") {$versions{"/version.txt"} = "/var/lib/configserver/msinstall.txt"}
-if (-e "/usr/msfe/msfeversion.txt") {$versions{"/msfeversion.txt"} = "/var/lib/configserver/msfe.txt"}
+if (-e "/etc/qhtlfirewall/qhtlfirewall.conf") {$versions{"/qhtlfirewall/version.txt"} = "/var/lib/configserver/qhtlfirewall.txt"}
 
 if (scalar(keys %versions) == 0) {
 	unlink $0;
@@ -94,10 +95,18 @@ foreach my $server (@downloadservers) {
 					my $GETstatus = system("$GET $server$version >> $versions{$version}".".error");
 				} else {
 					open (my $ERROR, ">", $versions{$version}.".error");
-					print $ERROR "Failed to retrieve latest version from ConfigServer";
+					print $ERROR "Failed to retrieve latest version";
 					close ($ERROR);
 				}
 			}
 		}
 	}
 }
+
+if (!@downloadservers && scalar(keys %versions) > 0) {
+	foreach my $version (keys %versions) {
+		open (my $ERROR, ">", $versions{$version}.".error");
+		print $ERROR "No download servers configured for qhtlfirewall";
+		close ($ERROR);
+	}
+}
diff --git a/qhtlfirewall/cwp/ajax_csfframe.php b/qhtlfirewall/cwp/ajax_csfframe.php
index 0e13e00..255b96f 100644
--- a/qhtlfirewall/cwp/ajax_csfframe.php
+++ b/qhtlfirewall/cwp/ajax_csfframe.php
@@ -6,7 +6,7 @@
 	}
 	$env = $env."&CWPSESSID=".$_SERVER["REQUEST_URI"];
 
-	exec ("/usr/local/cwpsrv/htdocs/resources/admin/modules/csf.pl \"$env\"", $result, $return_var);
+	exec ("/usr/local/cwpsrv/htdocs/resources/admin/modules/qhtlfirewall.pl \"$env\"", $result, $return_var);
 
 	$header = 1;
 	foreach ($result as $line) {
diff --git a/qhtlfirewall/cwp/qhtlfirewall.pl b/qhtlfirewall/cwp/qhtlfirewall.pl
new file mode 100644
index 0000000..b663802
--- /dev/null
+++ b/qhtlfirewall/cwp/qhtlfirewall.pl
@@ -0,0 +1,204 @@
+#!/usr/bin/perl
+###############################################################################
+# Copyright (C) 2006-2025 Jonathan Michaelson
+#
+# https://github.com/waytotheweb/scripts
+#
+# This program is free software; you can redistribute it and/or modify it under
+# the terms of the GNU General Public License as published by the Free Software
+# Foundation; either version 3 of the License, or (at your option) any later
+# version.
+#
+# This program is distributed in the hope that it will be useful, but WITHOUT
+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
+# details.
+#
+# You should have received a copy of the GNU General Public License along with
+# this program; if not, see <https://www.gnu.org/licenses>.
+###############################################################################
+# start main
+use strict;
+use File::Find;
+use Fcntl qw(:DEFAULT :flock);
+use Sys::Hostname qw(hostname);
+use IPC::Open3;
+use lib '/usr/local/qhtlfirewall/lib';
+use ConfigServer::DisplayUI;
+use ConfigServer::Config;
+
+our ($script, $images, $myv, %FORM, %in);
+
+my $config = ConfigServer::Config->loadconfig();
+my %config = $config->config;
+
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
+$myv = <$IN>;
+close ($IN);
+chomp $myv;
+
+$script = "loader_ajax.php?ajax=csfframe";
+$images = "design/csf";
+
+my $buffer = $ENV{'QUERY_STRING'};
+if ($buffer eq "") {$buffer = $ENV{POST}}
+if ($buffer eq "") {read(STDIN, $buffer,$ENV{'CONTENT_LENGTH'})}
+if ($buffer eq "") {foreach my $item (@ARGV) {$buffer .= $item."&"}}
+my @pairs = split(/&/, $buffer);
+foreach my $pair (@pairs) {
+    my ($name, $value) = split(/=/, $pair);
+    $value =~ tr/+/ /;
+    $value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;
+    $FORM{$name} = $value;
+}
+
+print "content-type: text/html\n\n";
+
+my $bootstrapcss = "<link rel='stylesheet' href='$images/bootstrap/css/bootstrap.min.css'>";
+my $jqueryjs = "<script src='$images/jquery.min.js'></script>";
+my $bootstrapjs = "<script src='$images/bootstrap/js/bootstrap.min.js'></script>";
+
+unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq "logtailcmd" or $FORM{action} eq "loggrepcmd") {
+    print <<EOF;
+<!doctype html>
+<html lang='en'>
+<head>
+    <title>QHTL Firewall</title>
+    <meta charset='utf-8'>
+    <meta name='viewport' content='width=device-width, initial-scale=1'>
+    $bootstrapcss
+    <link href='$images/configserver.css' rel='stylesheet' type='text/css'>
+    $jqueryjs
+    $bootstrapjs
+
+<style>
+.mobilecontainer {
+    display:none;
+}
+.normalcontainer {
+    display:block;
+}
+EOF
+    if ($config{STYLE_MOBILE}) {
+        print <<EOF;
+\@media (max-width: 600px) {
+    .mobilecontainer {
+        display:block;
+    }
+    .normalcontainer {
+        display:none;
+    }
+}
+EOF
+    }
+    print "</style>\n";
+    print <<EOF;
+</head>
+<body>
+<div id="loader"></div>
+<a id='toplink' class='toplink' title='Go to bottom'><span class='glyphicon glyphicon-hand-down'></span></a>
+<div class='container-fluid'>
+<br>
+<div class='panel panel-default'>
+<h4><img src='$images/csf_small.png' style='padding-left: 10px'> QHTL Firewall - qhtlfirewall v$myv</h4>
+</div>
+EOF
+}
+
+my $templatehtml;
+open (my $SCRIPTOUT, '>', \$templatehtml);
+select $SCRIPTOUT;
+ConfigServer::DisplayUI::main(\%FORM, $script, $script, $images, $myv);
+close ($SCRIPTOUT);
+select STDOUT;
+$templatehtml =~ s/csfframe\?/csfframe\&/g;
+print $templatehtml;
+
+unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq "logtailcmd" or $FORM{action} eq "loggrepcmd") {
+    print <<EOF;
+<a class='botlink' id='botlink' title='Go to top'><span class='glyphicon glyphicon-hand-up'></span></a>
+<script>
+    function getCookie(cname) {
+        var name = cname + "=";
+        var ca = document.cookie.split(';');
+        for(var i = 0; i <ca.length; i++) {
+            var c = ca[i];
+            while (c.charAt(0)==' ') {
+                c = c.substring(1);
+            }
+            if (c.indexOf(name) == 0) {
+                return c.substring(name.length,c.length);
+            }
+        }
+        return "";
+    } 
+    $("#loader").hide();
+    $.fn.scrollBottom = function() { 
+      return $(document).height() - this.scrollTop() - this.height(); 
+    };
+    $('#botlink').on("click",function(){
+        $('html,body').animate({ scrollTop: 0 }, 'slow', function () {});
+    });
+    $('#toplink').on("click",function() {
+        var window_height = $(window).height();
+        var document_height = $(document).height();
+        $('html,body').animate({ scrollTop: window_height + document_height }, 'slow', function () {});
+    });
+    $('#tabAll').click(function(){
+        $('#tabAll').addClass('active');
+        $('.tab-pane').each(function(i,t){
+            $('#myTabs li').removeClass('active');
+            $(this).addClass('active');
+        });
+    });
+    $(document).ready(function(){
+        $('[data-tooltip="tooltip"]').tooltip();
+        $(window).scroll(function () {
+            if ($(this).scrollTop() > 500) {
+                $('#botlink').fadeIn();
+            } else {
+                $('#botlink').fadeOut();
+            }
+            if ($(this).scrollBottom() > 500) {
+                $('#toplink').fadeIn();
+            } else {
+                $('#toplink').fadeOut();
+            }
+        });
+EOF
+    if ($config{STYLE_MOBILE}) {
+        print <<EOF;
+        var csfview = getCookie('csfview');
+        if (csfview == 'mobile') {
+            $(".mobilecontainer").css('display','block');
+            $(".normalcontainer").css('display','none');
+            $("#csfreturn").addClass('btn-primary btn-lg btn-block').removeClass('btn-default');
+        } else if (csfview == 'desktop') {
+            $(".mobilecontainer").css('display','none');
+            $(".normalcontainer").css('display','block');
+            $("#csfreturn").removeClass('btn-primary btn-lg btn-block').addClass('btn-default');
+        }
+EOF
+    }
+    print "});\n";
+    if ($config{STYLE_MOBILE}) {
+        print <<EOF;
+    $("#NormalView").click(function(){
+        document.cookie = "csfview=desktop; path=/";
+        $(".mobilecontainer").css('display','none');
+        $(".normalcontainer").css('display','block');
+    });
+    $("#MobileView").click(function(){
+        document.cookie = "csfview=mobile; path=/";
+        $(".mobilecontainer").css('display','block');
+        $(".normalcontainer").css('display','none');
+    });
+EOF
+    }
+    print "  parent.resizeIframe(parent.document.getElementById('myiframe'));\n";
+    print "</script>\n";
+    print "</body>\n";
+    print "</html>\n";
+}
+
+1;
diff --git a/qhtlfirewall/cyberpanel/configservercsf/views.py b/qhtlfirewall/cyberpanel/configservercsf/views.py
index c523554..c8f2a61 100644
--- a/qhtlfirewall/cyberpanel/configservercsf/views.py
+++ b/qhtlfirewall/cyberpanel/configservercsf/views.py
@@ -47,18 +47,18 @@ def configservercsfiframe(request):
         qs = request.POST.urlencode()
 
     try:
-        tmp = tempfile.NamedTemporaryFile(mode = "w", delete=False)
+        tmp = tempfile.NamedTemporaryFile(mode="w", delete=False)
         tmp.write(qs)
         tmp.close()
-        command = "/usr/local/csf/bin/cyberpanel.pl '" + tmp.name + "'"
 
+        command = "/usr/local/qhtlfirewall/lib/cyberpanel/cyberpanel.pl '" + tmp.name + "'"
         try:
             output = ProcessUtilities.outputExecutioner(command)
         except:
-            output = "Output Error from csf UI script"
+            output = "Output Error from qhtlfirewall UI script"
 
         os.unlink(tmp.name)
     except:
-        output = "Unable to create csf UI temp file"
+        output = "Unable to create qhtlfirewall UI temp file"
 
     return HttpResponse(output)
diff --git a/qhtlfirewall/cyberpanel/cyberpanel.pl b/qhtlfirewall/cyberpanel/cyberpanel.pl
index 43a5af7..8fbd45b 100644
--- a/qhtlfirewall/cyberpanel/cyberpanel.pl
+++ b/qhtlfirewall/cyberpanel/cyberpanel.pl
@@ -23,7 +23,7 @@ use File::Find;
 use Fcntl qw(:DEFAULT :flock);
 use Sys::Hostname qw(hostname);
 use IPC::Open3;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use ConfigServer::DisplayUI;
 use ConfigServer::Config;
 
@@ -32,7 +32,7 @@ our ($script, $images, $myv, %FORM, %in);
 my $config = ConfigServer::Config->loadconfig();
 my %config = $config->config;
 
-open (my $IN, "<", "/etc/csf/version.txt");
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt");
 $myv = <$IN>;
 close ($IN);
 chomp $myv;
@@ -72,7 +72,7 @@ unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq
 <!doctype html>
 <html lang='en'>
 <head>
-	<title>ConfigServer Security &amp; Firewall</title>
+	<title>QHTL Firewall</title>
 	<meta charset='utf-8'>
 	<meta name='viewport' content='width=device-width, initial-scale=1'>
 	$bootstrapcss
@@ -109,7 +109,7 @@ EOF
 <div class='container-fluid'>
 <br>
 <div class='panel panel-default'>
-<h4><img src='$images/csf_small.png' style='padding-left: 10px'> ConfigServer Security &amp; Firewall - csf v$myv</h4>
+<h4><img src='$images/csf_small.png' style='padding-left: 10px'> QHTL Firewall - qhtlfirewall v$myv</h4>
 </div>
 EOF
 }
diff --git a/qhtlfirewall/install.cpanel.sh b/qhtlfirewall/install.cpanel.sh
index cd5aaf1..c5fca95 100644
--- a/qhtlfirewall/install.cpanel.sh
+++ b/qhtlfirewall/install.cpanel.sh
@@ -20,13 +20,13 @@
 
 umask 0177
 
-echo "Installing csf and lfd"
+echo "Installing qhtlfirewall and qhtlwaterfall"
 echo
 
 echo "Check we're running as root"
 if [ ! `id -u` = 0 ]; then
 	echo
-	echo "FAILED: You have to be logged in as root (UID:0) to install csf"
+    echo "FAILED: You have to be logged in as root (UID:0) to install qhtlfirewall"
     echo
 	exit
 fi
@@ -41,17 +41,17 @@ fi
 if [ -e "/usr/local/cpanel/3rdparty/bin/perl" ]; then
     sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' auto.pl
     sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' cpanel/csf.cgi
-    sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' csf.pl
+    sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' qhtlfirewall.pl
     sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' csftest.pl
-    sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' lfd.pl
+    sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' qhtlwaterfall.pl
     sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' os.pl
     sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' pt_deleted_action.pl
     sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' regex.custom.pm
     sed -i 's%^#\!/usr/bin/perl%#\!/usr/local/cpanel/3rdparty/bin/perl%' webmin/csf/index.cgi
 fi
 
-mkdir -v -m 0600 /etc/csf
-cp -avf install.txt /etc/csf/
+mkdir -v -m 0600 /etc/qhtlfirewall
+cp -avf install.txt /etc/qhtlfirewall/
 
 echo
 echo "Checking Perl modules..."
@@ -59,257 +59,258 @@ chmod 700 os.pl
 RETURN=`./os.pl`
 if [ "$RETURN" = 1 ]; then
 	echo
-	echo "FAILED: You MUST install the missing perl modules above before you can install csf. See /etc/csf/install.txt for installation details."
+    echo "FAILED: You MUST install the missing perl modules above before you can install QHTL. See /etc/qhtlfirewall/install.txt for installation details."
 	exit
 else
     echo "...Perl modules OK"
 fi
 
-mkdir -v -m 0600 /var/lib/csf
-mkdir -v -m 0600 /var/lib/csf/backup
-mkdir -v -m 0600 /var/lib/csf/Geo
-mkdir -v -m 0600 /var/lib/csf/ui
-mkdir -v -m 0600 /var/lib/csf/stats
-mkdir -v -m 0600 /var/lib/csf/lock
-mkdir -v -m 0600 /var/lib/csf/webmin
-mkdir -v -m 0600 /var/lib/csf/zone
-mkdir -v -m 0600 /usr/local/csf
-mkdir -v -m 0600 /usr/local/csf/bin
-mkdir -v -m 0600 /usr/local/csf/lib
-mkdir -v -m 0600 /usr/local/csf/tpl
-
-if [ -e "/etc/csf/alert.txt" ]; then
+mkdir -v -m 0600 /var/lib/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall/backup
+mkdir -v -m 0600 /var/lib/qhtlfirewall/Geo
+mkdir -v -m 0600 /var/lib/qhtlfirewall/ui
+mkdir -v -m 0600 /var/lib/qhtlfirewall/stats
+mkdir -v -m 0600 /var/lib/qhtlfirewall/lock
+mkdir -v -m 0600 /var/lib/qhtlfirewall/webmin
+mkdir -v -m 0600 /var/lib/qhtlfirewall/zone
+mkdir -v -m 0600 /usr/local/qhtlfirewall
+mkdir -v -m 0600 /usr/local/qhtlfirewall/bin
+mkdir -v -m 0600 /usr/local/qhtlfirewall/lib
+mkdir -v -m 0600 /usr/local/qhtlfirewall/tpl
+
+if [ -e "/etc/qhtlfirewall/alert.txt" ]; then
 	sh migratedata.sh
 fi
 
-if [ ! -e "/etc/csf/csf.conf" ]; then
-	cp -avf csf.conf /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.conf" ]; then
+    cp -avf csf.conf /etc/qhtlfirewall/qhtlfirewall.conf
 fi
 
-if [ ! -e "/etc/csf/csf.allow" ]; then
-	cp -avf csf.allow /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.allow" ]; then
+    cp -avf csf.allow /etc/qhtlfirewall/qhtlfirewall.allow
+    sed -i 's#/etc/csf/#/etc/qhtlfirewall/#g' /etc/qhtlfirewall/qhtlfirewall.allow
 fi
-if [ ! -e "/etc/csf/csf.deny" ]; then
-	cp -avf csf.deny /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.deny" ]; then
+    cp -avf csf.deny /etc/qhtlfirewall/qhtlfirewall.deny
 fi
-if [ ! -e "/etc/csf/csf.redirect" ]; then
-	cp -avf csf.redirect /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.redirect" ]; then
+    cp -avf csf.redirect /etc/qhtlfirewall/qhtlfirewall.redirect
 fi
-if [ ! -e "/etc/csf/csf.resellers" ]; then
-	cp -avf csf.resellers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.resellers" ]; then
+    cp -avf csf.resellers /etc/qhtlfirewall/qhtlfirewall.resellers
 fi
-if [ ! -e "/etc/csf/csf.dirwatch" ]; then
-	cp -avf csf.dirwatch /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dirwatch" ]; then
+    cp -avf csf.dirwatch /etc/qhtlfirewall/qhtlfirewall.dirwatch
 fi
-if [ ! -e "/etc/csf/csf.syslogs" ]; then
-	cp -avf csf.syslogs /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogs" ]; then
+    cp -avf csf.syslogs /etc/qhtlfirewall/qhtlfirewall.syslogs
 fi
-if [ ! -e "/etc/csf/csf.logfiles" ]; then
-	cp -avf csf.logfiles /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logfiles" ]; then
+    cp -avf csf.logfiles /etc/qhtlfirewall/qhtlfirewall.logfiles
 fi
-if [ ! -e "/etc/csf/csf.logignore" ]; then
-	cp -avf csf.logignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logignore" ]; then
+    cp -avf csf.logignore /etc/qhtlfirewall/qhtlfirewall.logignore
 fi
-if [ ! -e "/etc/csf/csf.blocklists" ]; then
-	cp -avf csf.blocklists /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.blocklists" ]; then
+    cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists
 else
-	cp -avf csf.blocklists /etc/csf/csf.blocklists.new
+    cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists.new
 fi
-if [ ! -e "/etc/csf/csf.ignore" ]; then
-	cp -avf csf.ignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.ignore" ]; then
+    cp -avf csf.ignore /etc/qhtlfirewall/qhtlfirewall.ignore
+    sed -i 's#/etc/csf/#/etc/qhtlfirewall/#g' /etc/qhtlfirewall/qhtlfirewall.ignore
 fi
-if [ ! -e "/etc/csf/csf.pignore" ]; then
-	cp -avf csf.pignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.pignore" ]; then
+    cp -avf csf.pignore /etc/qhtlfirewall/qhtlfirewall.pignore
 fi
-if [ ! -e "/etc/csf/csf.rignore" ]; then
-	cp -avf csf.rignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rignore" ]; then
+    cp -avf csf.rignore /etc/qhtlfirewall/qhtlfirewall.rignore
 fi
-if [ ! -e "/etc/csf/csf.fignore" ]; then
-	cp -avf csf.fignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.fignore" ]; then
+    cp -avf csf.fignore /etc/qhtlfirewall/qhtlfirewall.fignore
 fi
-if [ ! -e "/etc/csf/csf.signore" ]; then
-	cp -avf csf.signore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.signore" ]; then
+    cp -avf csf.signore /etc/qhtlfirewall/qhtlfirewall.signore
 fi
-if [ ! -e "/etc/csf/csf.suignore" ]; then
-	cp -avf csf.suignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.suignore" ]; then
+    cp -avf csf.suignore /etc/qhtlfirewall/qhtlfirewall.suignore
 fi
-if [ ! -e "/etc/csf/csf.uidignore" ]; then
-	cp -avf csf.uidignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.uidignore" ]; then
+    cp -avf csf.uidignore /etc/qhtlfirewall/qhtlfirewall.uidignore
 fi
-if [ ! -e "/etc/csf/csf.mignore" ]; then
-	cp -avf csf.mignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.mignore" ]; then
+    cp -avf csf.mignore /etc/qhtlfirewall/qhtlfirewall.mignore
 fi
-if [ ! -e "/etc/csf/csf.sips" ]; then
-	cp -avf csf.sips /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.sips" ]; then
+    cp -avf csf.sips /etc/qhtlfirewall/qhtlfirewall.sips
 fi
-if [ ! -e "/etc/csf/csf.dyndns" ]; then
-	cp -avf csf.dyndns /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dyndns" ]; then
+    cp -avf csf.dyndns /etc/qhtlfirewall/qhtlfirewall.dyndns
 fi
-if [ ! -e "/etc/csf/csf.syslogusers" ]; then
-	cp -avf csf.syslogusers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogusers" ]; then
+    cp -avf csf.syslogusers /etc/qhtlfirewall/qhtlfirewall.syslogusers
 fi
-if [ ! -e "/etc/csf/csf.smtpauth" ]; then
-	cp -avf csf.smtpauth /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.smtpauth" ]; then
+    cp -avf csf.smtpauth /etc/qhtlfirewall/qhtlfirewall.smtpauth
 fi
-if [ ! -e "/etc/csf/csf.rblconf" ]; then
-	cp -avf csf.rblconf /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rblconf" ]; then
+    cp -avf csf.rblconf /etc/qhtlfirewall/qhtlfirewall.rblconf
 fi
-if [ ! -e "/etc/csf/csf.cloudflare" ]; then
-	cp -avf csf.cloudflare /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.cloudflare" ]; then
+    cp -avf csf.cloudflare /etc/qhtlfirewall/qhtlfirewall.cloudflare
 fi
 
-if [ ! -e "/usr/local/csf/tpl/alert.txt" ]; then
-	cp -avf alert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/alert.txt" ]; then
+    cp -avf alert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/reselleralert.txt" ]; then
-	cp -avf reselleralert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/reselleralert.txt" ]; then
+    cp -avf reselleralert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logalert.txt" ]; then
-	cp -avf logalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logalert.txt" ]; then
+    cp -avf logalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logfloodalert.txt" ]; then
-	cp -avf logfloodalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logfloodalert.txt" ]; then
+    cp -avf logfloodalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/syslogalert.txt" ]; then
-	cp -avf syslogalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/syslogalert.txt" ]; then
+    cp -avf syslogalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/integrityalert.txt" ]; then
-	cp -avf integrityalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/integrityalert.txt" ]; then
+    cp -avf integrityalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/exploitalert.txt" ]; then
-	cp -avf exploitalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/exploitalert.txt" ]; then
+    cp -avf exploitalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/queuealert.txt" ]; then
-	cp -avf queuealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/queuealert.txt" ]; then
+    cp -avf queuealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/modsecipdbalert.txt" ]; then
-	cp -avf modsecipdbalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/modsecipdbalert.txt" ]; then
+    cp -avf modsecipdbalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/tracking.txt" ]; then
-	cp -avf tracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/tracking.txt" ]; then
+    cp -avf tracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/connectiontracking.txt" ]; then
-	cp -avf connectiontracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/connectiontracking.txt" ]; then
+    cp -avf connectiontracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/processtracking.txt" ]; then
-	cp -avf processtracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/processtracking.txt" ]; then
+    cp -avf processtracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/accounttracking.txt" ]; then
-	cp -avf accounttracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/accounttracking.txt" ]; then
+    cp -avf accounttracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/usertracking.txt" ]; then
-	cp -avf usertracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/usertracking.txt" ]; then
+    cp -avf usertracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sshalert.txt" ]; then
-	cp -avf sshalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sshalert.txt" ]; then
+    cp -avf sshalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/webminalert.txt" ]; then
-	cp -avf webminalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/webminalert.txt" ]; then
+    cp -avf webminalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sualert.txt" ]; then
-	cp -avf sualert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sualert.txt" ]; then
+    cp -avf sualert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sudoalert.txt" ]; then
-	cp -avf sudoalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sudoalert.txt" ]; then
+    cp -avf sudoalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/consolealert.txt" ]; then
-	cp -avf consolealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/consolealert.txt" ]; then
+    cp -avf consolealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uialert.txt" ]; then
-	cp -avf uialert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uialert.txt" ]; then
+    cp -avf uialert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/cpanelalert.txt" ]; then
-	cp -avf cpanelalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/cpanelalert.txt" ]; then
+    cp -avf cpanelalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/scriptalert.txt" ]; then
-	cp -avf scriptalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/scriptalert.txt" ]; then
+    cp -avf scriptalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/relayalert.txt" ]; then
-	cp -avf relayalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/relayalert.txt" ]; then
+    cp -avf relayalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/filealert.txt" ]; then
-	cp -avf filealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/filealert.txt" ]; then
+    cp -avf filealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/watchalert.txt" ]; then
-	cp -avf watchalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/watchalert.txt" ]; then
+    cp -avf watchalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/loadalert.txt" ]; then
-	cp -avf loadalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/loadalert.txt" ]; then
+    cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/.
 else
-	cp -avf loadalert.txt /usr/local/csf/tpl/loadalert.txt.new
+    cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/loadalert.txt.new
 fi
-if [ ! -e "/usr/local/csf/tpl/resalert.txt" ]; then
-	cp -avf resalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/resalert.txt" ]; then
+    cp -avf resalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portscan.txt" ]; then
-	cp -avf portscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portscan.txt" ]; then
+    cp -avf portscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uidscan.txt" ]; then
-	cp -avf uidscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uidscan.txt" ]; then
+    cp -avf uidscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/permblock.txt" ]; then
-	cp -avf permblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/permblock.txt" ]; then
+    cp -avf permblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/netblock.txt" ]; then
-	cp -avf netblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/netblock.txt" ]; then
+    cp -avf netblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portknocking.txt" ]; then
-	cp -avf portknocking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portknocking.txt" ]; then
+    cp -avf portknocking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/forkbombalert.txt" ]; then
-	cp -avf forkbombalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/forkbombalert.txt" ]; then
+    cp -avf forkbombalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/recaptcha.txt" ]; then
-	cp -avf recaptcha.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/recaptcha.txt" ]; then
+    cp -avf recaptcha.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.main.txt" ]; then
-	cp -avf apache.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.main.txt" ]; then
+    cp -avf apache.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.http.txt" ]; then
-	cp -avf apache.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.http.txt" ]; then
+    cp -avf apache.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.https.txt" ]; then
-	cp -avf apache.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.https.txt" ]; then
+    cp -avf apache.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.main.txt" ]; then
-	cp -avf litespeed.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.main.txt" ]; then
+    cp -avf litespeed.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.http.txt" ]; then
-	cp -avf litespeed.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.http.txt" ]; then
+    cp -avf litespeed.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.https.txt" ]; then
-	cp -avf litespeed.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.https.txt" ]; then
+    cp -avf litespeed.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-cp -avf x-arf.txt /usr/local/csf/tpl/.
+cp -avf x-arf.txt /usr/local/qhtlfirewall/tpl/.
 
-if [ ! -e "/usr/local/csf/bin/regex.custom.pm" ]; then
-	cp -avf regex.custom.pm /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/regex.custom.pm" ]; then
+    cp -avf regex.custom.pm /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/usr/local/csf/bin/pt_deleted_action.pl" ]; then
-	cp -avf pt_deleted_action.pl /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/pt_deleted_action.pl" ]; then
+    cp -avf pt_deleted_action.pl /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/etc/csf/messenger" ]; then
-	cp -avf messenger /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/messenger" ]; then
+    cp -avf messenger /etc/qhtlfirewall/.
 fi
-if [ ! -e "/etc/csf/messenger/index.recaptcha.html" ]; then
-	cp -avf messenger/index.recaptcha.html /etc/csf/messenger/.
+if [ ! -e "/etc/qhtlfirewall/messenger/index.recaptcha.html" ]; then
+    cp -avf messenger/index.recaptcha.html /etc/qhtlfirewall/messenger/.
 fi
-if [ ! -e "/etc/csf/ui" ]; then
-	cp -avf ui /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/ui" ]; then
+    cp -avf ui /etc/qhtlfirewall/.
 fi
 if [ -e "/etc/cron.d/csfcron.sh" ]; then
-	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/csf-cron
+    mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/qhtlfirewall-cron
 fi
-if [ ! -e "/etc/cron.d/csf-cron" ]; then
-	cp -avf csfcron.sh /etc/cron.d/csf-cron
+if [ ! -e "/etc/cron.d/qhtlfirewall-cron" ]; then
+    cp -avf qhtlfirewall.cron /etc/cron.d/qhtlfirewall-cron
 fi
 if [ -e "/etc/cron.d/lfdcron.sh" ]; then
-	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/lfd-cron
+    mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/qhtlwaterfall-cron
 fi
-if [ ! -e "/etc/cron.d/lfd-cron" ]; then
-	cp -avf lfdcron.sh /etc/cron.d/lfd-cron
+if [ ! -e "/etc/cron.d/qhtlwaterfall-cron" ]; then
+    cp -avf qhtlwaterfall.cron /etc/cron.d/qhtlwaterfall-cron
 fi
-sed -i "s%/etc/init.d/lfd restart%/usr/sbin/csf --lfd restart%" /etc/cron.d/lfd-cron
 if [ -e "/usr/local/csf/bin/servercheck.pm" ]; then
 	rm -f /usr/local/csf/bin/servercheck.pm
 fi
@@ -336,96 +337,84 @@ if [ -e "/usr/local/csf/bin/regex.pm" ]; then
 fi
 
 OLDVERSION=0
-if [ -e "/etc/csf/version.txt" ]; then
-    OLDVERSION=`head -n 1 /etc/csf/version.txt`
-fi
-
-rm -f /etc/csf/csf.pl /usr/sbin/csf /etc/csf/lfd.pl /usr/sbin/lfd
-chmod 700 csf.pl lfd.pl
-cp -avf csf.pl /usr/sbin/csf
-cp -avf lfd.pl /usr/sbin/lfd
-chmod 700 /usr/sbin/csf /usr/sbin/lfd
-ln -svf /usr/sbin/csf /etc/csf/csf.pl
-ln -svf /usr/sbin/lfd /etc/csf/lfd.pl
-ln -svf /usr/local/csf/bin/csftest.pl /etc/csf/
-ln -svf /usr/local/csf/bin/pt_deleted_action.pl /etc/csf/
-ln -svf /usr/local/csf/bin/remove_apf_bfd.sh /etc/csf/
-ln -svf /usr/local/csf/bin/uninstall.sh /etc/csf/
-ln -svf /usr/local/csf/bin/regex.custom.pm /etc/csf/
-ln -svf /usr/local/csf/lib/webmin /etc/csf/
-if [ ! -e "/etc/csf/alerts" ]; then
-    ln -svf /usr/local/csf/tpl /etc/csf/alerts
-fi
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/lfd
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/csf
-
-mkdir webmin/csf/images
-mkdir ui/images
-mkdir da/images
-mkdir interworx/images
+if [ -e "/etc/qhtlfirewall/version.txt" ]; then
+    OLDVERSION=`head -n 1 /etc/qhtlfirewall/version.txt`
+fi
+
+rm -f /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /usr/sbin/csf /usr/sbin/lfd
+chmod 700 qhtlfirewall.pl qhtlwaterfall.pl
+cp -avf qhtlfirewall.pl /usr/sbin/qhtlfirewall
+cp -avf qhtlwaterfall.pl /usr/sbin/qhtlwaterfall
+chmod 700 /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlfirewall
+
+mkdir -p webmin/csf/images
+mkdir -p ui/images
+mkdir -p da/images
+mkdir -p interworx/images
 
 cp -avf csf/* webmin/csf/images/
 cp -avf csf/* ui/images/
 cp -avf csf/* da/images/
 cp -avf csf/* interworx/images/
 
-cp -avf messenger/*.php /etc/csf/messenger/
+cp -avf messenger/*.php /etc/qhtlfirewall/messenger/
 cp -avf csf/csf_small.png /usr/local/cpanel/whostmgr/docroot/addon_plugins/
-cp -avf uninstall.sh /usr/local/csf/bin/
-cp -avf csftest.pl /usr/local/csf/bin/
-cp -avf remove_apf_bfd.sh /usr/local/csf/bin/
-cp -avf readme.txt /etc/csf/
-cp -avf sanity.txt /usr/local/csf/lib/
-cp -avf csf.rbls /usr/local/csf/lib/
-cp -avf restricted.txt /usr/local/csf/lib/
-cp -avf changelog.txt /etc/csf/
-cp -avf downloadservers /etc/csf/
-cp -avf install.txt /etc/csf/
-cp -avf version.txt /etc/csf/
-cp -avf license.txt /etc/csf/
-cp -avf webmin /usr/local/csf/lib/
-cp -avf ConfigServer /usr/local/csf/lib/
-cp -avf Net /usr/local/csf/lib/
-cp -avf Geo /usr/local/csf/lib/
-cp -avf Crypt /usr/local/csf/lib/
-cp -avf HTTP /usr/local/csf/lib/
-cp -avf JSON /usr/local/csf/lib/
-cp -avf version/* /usr/local/csf/lib/
-cp -avf csf.div /usr/local/csf/lib/
-cp -avf csfajaxtail.js /usr/local/csf/lib/
-cp -avf ui/images /etc/csf/ui/.
-cp -avf profiles /usr/local/csf/
-cp -avf csf.conf /usr/local/csf/profiles/reset_to_defaults.conf
-cp -avf cpanel.comodo.ignore /etc/csf/
-cp -avf cpanel.comodo.allow /etc/csf/
-cp -avf cpanel.ignore /etc/csf/
-cp -avf cpanel.allow /etc/csf/
-cp -avf messenger/*.php /etc/csf/messenger/.
-cp -avf lfd.logrotate /etc/logrotate.d/lfd
-
-rm -fv /etc/csf/csf.spamhaus /etc/csf/csf.dshield /etc/csf/csf.tor /etc/csf/csf.bogon
+cp -avf uninstall.sh /usr/local/qhtlfirewall/bin/
+cp -avf csftest.pl /usr/local/qhtlfirewall/bin/
+cp -avf remove_apf_bfd.sh /usr/local/qhtlfirewall/bin/
+cp -avf readme.txt /etc/qhtlfirewall/
+cp -avf sanity.txt /usr/local/qhtlfirewall/lib/
+cp -avf csf.rbls /usr/local/qhtlfirewall/lib/
+cp -avf restricted.txt /usr/local/qhtlfirewall/lib/
+cp -avf changelog.txt /etc/qhtlfirewall/
+cp -avf downloadservers /etc/qhtlfirewall/
+cp -avf install.txt /etc/qhtlfirewall/
+cp -avf version.txt /etc/qhtlfirewall/
+cp -avf license.txt /etc/qhtlfirewall/
+cp -avf webmin /usr/local/qhtlfirewall/lib/
+cp -avf ConfigServer /usr/local/qhtlfirewall/lib/
+cp -avf Net /usr/local/qhtlfirewall/lib/
+cp -avf Geo /usr/local/qhtlfirewall/lib/
+cp -avf Crypt /usr/local/qhtlfirewall/lib/
+cp -avf HTTP /usr/local/qhtlfirewall/lib/
+cp -avf JSON /usr/local/qhtlfirewall/lib/
+cp -avf version/* /usr/local/qhtlfirewall/lib/
+cp -avf csf.div /usr/local/qhtlfirewall/lib/
+cp -avf csfajaxtail.js /usr/local/qhtlfirewall/lib/
+cp -avf ui/images /etc/qhtlfirewall/ui/.
+cp -avf profiles /usr/local/qhtlfirewall/
+cp -avf csf.conf /usr/local/qhtlfirewall/profiles/reset_to_defaults.conf
+cp -avf cpanel.comodo.ignore /etc/qhtlfirewall/
+cp -avf cpanel.comodo.allow /etc/qhtlfirewall/
+cp -avf cpanel.ignore /etc/qhtlfirewall/
+cp -avf cpanel.allow /etc/qhtlfirewall/
+cp -avf messenger/*.php /etc/qhtlfirewall/messenger/.
+cp -avf qhtlwaterfall.logrotate /etc/logrotate.d/qhtlwaterfall
+
+rm -fv /etc/qhtlfirewall/csf.spamhaus /etc/qhtlfirewall/csf.dshield /etc/qhtlfirewall/csf.tor /etc/qhtlfirewall/csf.bogon
 
 mkdir -p /usr/local/man/man1/
-cp -avf csf.1.txt /usr/local/man/man1/csf.1
-man csf | col -b > csf.help
-cp -avf csf.help /usr/local/csf/lib/
+cp -avf qhtlfirewall.1.txt /usr/local/man/man1/qhtlfirewall.1
+man qhtlfirewall | col -b > qhtlfirewall.help
+cp -avf qhtlfirewall.help /usr/local/qhtlfirewall/lib/
 chmod 755 /usr/local/man/
 chmod 755 /usr/local/man/man1/
-chmod 644 /usr/local/man/man1/csf.1
-
-chmod -R 600 /etc/csf
-chmod -R 600 /var/lib/csf
-chmod -R 600 /usr/local/csf/bin
-chmod -R 600 /usr/local/csf/lib
-chmod -R 600 /usr/local/csf/tpl
-chmod -R 600 /usr/local/csf/profiles
-chmod 600 /var/log/lfd.log*
-
-chmod -v 700 /usr/local/csf/bin/*.pl /usr/local/csf/bin/*.sh /usr/local/csf/bin/*.pm
-chmod -v 700 /etc/csf/*.pl /etc/csf/*.cgi /etc/csf/*.sh /etc/csf/*.php /etc/csf/*.py
-chmod -v 700 /etc/csf/webmin/csf/index.cgi
-chmod -v 644 /etc/cron.d/lfd-cron
-chmod -v 644 /etc/cron.d/csf-cron
+chmod 644 /usr/local/man/man1/qhtlfirewall.1
+
+chmod -R 600 /etc/qhtlfirewall
+chmod -R 600 /var/lib/qhtlfirewall
+chmod -R 600 /usr/local/qhtlfirewall/bin
+chmod -R 600 /usr/local/qhtlfirewall/lib
+chmod -R 600 /usr/local/qhtlfirewall/tpl
+chmod -R 600 /usr/local/qhtlfirewall/profiles
+chmod 600 /var/log/qhtlwaterfall.log*
+
+chmod -v 700 /usr/local/qhtlfirewall/bin/*.pl /usr/local/qhtlfirewall/bin/*.sh /usr/local/qhtlfirewall/bin/*.pm
+chmod -v 700 /usr/local/qhtlfirewall/lib/webmin/csf/index.cgi
+chmod -v 644 /etc/cron.d/qhtlwaterfall-cron
+chmod -v 644 /etc/cron.d/qhtlfirewall-cron
 
 cp -avf csget.pl /etc/cron.daily/csget
 chmod 700 /etc/cron.daily/csget
@@ -481,33 +470,32 @@ fi
 
 if test `cat /proc/1/comm` = "systemd"
 then
-    if [ -e /etc/init.d/lfd ]; then
+    if [ -e /etc/init.d/qhtlwaterfall ] || [ -e /etc/init.d/lfd ]; then
         if [ -f /etc/redhat-release ]; then
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+            /sbin/chkconfig qhtlfirewall off
+            /sbin/chkconfig qhtlwaterfall off
+            /sbin/chkconfig qhtlfirewall --del
+            /sbin/chkconfig qhtlwaterfall --del
         elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-            update-rc.d -f lfd remove
-            update-rc.d -f csf remove
+            update-rc.d -f qhtlwaterfall remove
+            update-rc.d -f qhtlfirewall remove
         elif [ -f /etc/gentoo-release ]; then
-            rc-update del lfd default
-            rc-update del csf default
+            rc-update del qhtlwaterfall default
+            rc-update del qhtlfirewall default
         elif [ -f /etc/slackware-version ]; then
-            rm -vf /etc/rc.d/rc3.d/S80csf
-            rm -vf /etc/rc.d/rc4.d/S80csf
-            rm -vf /etc/rc.d/rc5.d/S80csf
-            rm -vf /etc/rc.d/rc3.d/S85lfd
-            rm -vf /etc/rc.d/rc4.d/S85lfd
-            rm -vf /etc/rc.d/rc5.d/S85lfd
+            rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+            rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+            rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+            rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+            rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+            rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
         else
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+            /sbin/chkconfig qhtlfirewall off
+            /sbin/chkconfig qhtlwaterfall off
+            /sbin/chkconfig qhtlfirewall --del
+            /sbin/chkconfig qhtlwaterfall --del
         fi
-        rm -fv /etc/init.d/csf
-        rm -fv /etc/init.d/lfd
+        rm -fv /etc/init.d/qhtlfirewall /etc/init.d/qhtlwaterfall /etc/init.d/csf /etc/init.d/lfd
     fi
 
     mkdir -p /etc/systemd/system/
@@ -527,29 +515,29 @@ then
     systemctl stop firewalld
     systemctl mask firewalld
 else
-    cp -avf lfd.sh /etc/init.d/lfd
-    cp -avf csf.sh /etc/init.d/csf
-    chmod -v 755 /etc/init.d/lfd
-    chmod -v 755 /etc/init.d/csf
+    cp -avf qhtlwaterfall.sh /etc/init.d/qhtlwaterfall
+    cp -avf qhtlfirewall.sh /etc/init.d/qhtlfirewall
+    chmod -v 755 /etc/init.d/qhtlwaterfall
+    chmod -v 755 /etc/init.d/qhtlfirewall
 
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+    /sbin/chkconfig qhtlwaterfall on
+    /sbin/chkconfig qhtlfirewall on
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
-        update-rc.d lfd defaults 80 20
-        update-rc.d csf defaults 20 80
+    update-rc.d -f qhtlwaterfall remove
+    update-rc.d -f qhtlfirewall remove
+    update-rc.d qhtlwaterfall defaults 80 20
+    update-rc.d qhtlfirewall defaults 20 80
     elif [ -f /etc/gentoo-release ]; then
-        rc-update add lfd default
-        rc-update add csf default
+    rc-update add qhtlwaterfall default
+    rc-update add qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        ln -svf /etc/init.d/csf /etc/rc.d/rc3.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc4.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc5.d/S80csf
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc3.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc4.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc5.d/S85lfd
+    ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc3.d/S80qhtlfirewall
+    ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc4.d/S80qhtlfirewall
+    ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc5.d/S80qhtlfirewall
+    ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc3.d/S85qhtlwaterfall
+    ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc4.d/S85qhtlwaterfall
+    ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
         /sbin/chkconfig lfd on
         /sbin/chkconfig csf on
@@ -560,20 +548,20 @@ fi
 if [ -e "/usr/local/cpanel/3rdparty/bin/perl" ]; then
     sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' auto.pl
     sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' cpanel/csf.cgi
-    sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' csf.pl
+    sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' qhtlfirewall.pl
     sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' csftest.pl
-    sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' lfd.pl
+    sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' qhtlwaterfall.pl
     sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' os.pl
     sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' pt_deleted_action.pl
     sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' regex.custom.pm
     sed -i 's%^#\!/usr/local/cpanel/3rdparty/bin/perl%#\!/usr/bin/perl%' webmin/csf/index.cgi
 fi
 
-chown -Rf root:root /etc/csf /var/lib/csf /usr/local/csf
-chown -f root:root /usr/sbin/csf /usr/sbin/lfd /etc/logrotate.d/lfd /etc/cron.d/csf-cron /etc/cron.d/lfd-cron /usr/local/man/man1/csf.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/lfd /etc/init.d/csf
+chown -Rf root:root /etc/qhtlfirewall /var/lib/qhtlfirewall /usr/local/qhtlfirewall
+chown -f root:root /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /etc/logrotate.d/qhtlwaterfall /etc/cron.d/qhtlfirewall-cron /etc/cron.d/qhtlwaterfall-cron /usr/local/man/man1/qhtlfirewall.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/qhtlwaterfall /etc/init.d/qhtlfirewall
 
-cd webmin ; tar -czf /usr/local/csf/csfwebmin.tgz ./*
-ln -svf /usr/local/csf/csfwebmin.tgz /etc/csf/
+cd webmin ; tar -czf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz ./*
+ln -svf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz /etc/qhtlfirewall/
 
 echo
 echo "Installation Completed"
diff --git a/qhtlfirewall/install.cwp.sh b/qhtlfirewall/install.cwp.sh
index c0c3e9a..dde106a 100644
--- a/qhtlfirewall/install.cwp.sh
+++ b/qhtlfirewall/install.cwp.sh
@@ -32,26 +32,26 @@ elif [ -e "/usr/local/directadmin/directadmin" ]; then
 	exit 0
 fi
 
-echo "Installing csf and lfd"
+echo "Installing qhtlfirewall and qhtlwaterfall"
 echo
 
 echo "Check we're running as root"
 if [ ! `id -u` = 0 ]; then
 	echo
-	echo "FAILED: You have to be logged in as root (UID:0) to install csf"
+	echo "FAILED: You have to be logged in as root (UID:0) to install qhtlfirewall"
 	exit
 fi
 echo
 
-mkdir -v -m 0600 /etc/csf
-cp -avf install.txt /etc/csf/
+mkdir -v -m 0600 /etc/qhtlfirewall
+cp -avf install.txt /etc/qhtlfirewall/
 
 echo "Checking Perl modules..."
 chmod 700 os.pl
 RETURN=`./os.pl`
 if [ "$RETURN" = 1 ]; then
 	echo
-	echo "FAILED: You MUST install the missing perl modules above before you can install csf. See /etc/csf/install.txt for installation details."
+	echo "FAILED: You MUST install the missing perl modules above before you can install QHTL. See /etc/qhtlfirewall/install.txt for installation details."
     echo
 	exit
 else
@@ -59,351 +59,341 @@ else
     echo
 fi
 
-mkdir -v -m 0600 /etc/csf
-mkdir -v -m 0600 /var/lib/csf
-mkdir -v -m 0600 /var/lib/csf/backup
-mkdir -v -m 0600 /var/lib/csf/Geo
-mkdir -v -m 0600 /var/lib/csf/ui
-mkdir -v -m 0600 /var/lib/csf/stats
-mkdir -v -m 0600 /var/lib/csf/lock
-mkdir -v -m 0600 /var/lib/csf/webmin
-mkdir -v -m 0600 /var/lib/csf/zone
-mkdir -v -m 0600 /usr/local/csf
-mkdir -v -m 0600 /usr/local/csf/bin
-mkdir -v -m 0600 /usr/local/csf/lib
-mkdir -v -m 0600 /usr/local/csf/tpl
-
-if [ -e "/etc/csf/alert.txt" ]; then
+mkdir -v -m 0600 /etc/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall/backup
+mkdir -v -m 0600 /var/lib/qhtlfirewall/Geo
+mkdir -v -m 0600 /var/lib/qhtlfirewall/ui
+mkdir -v -m 0600 /var/lib/qhtlfirewall/stats
+mkdir -v -m 0600 /var/lib/qhtlfirewall/lock
+mkdir -v -m 0600 /var/lib/qhtlfirewall/webmin
+mkdir -v -m 0600 /var/lib/qhtlfirewall/zone
+mkdir -v -m 0600 /usr/local/qhtlfirewall
+mkdir -v -m 0600 /usr/local/qhtlfirewall/bin
+mkdir -v -m 0600 /usr/local/qhtlfirewall/lib
+mkdir -v -m 0600 /usr/local/qhtlfirewall/tpl
+
+if [ -e "/etc/qhtlfirewall/alert.txt" ]; then
 	sh migratedata.sh
 fi
 
-if [ ! -e "/etc/csf/csf.conf" ]; then
-	cp -avf csf.cwp.conf /etc/csf/csf.conf
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.conf" ]; then
+	cp -avf csf.cwp.conf /etc/qhtlfirewall/qhtlfirewall.conf
 fi
 
-if [ ! -d /var/lib/csf ]; then
-	mkdir -v -p -m 0600 /var/lib/csf
+if [ ! -d /var/lib/qhtlfirewall ]; then
+	mkdir -v -p -m 0600 /var/lib/qhtlfirewall
 fi
-if [ ! -d /usr/local/csf/lib ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/lib
+if [ ! -d /usr/local/qhtlfirewall/lib ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/lib
 fi
-if [ ! -d /usr/local/csf/bin ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/bin
+if [ ! -d /usr/local/qhtlfirewall/bin ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/bin
 fi
-if [ ! -d /usr/local/csf/tpl ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/tpl
+if [ ! -d /usr/local/qhtlfirewall/tpl ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/tpl
 fi
 
-if [ ! -e "/etc/csf/csf.allow" ]; then
-	cp -avf csf.cwp.allow /etc/csf/csf.allow
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.allow" ]; then
+	cp -avf csf.cwp.allow /etc/qhtlfirewall/qhtlfirewall.allow
+	sed -i 's#/etc/csf/#/etc/qhtlfirewall/#g' /etc/qhtlfirewall/qhtlfirewall.allow
 fi
-if [ ! -e "/etc/csf/csf.deny" ]; then
-	cp -avf csf.deny /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.deny" ]; then
+	cp -avf csf.deny /etc/qhtlfirewall/qhtlfirewall.deny
 fi
-if [ ! -e "/etc/csf/csf.redirect" ]; then
-	cp -avf csf.redirect /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.redirect" ]; then
+	cp -avf csf.redirect /etc/qhtlfirewall/qhtlfirewall.redirect
 fi
-if [ ! -e "/etc/csf/csf.resellers" ]; then
-	cp -avf csf.resellers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.resellers" ]; then
+	cp -avf csf.resellers /etc/qhtlfirewall/qhtlfirewall.resellers
 fi
-if [ ! -e "/etc/csf/csf.dirwatch" ]; then
-	cp -avf csf.dirwatch /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dirwatch" ]; then
+	cp -avf csf.dirwatch /etc/qhtlfirewall/qhtlfirewall.dirwatch
 fi
-if [ ! -e "/etc/csf/csf.syslogs" ]; then
-	cp -avf csf.syslogs /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogs" ]; then
+	cp -avf csf.syslogs /etc/qhtlfirewall/qhtlfirewall.syslogs
 fi
-if [ ! -e "/etc/csf/csf.logfiles" ]; then
-	cp -avf csf.logfiles /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logfiles" ]; then
+	cp -avf csf.logfiles /etc/qhtlfirewall/qhtlfirewall.logfiles
 fi
-if [ ! -e "/etc/csf/csf.logignore" ]; then
-	cp -avf csf.logignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logignore" ]; then
+	cp -avf csf.logignore /etc/qhtlfirewall/qhtlfirewall.logignore
 fi
-if [ ! -e "/etc/csf/csf.blocklists" ]; then
-	cp -avf csf.blocklists /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.blocklists" ]; then
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists
 else
-	cp -avf csf.blocklists /etc/csf/csf.blocklists.new
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists.new
 fi
-if [ ! -e "/etc/csf/csf.ignore" ]; then
-	cp -avf csf.cwp.ignore /etc/csf/csf.ignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.ignore" ]; then
+	cp -avf csf.cwp.ignore /etc/qhtlfirewall/qhtlfirewall.ignore
+	sed -i 's#/etc/csf/#/etc/qhtlfirewall/#g' /etc/qhtlfirewall/qhtlfirewall.ignore
 fi
-if [ ! -e "/etc/csf/csf.pignore" ]; then
-	cp -avf csf.cwp.pignore /etc/csf/csf.pignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.pignore" ]; then
+	cp -avf csf.cwp.pignore /etc/qhtlfirewall/qhtlfirewall.pignore
 fi
-if [ ! -e "/etc/csf/csf.rignore" ]; then
-	cp -avf csf.rignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rignore" ]; then
+	cp -avf csf.rignore /etc/qhtlfirewall/qhtlfirewall.rignore
 fi
-if [ ! -e "/etc/csf/csf.fignore" ]; then
-	cp -avf csf.fignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.fignore" ]; then
+	cp -avf csf.fignore /etc/qhtlfirewall/qhtlfirewall.fignore
 fi
-if [ ! -e "/etc/csf/csf.signore" ]; then
-	cp -avf csf.signore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.signore" ]; then
+	cp -avf csf.signore /etc/qhtlfirewall/qhtlfirewall.signore
 fi
-if [ ! -e "/etc/csf/csf.suignore" ]; then
-	cp -avf csf.suignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.suignore" ]; then
+	cp -avf csf.suignore /etc/qhtlfirewall/qhtlfirewall.suignore
 fi
-if [ ! -e "/etc/csf/csf.uidignore" ]; then
-	cp -avf csf.uidignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.uidignore" ]; then
+	cp -avf csf.uidignore /etc/qhtlfirewall/qhtlfirewall.uidignore
 fi
-if [ ! -e "/etc/csf/csf.mignore" ]; then
-	cp -avf csf.mignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.mignore" ]; then
+	cp -avf csf.mignore /etc/qhtlfirewall/qhtlfirewall.mignore
 fi
-if [ ! -e "/etc/csf/csf.sips" ]; then
-	cp -avf csf.sips /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.sips" ]; then
+	cp -avf csf.sips /etc/qhtlfirewall/qhtlfirewall.sips
 fi
-if [ ! -e "/etc/csf/csf.dyndns" ]; then
-	cp -avf csf.dyndns /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dyndns" ]; then
+	cp -avf csf.dyndns /etc/qhtlfirewall/qhtlfirewall.dyndns
 fi
-if [ ! -e "/etc/csf/csf.syslogusers" ]; then
-	cp -avf csf.syslogusers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogusers" ]; then
+	cp -avf csf.syslogusers /etc/qhtlfirewall/qhtlfirewall.syslogusers
 fi
-if [ ! -e "/etc/csf/csf.smtpauth" ]; then
-	cp -avf csf.smtpauth /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.smtpauth" ]; then
+	cp -avf csf.smtpauth /etc/qhtlfirewall/qhtlfirewall.smtpauth
 fi
-if [ ! -e "/etc/csf/csf.rblconf" ]; then
-	cp -avf csf.rblconf /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rblconf" ]; then
+	cp -avf csf.rblconf /etc/qhtlfirewall/qhtlfirewall.rblconf
 fi
-if [ ! -e "/etc/csf/csf.cloudflare" ]; then
-	cp -avf csf.cloudflare /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.cloudflare" ]; then
+	cp -avf csf.cloudflare /etc/qhtlfirewall/qhtlfirewall.cloudflare
 fi
 
-if [ ! -e "/usr/local/csf/tpl/alert.txt" ]; then
-	cp -avf alert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/alert.txt" ]; then
+	cp -avf alert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/reselleralert.txt" ]; then
-	cp -avf reselleralert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/reselleralert.txt" ]; then
+	cp -avf reselleralert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logalert.txt" ]; then
-	cp -avf logalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logalert.txt" ]; then
+	cp -avf logalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logfloodalert.txt" ]; then
-	cp -avf logfloodalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logfloodalert.txt" ]; then
+	cp -avf logfloodalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/syslogalert.txt" ]; then
-	cp -avf syslogalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/syslogalert.txt" ]; then
+	cp -avf syslogalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/integrityalert.txt" ]; then
-	cp -avf integrityalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/integrityalert.txt" ]; then
+	cp -avf integrityalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/exploitalert.txt" ]; then
-	cp -avf exploitalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/exploitalert.txt" ]; then
+	cp -avf exploitalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/queuealert.txt" ]; then
-	cp -avf queuealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/queuealert.txt" ]; then
+	cp -avf queuealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/modsecipdbalert.txt" ]; then
-	cp -avf modsecipdbalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/modsecipdbalert.txt" ]; then
+	cp -avf modsecipdbalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/tracking.txt" ]; then
-	cp -avf tracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/tracking.txt" ]; then
+	cp -avf tracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/connectiontracking.txt" ]; then
-	cp -avf connectiontracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/connectiontracking.txt" ]; then
+	cp -avf connectiontracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/processtracking.txt" ]; then
-	cp -avf processtracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/processtracking.txt" ]; then
+	cp -avf processtracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/accounttracking.txt" ]; then
-	cp -avf accounttracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/accounttracking.txt" ]; then
+	cp -avf accounttracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/usertracking.txt" ]; then
-	cp -avf usertracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/usertracking.txt" ]; then
+	cp -avf usertracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sshalert.txt" ]; then
-	cp -avf sshalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sshalert.txt" ]; then
+	cp -avf sshalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/webminalert.txt" ]; then
-	cp -avf webminalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/webminalert.txt" ]; then
+	cp -avf webminalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sualert.txt" ]; then
-	cp -avf sualert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sualert.txt" ]; then
+	cp -avf sualert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sudoalert.txt" ]; then
-	cp -avf sudoalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sudoalert.txt" ]; then
+	cp -avf sudoalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/consolealert.txt" ]; then
-	cp -avf consolealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/consolealert.txt" ]; then
+	cp -avf consolealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uialert.txt" ]; then
-	cp -avf uialert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uialert.txt" ]; then
+	cp -avf uialert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/cpanelalert.txt" ]; then
-	cp -avf cpanelalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/cpanelalert.txt" ]; then
+	cp -avf cpanelalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/scriptalert.txt" ]; then
-	cp -avf scriptalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/scriptalert.txt" ]; then
+	cp -avf scriptalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/relayalert.txt" ]; then
-	cp -avf relayalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/relayalert.txt" ]; then
+	cp -avf relayalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/filealert.txt" ]; then
-	cp -avf filealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/filealert.txt" ]; then
+	cp -avf filealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/watchalert.txt" ]; then
-	cp -avf watchalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/watchalert.txt" ]; then
+	cp -avf watchalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/loadalert.txt" ]; then
-	cp -avf loadalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/loadalert.txt" ]; then
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/.
 else
-	cp -avf loadalert.txt /usr/local/csf/tpl/loadalert.txt.new
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/loadalert.txt.new
 fi
-if [ ! -e "/usr/local/csf/tpl/resalert.txt" ]; then
-	cp -avf resalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/resalert.txt" ]; then
+	cp -avf resalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portscan.txt" ]; then
-	cp -avf portscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portscan.txt" ]; then
+	cp -avf portscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uidscan.txt" ]; then
-	cp -avf uidscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uidscan.txt" ]; then
+	cp -avf uidscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/permblock.txt" ]; then
-	cp -avf permblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/permblock.txt" ]; then
+	cp -avf permblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/netblock.txt" ]; then
-	cp -avf netblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/netblock.txt" ]; then
+	cp -avf netblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portknocking.txt" ]; then
-	cp -avf portknocking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portknocking.txt" ]; then
+	cp -avf portknocking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/forkbombalert.txt" ]; then
-	cp -avf forkbombalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/forkbombalert.txt" ]; then
+	cp -avf forkbombalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/recaptcha.txt" ]; then
-	cp -avf recaptcha.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/recaptcha.txt" ]; then
+	cp -avf recaptcha.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.main.txt" ]; then
-	cp -avf apache.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.main.txt" ]; then
+	cp -avf apache.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.http.txt" ]; then
-	cp -avf apache.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.http.txt" ]; then
+	cp -avf apache.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.https.txt" ]; then
-	cp -avf apache.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.https.txt" ]; then
+	cp -avf apache.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.main.txt" ]; then
-	cp -avf litespeed.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.main.txt" ]; then
+	cp -avf litespeed.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.http.txt" ]; then
-	cp -avf litespeed.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.http.txt" ]; then
+	cp -avf litespeed.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.https.txt" ]; then
-	cp -avf litespeed.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.https.txt" ]; then
+	cp -avf litespeed.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-cp -avf x-arf.txt /usr/local/csf/tpl/.
+cp -avf x-arf.txt /usr/local/qhtlfirewall/tpl/.
 
-if [ ! -e "/usr/local/csf/bin/regex.custom.pm" ]; then
-	cp -avf regex.custom.pm /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/regex.custom.pm" ]; then
+	cp -avf regex.custom.pm /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/usr/local/csf/bin/pt_deleted_action.pl" ]; then
-	cp -avf pt_deleted_action.pl /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/pt_deleted_action.pl" ]; then
+	cp -avf pt_deleted_action.pl /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/etc/csf/messenger" ]; then
-	cp -avf messenger /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/messenger" ]; then
+	cp -avf messenger /etc/qhtlfirewall/.
 fi
-if [ ! -e "/etc/csf/messenger/index.recaptcha.html" ]; then
-	cp -avf messenger/index.recaptcha.html /etc/csf/messenger/.
+if [ ! -e "/etc/qhtlfirewall/messenger/index.recaptcha.html" ]; then
+	cp -avf messenger/index.recaptcha.html /etc/qhtlfirewall/messenger/.
 fi
-if [ ! -e "/etc/csf/ui" ]; then
-	cp -avf ui /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/ui" ]; then
+	cp -avf ui /etc/qhtlfirewall/.
 fi
 if [ -e "/etc/cron.d/csfcron.sh" ]; then
-	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/csf-cron
+	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/qhtlfirewall-cron
 fi
-if [ ! -e "/etc/cron.d/csf-cron" ]; then
-	cp -avf csfcron.sh /etc/cron.d/csf-cron
+if [ ! -e "/etc/cron.d/qhtlfirewall-cron" ]; then
+	cp -avf qhtlfirewall.cron /etc/cron.d/qhtlfirewall-cron
 fi
 if [ -e "/etc/cron.d/lfdcron.sh" ]; then
-	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/lfd-cron
+	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/qhtlwaterfall-cron
 fi
-if [ ! -e "/etc/cron.d/lfd-cron" ]; then
-	cp -avf lfdcron.sh /etc/cron.d/lfd-cron
+if [ ! -e "/etc/cron.d/qhtlwaterfall-cron" ]; then
+	cp -avf qhtlwaterfall.cron /etc/cron.d/qhtlwaterfall-cron
 fi
-sed -i "s%/etc/init.d/lfd restart%/usr/sbin/csf --lfd restart%" /etc/cron.d/lfd-cron
-if [ -e "/usr/local/csf/bin/servercheck.pm" ]; then
-	rm -f /usr/local/csf/bin/servercheck.pm
+if [ -e "/usr/local/qhtlfirewall/bin/servercheck.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/servercheck.pm
 fi
-if [ -e "/etc/csf/cseui.pl" ]; then
-	rm -f /etc/csf/cseui.pl
+if [ -e "/etc/qhtlfirewall/cseui.pl" ]; then
+	rm -f /etc/qhtlfirewall/cseui.pl
 fi
-if [ -e "/etc/csf/csfui.pl" ]; then
-	rm -f /etc/csf/csfui.pl
+if [ -e "/etc/qhtlfirewall/csfui.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfui.pl
 fi
-if [ -e "/etc/csf/csfuir.pl" ]; then
-	rm -f /etc/csf/csfuir.pl
+if [ -e "/etc/qhtlfirewall/csfuir.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/cseui.pl" ]; then
-	rm -f /usr/local/csf/bin/cseui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/cseui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/cseui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfui.pl" ]; then
-	rm -f /usr/local/csf/bin/csfui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfuir.pl" ]; then
-	rm -f /usr/local/csf/bin/csfuir.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfuir.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/regex.pm" ]; then
-	rm -f /usr/local/csf/bin/regex.pm
+if [ -e "/usr/local/qhtlfirewall/bin/regex.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/regex.pm
 fi
 
 OLDVERSION=0
-if [ -e "/etc/csf/version.txt" ]; then
-    OLDVERSION=`head -n 1 /etc/csf/version.txt`
-fi
-
-rm -f /etc/csf/csf.pl /usr/sbin/csf /etc/csf/lfd.pl /usr/sbin/lfd
-chmod 700 csf.pl lfd.pl
-cp -avf csf.pl /usr/sbin/csf
-cp -avf lfd.pl /usr/sbin/lfd
-chmod 700 /usr/sbin/csf /usr/sbin/lfd
-ln -svf /usr/sbin/csf /etc/csf/csf.pl
-ln -svf /usr/sbin/lfd /etc/csf/lfd.pl
-ln -svf /usr/local/csf/bin/csftest.pl /etc/csf/
-ln -svf /usr/local/csf/bin/pt_deleted_action.pl /etc/csf/
-ln -svf /usr/local/csf/bin/remove_apf_bfd.sh /etc/csf/
-ln -svf /usr/local/csf/bin/uninstall.sh /etc/csf/
-ln -svf /usr/local/csf/bin/regex.custom.pm /etc/csf/
-ln -svf /usr/local/csf/lib/webmin /etc/csf/
-if [ ! -e "/etc/csf/alerts" ]; then
-    ln -svf /usr/local/csf/tpl /etc/csf/alerts
-fi
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/lfd
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/csf
-
-mkdir webmin/csf/images
-mkdir ui/images
-mkdir da/images
-mkdir interworx/images
+if [ -e "/etc/qhtlfirewall/version.txt" ]; then
+	OLDVERSION=`head -n 1 /etc/qhtlfirewall/version.txt`
+fi
+
+rm -f /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /usr/sbin/csf /usr/sbin/lfd
+chmod 700 qhtlfirewall.pl qhtlwaterfall.pl
+cp -avf qhtlfirewall.pl /usr/sbin/qhtlfirewall
+cp -avf qhtlwaterfall.pl /usr/sbin/qhtlwaterfall
+chmod 700 /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlfirewall
+
+mkdir -p webmin/csf/images
+mkdir -p ui/images
+mkdir -p da/images
+mkdir -p interworx/images
 
 cp -avf csf/* webmin/csf/images/
 cp -avf csf/* ui/images/
 cp -avf csf/* da/images/
 cp -avf csf/* interworx/images/
 
-cp -avf messenger/*.php /etc/csf/messenger/
-cp -avf uninstall.cwp.sh /usr/local/csf/bin/uninstall.sh
-cp -avf csftest.pl /usr/local/csf/bin/
-cp -avf remove_apf_bfd.sh /usr/local/csf/bin/
-cp -avf readme.txt /etc/csf/
-cp -avf sanity.txt /usr/local/csf/lib/
-cp -avf csf.rbls /usr/local/csf/lib/
-cp -avf restricted.txt /usr/local/csf/lib/
-cp -avf changelog.txt /etc/csf/
-cp -avf downloadservers /etc/csf/
-cp -avf install.txt /etc/csf/
-cp -avf version.txt /etc/csf/
-cp -avf license.txt /etc/csf/
-cp -avf webmin /usr/local/csf/lib/
-cp -avf ConfigServer /usr/local/csf/lib/
-cp -avf Net /usr/local/csf/lib/
-cp -avf Geo /usr/local/csf/lib/
-cp -avf Crypt /usr/local/csf/lib/
-cp -avf HTTP /usr/local/csf/lib/
-cp -avf JSON /usr/local/csf/lib/
-cp -avf version/* /usr/local/csf/lib/
-cp -avf csf.div /usr/local/csf/lib/
-cp -avf csfajaxtail.js /usr/local/csf/lib/
-cp -avf ui/images /etc/csf/ui/.
-cp -avf profiles /usr/local/csf/
-cp -avf csf.conf /usr/local/csf/profiles/reset_to_defaults.conf
-cp -avf lfd.logrotate /etc/logrotate.d/lfd
+cp -avf messenger/*.php /etc/qhtlfirewall/messenger/
+cp -avf uninstall.cwp.sh /usr/local/qhtlfirewall/bin/uninstall.sh
+cp -avf csftest.pl /usr/local/qhtlfirewall/bin/
+cp -avf remove_apf_bfd.sh /usr/local/qhtlfirewall/bin/
+cp -avf readme.txt /etc/qhtlfirewall/
+cp -avf sanity.txt /usr/local/qhtlfirewall/lib/
+cp -avf csf.rbls /usr/local/qhtlfirewall/lib/
+cp -avf restricted.txt /usr/local/qhtlfirewall/lib/
+cp -avf changelog.txt /etc/qhtlfirewall/
+cp -avf downloadservers /etc/qhtlfirewall/
+cp -avf install.txt /etc/qhtlfirewall/
+cp -avf version.txt /etc/qhtlfirewall/
+cp -avf license.txt /etc/qhtlfirewall/
+cp -avf webmin /usr/local/qhtlfirewall/lib/
+cp -avf ConfigServer /usr/local/qhtlfirewall/lib/
+cp -avf Net /usr/local/qhtlfirewall/lib/
+cp -avf Geo /usr/local/qhtlfirewall/lib/
+cp -avf Crypt /usr/local/qhtlfirewall/lib/
+cp -avf HTTP /usr/local/qhtlfirewall/lib/
+cp -avf JSON /usr/local/qhtlfirewall/lib/
+cp -avf version/* /usr/local/qhtlfirewall/lib/
+cp -avf csf.div /usr/local/qhtlfirewall/lib/
+cp -avf csfajaxtail.js /usr/local/qhtlfirewall/lib/
+cp -avf ui/images /etc/qhtlfirewall/ui/.
+cp -avf profiles /usr/local/qhtlfirewall/
+cp -avf csf.conf /usr/local/qhtlfirewall/profiles/reset_to_defaults.conf
+cp -avf qhtlwaterfall.logrotate /etc/logrotate.d/qhtlwaterfall
 chcon --reference /etc/logrotate.d /etc/logrotate.d/lfd
 
 if [ -e "/usr/local/cwpsrv/" ]; then
@@ -430,28 +420,27 @@ if [ -e "/usr/local/ispconfig/interface/web/csf/ispconfig_csf" ]; then
     rm -Rfv /usr/local/ispconfig/interface/web/csf/
 fi
 
-rm -fv /etc/csf/csf.spamhaus /etc/csf/csf.dshield /etc/csf/csf.tor /etc/csf/csf.bogon
+rm -fv /etc/qhtlfirewall/csf.spamhaus /etc/qhtlfirewall/csf.dshield /etc/qhtlfirewall/csf.tor /etc/qhtlfirewall/csf.bogon
 
 mkdir -p /usr/local/man/man1/
-cp -avf csf.1.txt /usr/local/man/man1/csf.1
-cp -avf csf.help /usr/local/csf/lib/
+cp -avf qhtlfirewall.1.txt /usr/local/man/man1/qhtlfirewall.1
+cp -avf qhtlfirewall.help /usr/local/qhtlfirewall/lib/
 chmod 755 /usr/local/man/
 chmod 755 /usr/local/man/man1/
-chmod 644 /usr/local/man/man1/csf.1
-
-chmod -R 600 /etc/csf
-chmod -R 600 /var/lib/csf
-chmod -R 600 /usr/local/csf/bin
-chmod -R 600 /usr/local/csf/lib
-chmod -R 600 /usr/local/csf/tpl
-chmod -R 600 /usr/local/csf/profiles
-chmod 600 /var/log/lfd.log*
-
-chmod -v 700 /usr/local/csf/bin/*.pl /usr/local/csf/bin/*.sh /usr/local/csf/bin/*.pm
-chmod -v 700 /etc/csf/*.pl /etc/csf/*.cgi /etc/csf/*.sh /etc/csf/*.php /etc/csf/*.py
-chmod -v 700 /etc/csf/webmin/csf/index.cgi
-chmod -v 644 /etc/cron.d/lfd-cron
-chmod -v 644 /etc/cron.d/csf-cron
+chmod 644 /usr/local/man/man1/qhtlfirewall.1
+
+chmod -R 600 /etc/qhtlfirewall
+chmod -R 600 /var/lib/qhtlfirewall
+chmod -R 600 /usr/local/qhtlfirewall/bin
+chmod -R 600 /usr/local/qhtlfirewall/lib
+chmod -R 600 /usr/local/qhtlfirewall/tpl
+chmod -R 600 /usr/local/qhtlfirewall/profiles
+chmod 600 /var/log/qhtlwaterfall.log*
+
+chmod -v 700 /usr/local/qhtlfirewall/bin/*.pl /usr/local/qhtlfirewall/bin/*.sh /usr/local/qhtlfirewall/bin/*.pm
+chmod -v 700 /usr/local/qhtlfirewall/lib/webmin/csf/index.cgi
+chmod -v 644 /etc/cron.d/qhtlwaterfall-cron
+chmod -v 644 /etc/cron.d/qhtlfirewall-cron
 
 cp -avf csget.pl /etc/cron.daily/csget
 chmod 700 /etc/cron.daily/csget
@@ -462,33 +451,32 @@ chmod -v 700 auto.cwp.pl
 
 if test `cat /proc/1/comm` = "systemd"
 then
-    if [ -e /etc/init.d/lfd ]; then
+	if [ -e /etc/init.d/qhtlwaterfall ] || [ -e /etc/init.d/lfd ]; then
         if [ -f /etc/redhat-release ]; then
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-            update-rc.d -f lfd remove
-            update-rc.d -f csf remove
+			update-rc.d -f qhtlwaterfall remove
+			update-rc.d -f qhtlfirewall remove
         elif [ -f /etc/gentoo-release ]; then
-            rc-update del lfd default
-            rc-update del csf default
+			rc-update del qhtlwaterfall default
+			rc-update del qhtlfirewall default
         elif [ -f /etc/slackware-version ]; then
-            rm -vf /etc/rc.d/rc3.d/S80csf
-            rm -vf /etc/rc.d/rc4.d/S80csf
-            rm -vf /etc/rc.d/rc5.d/S80csf
-            rm -vf /etc/rc.d/rc3.d/S85lfd
-            rm -vf /etc/rc.d/rc4.d/S85lfd
-            rm -vf /etc/rc.d/rc5.d/S85lfd
+			rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
         else
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         fi
-        rm -fv /etc/init.d/csf
-        rm -fv /etc/init.d/lfd
+		rm -fv /etc/init.d/qhtlfirewall /etc/init.d/qhtlwaterfall /etc/init.d/csf /etc/init.d/lfd
     fi
 
     mkdir -p /etc/systemd/system/
@@ -508,48 +496,48 @@ then
     systemctl stop firewalld
     systemctl mask firewalld
 else
-    cp -avf lfd.sh /etc/init.d/lfd
-    cp -avf csf.sh /etc/init.d/csf
-    chmod -v 755 /etc/init.d/lfd
-    chmod -v 755 /etc/init.d/csf
+	cp -avf qhtlwaterfall.sh /etc/init.d/qhtlwaterfall
+	cp -avf qhtlfirewall.sh /etc/init.d/qhtlfirewall
+	chmod -v 755 /etc/init.d/qhtlwaterfall
+	chmod -v 755 /etc/init.d/qhtlfirewall
 
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+	/sbin/chkconfig qhtlwaterfall on
+	/sbin/chkconfig qhtlfirewall on
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
-        update-rc.d lfd defaults 80 20
-        update-rc.d csf defaults 20 80
+	update-rc.d -f qhtlwaterfall remove
+	update-rc.d -f qhtlfirewall remove
+	update-rc.d qhtlwaterfall defaults 80 20
+	update-rc.d qhtlfirewall defaults 20 80
     elif [ -f /etc/gentoo-release ]; then
-        rc-update add lfd default
-        rc-update add csf default
+	rc-update add qhtlwaterfall default
+	rc-update add qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        ln -svf /etc/init.d/csf /etc/rc.d/rc3.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc4.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc5.d/S80csf
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc3.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc4.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc5.d/S85lfd
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc3.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc4.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc5.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc3.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc4.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
         /sbin/chkconfig lfd on
         /sbin/chkconfig csf on
     fi
 fi
 
-chown -Rf root:root /etc/csf /var/lib/csf /usr/local/csf
-chown -f root:root /usr/sbin/csf /usr/sbin/lfd /etc/logrotate.d/lfd /etc/cron.d/csf-cron /etc/cron.d/lfd-cron /usr/local/man/man1/csf.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/lfd /etc/init.d/csf
+chown -Rf root:root /etc/qhtlfirewall /var/lib/qhtlfirewall /usr/local/qhtlfirewall
+chown -f root:root /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /etc/logrotate.d/qhtlwaterfall /etc/cron.d/qhtlfirewall-cron /etc/cron.d/qhtlwaterfall-cron /usr/local/man/man1/qhtlfirewall.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/qhtlwaterfall /etc/init.d/qhtlfirewall
 
 cp -av cwp/csfofficial.php /usr/local/cwpsrv/htdocs/resources/admin/modules/
-cp -av cwp/csf.pl /usr/local/cwpsrv/htdocs/resources/admin/modules/
-chmod 700 /usr/local/cwpsrv/htdocs/resources/admin/modules/csf.pl
+cp -av cwp/qhtlfirewall.pl /usr/local/cwpsrv/htdocs/resources/admin/modules/
+chmod 700 /usr/local/cwpsrv/htdocs/resources/admin/modules/qhtlfirewall.pl
 cp -av cwp/ajax_csfframe.php /usr/local/cwpsrv/htdocs/resources/admin/addons/ajax/
 cp -av cwp/configserver.php /usr/local/cwpsrv/htdocs/resources/admin/include/
 mkdir -v -m 0600 /usr/local/cwpsrv/htdocs/admin/design/csf/
 cp -avf csf/* /usr/local/cwpsrv/htdocs/admin/design/csf/
 
-cd webmin ; tar -czf /usr/local/csf/csfwebmin.tgz ./*
-ln -svf /usr/local/csf/csfwebmin.tgz /etc/csf/
+cd webmin ; tar -czf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz ./*
+ln -svf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz /etc/qhtlfirewall/
 
 echo
 echo "Installation Completed"
diff --git a/qhtlfirewall/install.cyberpanel.sh b/qhtlfirewall/install.cyberpanel.sh
index 692f9cb..cc4a18a 100644
--- a/qhtlfirewall/install.cyberpanel.sh
+++ b/qhtlfirewall/install.cyberpanel.sh
@@ -21,414 +21,399 @@
 umask 0177
 
 if [ -e "/usr/local/cpanel/version" ]; then
-	echo "Running csf cPanel installer"
+	echo "Running qhtlfirewall cPanel installer"
 	echo
 	sh install.cpanel.sh
 	exit 0
 elif [ -e "/usr/local/directadmin/directadmin" ]; then
-	echo "Running csf DirectAdmin installer"
+	echo "Running qhtlfirewall DirectAdmin installer"
 	echo
 	sh install.directadmin.sh
 	exit 0
 fi
 
-echo "Installing csf and lfd"
+echo "Installing qhtlfirewall and qhtlwaterfall"
 echo
 
 echo "Check we're running as root"
 if [ ! `id -u` = 0 ]; then
 	echo
-	echo "FAILED: You have to be logged in as root (UID:0) to install csf"
+	echo "FAILED: You have to be logged in as root (UID:0) to install qhtlfirewall"
 	exit
 fi
 echo
 
-mkdir -v -m 0600 /etc/csf
-cp -avf install.txt /etc/csf/
+mkdir -v -m 0600 /etc/qhtlfirewall
+cp -avf install.txt /etc/qhtlfirewall/
 
 echo "Checking Perl modules..."
 chmod 700 os.pl
 RETURN=`./os.pl`
 if [ "$RETURN" = 1 ]; then
 	echo
-	echo "FAILED: You MUST install the missing perl modules above before you can install csf. See /etc/csf/install.txt for installation details."
-    echo
+	echo "FAILED: You MUST install the missing perl modules above before you can install QHTL. See /etc/qhtlfirewall/install.txt for installation details."
+	echo
 	exit
 else
     echo "...Perl modules OK"
     echo
 fi
 
-mkdir -v -m 0600 /etc/csf
-mkdir -v -m 0600 /var/lib/csf
-mkdir -v -m 0600 /var/lib/csf/backup
-mkdir -v -m 0600 /var/lib/csf/Geo
-mkdir -v -m 0600 /var/lib/csf/ui
-mkdir -v -m 0600 /var/lib/csf/stats
-mkdir -v -m 0600 /var/lib/csf/lock
-mkdir -v -m 0600 /var/lib/csf/webmin
-mkdir -v -m 0600 /var/lib/csf/zone
-mkdir -v -m 0600 /usr/local/csf
-mkdir -v -m 0600 /usr/local/csf/bin
-mkdir -v -m 0600 /usr/local/csf/lib
-mkdir -v -m 0600 /usr/local/csf/tpl
-
-if [ -e "/etc/csf/alert.txt" ]; then
+mkdir -v -m 0600 /var/lib/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall/backup
+mkdir -v -m 0600 /var/lib/qhtlfirewall/Geo
+mkdir -v -m 0600 /var/lib/qhtlfirewall/ui
+mkdir -v -m 0600 /var/lib/qhtlfirewall/stats
+mkdir -v -m 0600 /var/lib/qhtlfirewall/lock
+mkdir -v -m 0600 /var/lib/qhtlfirewall/webmin
+mkdir -v -m 0600 /var/lib/qhtlfirewall/zone
+mkdir -v -m 0600 /usr/local/qhtlfirewall
+mkdir -v -m 0600 /usr/local/qhtlfirewall/bin
+mkdir -v -m 0600 /usr/local/qhtlfirewall/lib
+mkdir -v -m 0600 /usr/local/qhtlfirewall/tpl
+
+if [ -e "/etc/qhtlfirewall/alert.txt" ]; then
 	sh migratedata.sh
 fi
 
-if [ ! -e "/etc/csf/csf.conf" ]; then
-	cp -avf csf.cyberpanel.conf /etc/csf/csf.conf
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.conf" ]; then
+	cp -avf csf.cyberpanel.conf /etc/qhtlfirewall/qhtlfirewall.conf
 fi
 
-if [ ! -d /var/lib/csf ]; then
-	mkdir -v -p -m 0600 /var/lib/csf
+if [ ! -d /var/lib/qhtlfirewall ]; then
+	mkdir -v -p -m 0600 /var/lib/qhtlfirewall
 fi
-if [ ! -d /usr/local/csf/lib ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/lib
+if [ ! -d /usr/local/qhtlfirewall/lib ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/lib
 fi
-if [ ! -d /usr/local/csf/bin ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/bin
+if [ ! -d /usr/local/qhtlfirewall/bin ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/bin
 fi
-if [ ! -d /usr/local/csf/tpl ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/tpl
+if [ ! -d /usr/local/qhtlfirewall/tpl ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/tpl
 fi
 
-if [ ! -e "/etc/csf/csf.allow" ]; then
-	cp -avf csf.cyberpanel.allow /etc/csf/csf.allow
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.allow" ]; then
+	cp -avf csf.cyberpanel.allow /etc/qhtlfirewall/qhtlfirewall.allow
 fi
-if [ ! -e "/etc/csf/csf.deny" ]; then
-	cp -avf csf.deny /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.deny" ]; then
+	cp -avf csf.deny /etc/qhtlfirewall/qhtlfirewall.deny
 fi
-if [ ! -e "/etc/csf/csf.redirect" ]; then
-	cp -avf csf.redirect /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.redirect" ]; then
+	cp -avf csf.redirect /etc/qhtlfirewall/qhtlfirewall.redirect
 fi
-if [ ! -e "/etc/csf/csf.resellers" ]; then
-	cp -avf csf.resellers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.resellers" ]; then
+	cp -avf csf.resellers /etc/qhtlfirewall/qhtlfirewall.resellers
 fi
-if [ ! -e "/etc/csf/csf.dirwatch" ]; then
-	cp -avf csf.dirwatch /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dirwatch" ]; then
+	cp -avf csf.dirwatch /etc/qhtlfirewall/qhtlfirewall.dirwatch
 fi
-if [ ! -e "/etc/csf/csf.syslogs" ]; then
-	cp -avf csf.syslogs /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogs" ]; then
+	cp -avf csf.syslogs /etc/qhtlfirewall/qhtlfirewall.syslogs
 fi
-if [ ! -e "/etc/csf/csf.logfiles" ]; then
-	cp -avf csf.logfiles /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logfiles" ]; then
+	cp -avf csf.logfiles /etc/qhtlfirewall/qhtlfirewall.logfiles
 fi
-if [ ! -e "/etc/csf/csf.logignore" ]; then
-	cp -avf csf.logignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logignore" ]; then
+	cp -avf csf.logignore /etc/qhtlfirewall/qhtlfirewall.logignore
 fi
-if [ ! -e "/etc/csf/csf.blocklists" ]; then
-	cp -avf csf.blocklists /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.blocklists" ]; then
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists
 else
-	cp -avf csf.blocklists /etc/csf/csf.blocklists.new
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists.new
 fi
-if [ ! -e "/etc/csf/csf.ignore" ]; then
-	cp -avf csf.cyberpanel.ignore /etc/csf/csf.ignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.ignore" ]; then
+	cp -avf csf.cyberpanel.ignore /etc/qhtlfirewall/qhtlfirewall.ignore
 fi
-if [ ! -e "/etc/csf/csf.pignore" ]; then
-	cp -avf csf.cyberpanel.pignore /etc/csf/csf.pignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.pignore" ]; then
+	cp -avf csf.cyberpanel.pignore /etc/qhtlfirewall/qhtlfirewall.pignore
 fi
-if [ ! -e "/etc/csf/csf.rignore" ]; then
-	cp -avf csf.rignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rignore" ]; then
+	cp -avf csf.rignore /etc/qhtlfirewall/qhtlfirewall.rignore
 fi
-if [ ! -e "/etc/csf/csf.fignore" ]; then
-	cp -avf csf.fignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.fignore" ]; then
+	cp -avf csf.fignore /etc/qhtlfirewall/qhtlfirewall.fignore
 fi
-if [ ! -e "/etc/csf/csf.signore" ]; then
-	cp -avf csf.signore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.signore" ]; then
+	cp -avf csf.signore /etc/qhtlfirewall/qhtlfirewall.signore
 fi
-if [ ! -e "/etc/csf/csf.suignore" ]; then
-	cp -avf csf.suignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.suignore" ]; then
+	cp -avf csf.suignore /etc/qhtlfirewall/qhtlfirewall.suignore
 fi
-if [ ! -e "/etc/csf/csf.uidignore" ]; then
-	cp -avf csf.uidignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.uidignore" ]; then
+	cp -avf csf.uidignore /etc/qhtlfirewall/qhtlfirewall.uidignore
 fi
-if [ ! -e "/etc/csf/csf.mignore" ]; then
-	cp -avf csf.mignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.mignore" ]; then
+	cp -avf csf.mignore /etc/qhtlfirewall/qhtlfirewall.mignore
 fi
-if [ ! -e "/etc/csf/csf.sips" ]; then
-	cp -avf csf.sips /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.sips" ]; then
+	cp -avf csf.sips /etc/qhtlfirewall/qhtlfirewall.sips
 fi
-if [ ! -e "/etc/csf/csf.dyndns" ]; then
-	cp -avf csf.dyndns /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dyndns" ]; then
+	cp -avf csf.dyndns /etc/qhtlfirewall/qhtlfirewall.dyndns
 fi
-if [ ! -e "/etc/csf/csf.syslogusers" ]; then
-	cp -avf csf.syslogusers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogusers" ]; then
+	cp -avf csf.syslogusers /etc/qhtlfirewall/qhtlfirewall.syslogusers
 fi
-if [ ! -e "/etc/csf/csf.smtpauth" ]; then
-	cp -avf csf.smtpauth /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.smtpauth" ]; then
+	cp -avf csf.smtpauth /etc/qhtlfirewall/qhtlfirewall.smtpauth
 fi
-if [ ! -e "/etc/csf/csf.rblconf" ]; then
-	cp -avf csf.rblconf /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rblconf" ]; then
+	cp -avf csf.rblconf /etc/qhtlfirewall/qhtlfirewall.rblconf
 fi
-if [ ! -e "/etc/csf/csf.cloudflare" ]; then
-	cp -avf csf.cloudflare /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.cloudflare" ]; then
+	cp -avf csf.cloudflare /etc/qhtlfirewall/qhtlfirewall.cloudflare
 fi
 
-if [ ! -e "/usr/local/csf/tpl/alert.txt" ]; then
-	cp -avf alert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/alert.txt" ]; then
+	cp -avf alert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/reselleralert.txt" ]; then
-	cp -avf reselleralert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/reselleralert.txt" ]; then
+	cp -avf reselleralert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logalert.txt" ]; then
-	cp -avf logalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logalert.txt" ]; then
+	cp -avf logalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logfloodalert.txt" ]; then
-	cp -avf logfloodalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logfloodalert.txt" ]; then
+	cp -avf logfloodalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/syslogalert.txt" ]; then
-	cp -avf syslogalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/syslogalert.txt" ]; then
+	cp -avf syslogalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/integrityalert.txt" ]; then
-	cp -avf integrityalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/integrityalert.txt" ]; then
+	cp -avf integrityalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/exploitalert.txt" ]; then
-	cp -avf exploitalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/exploitalert.txt" ]; then
+	cp -avf exploitalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/queuealert.txt" ]; then
-	cp -avf queuealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/queuealert.txt" ]; then
+	cp -avf queuealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/modsecipdbalert.txt" ]; then
-	cp -avf modsecipdbalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/modsecipdbalert.txt" ]; then
+	cp -avf modsecipdbalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/tracking.txt" ]; then
-	cp -avf tracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/tracking.txt" ]; then
+	cp -avf tracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/connectiontracking.txt" ]; then
-	cp -avf connectiontracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/connectiontracking.txt" ]; then
+	cp -avf connectiontracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/processtracking.txt" ]; then
-	cp -avf processtracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/processtracking.txt" ]; then
+	cp -avf processtracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/accounttracking.txt" ]; then
-	cp -avf accounttracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/accounttracking.txt" ]; then
+	cp -avf accounttracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/usertracking.txt" ]; then
-	cp -avf usertracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/usertracking.txt" ]; then
+	cp -avf usertracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sshalert.txt" ]; then
-	cp -avf sshalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sshalert.txt" ]; then
+	cp -avf sshalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/webminalert.txt" ]; then
-	cp -avf webminalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/webminalert.txt" ]; then
+	cp -avf webminalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sualert.txt" ]; then
-	cp -avf sualert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sualert.txt" ]; then
+	cp -avf sualert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sudoalert.txt" ]; then
-	cp -avf sudoalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sudoalert.txt" ]; then
+	cp -avf sudoalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/consolealert.txt" ]; then
-	cp -avf consolealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/consolealert.txt" ]; then
+	cp -avf consolealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uialert.txt" ]; then
-	cp -avf uialert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uialert.txt" ]; then
+	cp -avf uialert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/cpanelalert.txt" ]; then
-	cp -avf cpanelalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/cpanelalert.txt" ]; then
+	cp -avf cpanelalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/scriptalert.txt" ]; then
-	cp -avf scriptalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/scriptalert.txt" ]; then
+	cp -avf scriptalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/relayalert.txt" ]; then
-	cp -avf relayalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/relayalert.txt" ]; then
+	cp -avf relayalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/filealert.txt" ]; then
-	cp -avf filealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/filealert.txt" ]; then
+	cp -avf filealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/watchalert.txt" ]; then
-	cp -avf watchalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/watchalert.txt" ]; then
+	cp -avf watchalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/loadalert.txt" ]; then
-	cp -avf loadalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/loadalert.txt" ]; then
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/.
 else
-	cp -avf loadalert.txt /usr/local/csf/tpl/loadalert.txt.new
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/loadalert.txt.new
 fi
-if [ ! -e "/usr/local/csf/tpl/resalert.txt" ]; then
-	cp -avf resalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/resalert.txt" ]; then
+	cp -avf resalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portscan.txt" ]; then
-	cp -avf portscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portscan.txt" ]; then
+	cp -avf portscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uidscan.txt" ]; then
-	cp -avf uidscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uidscan.txt" ]; then
+	cp -avf uidscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/permblock.txt" ]; then
-	cp -avf permblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/permblock.txt" ]; then
+	cp -avf permblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/netblock.txt" ]; then
-	cp -avf netblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/netblock.txt" ]; then
+	cp -avf netblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portknocking.txt" ]; then
-	cp -avf portknocking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portknocking.txt" ]; then
+	cp -avf portknocking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/forkbombalert.txt" ]; then
-	cp -avf forkbombalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/forkbombalert.txt" ]; then
+	cp -avf forkbombalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/recaptcha.txt" ]; then
-	cp -avf recaptcha.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/recaptcha.txt" ]; then
+	cp -avf recaptcha.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.main.txt" ]; then
-	cp -avf apache.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.main.txt" ]; then
+	cp -avf apache.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.http.txt" ]; then
-	cp -avf apache.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.http.txt" ]; then
+	cp -avf apache.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.https.txt" ]; then
-	cp -avf apache.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.https.txt" ]; then
+	cp -avf apache.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.main.txt" ]; then
-	cp -avf litespeed.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.main.txt" ]; then
+	cp -avf litespeed.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.http.txt" ]; then
-	cp -avf litespeed.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.http.txt" ]; then
+	cp -avf litespeed.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.https.txt" ]; then
-	cp -avf litespeed.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.https.txt" ]; then
+	cp -avf litespeed.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-cp -avf x-arf.txt /usr/local/csf/tpl/.
+cp -avf x-arf.txt /usr/local/qhtlfirewall/tpl/.
 
-if [ ! -e "/usr/local/csf/bin/regex.custom.pm" ]; then
-	cp -avf regex.custom.pm /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/regex.custom.pm" ]; then
+	cp -avf regex.custom.pm /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/usr/local/csf/bin/pt_deleted_action.pl" ]; then
-	cp -avf pt_deleted_action.pl /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/pt_deleted_action.pl" ]; then
+	cp -avf pt_deleted_action.pl /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/etc/csf/messenger" ]; then
-	cp -avf messenger /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/messenger" ]; then
+	cp -avf messenger /etc/qhtlfirewall/.
 fi
-if [ ! -e "/etc/csf/messenger/index.recaptcha.html" ]; then
-	cp -avf messenger/index.recaptcha.html /etc/csf/messenger/.
+if [ ! -e "/etc/qhtlfirewall/messenger/index.recaptcha.html" ]; then
+	cp -avf messenger/index.recaptcha.html /etc/qhtlfirewall/messenger/.
 fi
-if [ ! -e "/etc/csf/ui" ]; then
-	cp -avf ui /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/ui" ]; then
+	cp -avf ui /etc/qhtlfirewall/.
 fi
 if [ -e "/etc/cron.d/csfcron.sh" ]; then
-	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/csf-cron
+	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/qhtlfirewall-cron
 fi
-if [ ! -e "/etc/cron.d/csf-cron" ]; then
-	cp -avf csfcron.sh /etc/cron.d/csf-cron
+if [ ! -e "/etc/cron.d/qhtlfirewall-cron" ]; then
+	cp -avf qhtlfirewall.cron /etc/cron.d/qhtlfirewall-cron
 fi
 if [ -e "/etc/cron.d/lfdcron.sh" ]; then
-	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/lfd-cron
+	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/qhtlwaterfall-cron
 fi
-if [ ! -e "/etc/cron.d/lfd-cron" ]; then
-	cp -avf lfdcron.sh /etc/cron.d/lfd-cron
+if [ ! -e "/etc/cron.d/qhtlwaterfall-cron" ]; then
+	cp -avf qhtlwaterfall.cron /etc/cron.d/qhtlwaterfall-cron
 fi
-sed -i "s%/etc/init.d/lfd restart%/usr/sbin/csf --lfd restart%" /etc/cron.d/lfd-cron
-if [ -e "/usr/local/csf/bin/servercheck.pm" ]; then
-	rm -f /usr/local/csf/bin/servercheck.pm
+if [ -e "/usr/local/qhtlfirewall/bin/servercheck.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/servercheck.pm
 fi
-if [ -e "/etc/csf/cseui.pl" ]; then
-	rm -f /etc/csf/cseui.pl
+if [ -e "/etc/qhtlfirewall/cseui.pl" ]; then
+	rm -f /etc/qhtlfirewall/cseui.pl
 fi
-if [ -e "/etc/csf/csfui.pl" ]; then
-	rm -f /etc/csf/csfui.pl
+if [ -e "/etc/qhtlfirewall/csfui.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfui.pl
 fi
-if [ -e "/etc/csf/csfuir.pl" ]; then
-	rm -f /etc/csf/csfuir.pl
+if [ -e "/etc/qhtlfirewall/csfuir.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/cseui.pl" ]; then
-	rm -f /usr/local/csf/bin/cseui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/cseui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/cseui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfui.pl" ]; then
-	rm -f /usr/local/csf/bin/csfui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfuir.pl" ]; then
-	rm -f /usr/local/csf/bin/csfuir.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfuir.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/regex.pm" ]; then
-	rm -f /usr/local/csf/bin/regex.pm
+if [ -e "/usr/local/qhtlfirewall/bin/regex.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/regex.pm
 fi
 
 OLDVERSION=0
-if [ -e "/etc/csf/version.txt" ]; then
-    OLDVERSION=`head -n 1 /etc/csf/version.txt`
-fi
-
-rm -f /etc/csf/csf.pl /usr/sbin/csf /etc/csf/lfd.pl /usr/sbin/lfd
-chmod 700 csf.pl lfd.pl
-cp -avf csf.pl /usr/sbin/csf
-cp -avf lfd.pl /usr/sbin/lfd
-chmod 700 /usr/sbin/csf /usr/sbin/lfd
-ln -svf /usr/sbin/csf /etc/csf/csf.pl
-ln -svf /usr/sbin/lfd /etc/csf/lfd.pl
-ln -svf /usr/local/csf/bin/csftest.pl /etc/csf/
-ln -svf /usr/local/csf/bin/pt_deleted_action.pl /etc/csf/
-ln -svf /usr/local/csf/bin/remove_apf_bfd.sh /etc/csf/
-ln -svf /usr/local/csf/bin/uninstall.sh /etc/csf/
-ln -svf /usr/local/csf/bin/regex.custom.pm /etc/csf/
-ln -svf /usr/local/csf/lib/webmin /etc/csf/
-if [ ! -e "/etc/csf/alerts" ]; then
-    ln -svf /usr/local/csf/tpl /etc/csf/alerts
-fi
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/lfd
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/csf
-
-mkdir webmin/csf/images
-mkdir ui/images
-mkdir da/images
-mkdir interworx/images
+if [ -e "/etc/qhtlfirewall/version.txt" ]; then
+	OLDVERSION=`head -n 1 /etc/qhtlfirewall/version.txt`
+fi
+
+rm -f /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /usr/sbin/csf /usr/sbin/lfd
+chmod 700 qhtlfirewall.pl qhtlwaterfall.pl
+cp -avf qhtlfirewall.pl /usr/sbin/qhtlfirewall
+cp -avf qhtlwaterfall.pl /usr/sbin/qhtlwaterfall
+chmod 700 /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlfirewall
+
+mkdir -p webmin/csf/images
+mkdir -p ui/images
+mkdir -p da/images
+mkdir -p interworx/images
 
 cp -avf csf/* webmin/csf/images/
 cp -avf csf/* ui/images/
 cp -avf csf/* da/images/
 cp -avf csf/* interworx/images/
 
-cp -avf messenger/*.php /etc/csf/messenger/
-cp -avf uninstall.cyberpanel.sh /usr/local/csf/bin/uninstall.sh
-cp -avf csftest.pl /usr/local/csf/bin/
-cp -avf remove_apf_bfd.sh /usr/local/csf/bin/
-cp -avf readme.txt /etc/csf/
-cp -avf sanity.txt /usr/local/csf/lib/
-cp -avf csf.rbls /usr/local/csf/lib/
-cp -avf restricted.txt /usr/local/csf/lib/
-cp -avf changelog.txt /etc/csf/
-cp -avf downloadservers /etc/csf/
-cp -avf install.txt /etc/csf/
-cp -avf version.txt /etc/csf/
-cp -avf license.txt /etc/csf/
-cp -avf webmin /usr/local/csf/lib/
-cp -avf ConfigServer /usr/local/csf/lib/
-cp -avf Net /usr/local/csf/lib/
-cp -avf Geo /usr/local/csf/lib/
-cp -avf Crypt /usr/local/csf/lib/
-cp -avf HTTP /usr/local/csf/lib/
-cp -avf JSON /usr/local/csf/lib/
-cp -avf version/* /usr/local/csf/lib/
-cp -avf csf.div /usr/local/csf/lib/
-cp -avf csfajaxtail.js /usr/local/csf/lib/
-cp -avf ui/images /etc/csf/ui/.
-cp -avf profiles /usr/local/csf/
-cp -avf csf.conf /usr/local/csf/profiles/reset_to_defaults.conf
-cp -avf lfd.logrotate /etc/logrotate.d/lfd
-chcon --reference /etc/logrotate.d /etc/logrotate.d/lfd
-cp -avf apf_stub.pl /etc/csf/
+cp -avf messenger/*.php /etc/qhtlfirewall/messenger/
+cp -avf uninstall.cyberpanel.sh /usr/local/qhtlfirewall/bin/uninstall.sh
+cp -avf csftest.pl /usr/local/qhtlfirewall/bin/
+cp -avf remove_apf_bfd.sh /usr/local/qhtlfirewall/bin/
+cp -avf readme.txt /etc/qhtlfirewall/
+cp -avf sanity.txt /usr/local/qhtlfirewall/lib/
+cp -avf csf.rbls /usr/local/qhtlfirewall/lib/
+cp -avf restricted.txt /usr/local/qhtlfirewall/lib/
+cp -avf changelog.txt /etc/qhtlfirewall/
+cp -avf downloadservers /etc/qhtlfirewall/
+cp -avf install.txt /etc/qhtlfirewall/
+cp -avf version.txt /etc/qhtlfirewall/
+cp -avf license.txt /etc/qhtlfirewall/
+cp -avf webmin /usr/local/qhtlfirewall/lib/
+cp -avf ConfigServer /usr/local/qhtlfirewall/lib/
+cp -avf Net /usr/local/qhtlfirewall/lib/
+cp -avf Geo /usr/local/qhtlfirewall/lib/
+cp -avf Crypt /usr/local/qhtlfirewall/lib/
+cp -avf HTTP /usr/local/qhtlfirewall/lib/
+cp -avf JSON /usr/local/qhtlfirewall/lib/
+cp -avf version/* /usr/local/qhtlfirewall/lib/
+cp -avf csf.div /usr/local/qhtlfirewall/lib/
+cp -avf csfajaxtail.js /usr/local/qhtlfirewall/lib/
+cp -avf ui/images /etc/qhtlfirewall/ui/.
+cp -avf profiles /usr/local/qhtlfirewall/
+cp -avf csf.conf /usr/local/qhtlfirewall/profiles/reset_to_defaults.conf
+cp -avf qhtlwaterfall.logrotate /etc/logrotate.d/qhtlwaterfall
+cp -avf apf_stub.pl /etc/qhtlfirewall/
 
 rm -fv /etc/csf/csf.spamhaus /etc/csf/csf.dshield /etc/csf/csf.tor /etc/csf/csf.bogon
 
 mkdir -p /usr/local/man/man1/
-cp -avf csf.1.txt /usr/local/man/man1/csf.1
-cp -avf csf.help /usr/local/csf/lib/
+cp -avf qhtlfirewall.1.txt /usr/local/man/man1/qhtlfirewall.1
+cp -avf qhtlfirewall.help /usr/local/qhtlfirewall/lib/
 chmod 755 /usr/local/man/
 chmod 755 /usr/local/man/man1/
-chmod 644 /usr/local/man/man1/csf.1
-
-chmod -R 600 /etc/csf
-chmod -R 600 /var/lib/csf
-chmod -R 600 /usr/local/csf/bin
-chmod -R 600 /usr/local/csf/lib
-chmod -R 600 /usr/local/csf/tpl
-chmod -R 600 /usr/local/csf/profiles
-chmod 600 /var/log/lfd.log*
-
-chmod -v 700 /usr/local/csf/bin/*.pl /usr/local/csf/bin/*.sh /usr/local/csf/bin/*.pm
-chmod -v 700 /etc/csf/*.pl /etc/csf/*.cgi /etc/csf/*.sh /etc/csf/*.php /etc/csf/*.py
-chmod -v 700 /etc/csf/webmin/csf/index.cgi
-chmod -v 644 /etc/cron.d/lfd-cron
-chmod -v 644 /etc/cron.d/csf-cron
+chmod 644 /usr/local/man/man1/qhtlfirewall.1
+
+chmod -R 600 /etc/qhtlfirewall
+chmod -R 600 /var/lib/qhtlfirewall
+chmod -R 600 /usr/local/qhtlfirewall/bin
+chmod -R 600 /usr/local/qhtlfirewall/lib
+chmod -R 600 /usr/local/qhtlfirewall/tpl
+chmod -R 600 /usr/local/qhtlfirewall/profiles
+chmod 600 /var/log/qhtlwaterfall.log*
+
+chmod -v 700 /usr/local/qhtlfirewall/bin/*.pl /usr/local/qhtlfirewall/bin/*.sh /usr/local/qhtlfirewall/bin/*.pm
+chmod -v 700 /usr/local/qhtlfirewall/lib/webmin/csf/index.cgi
+chmod -v 644 /etc/cron.d/qhtlwaterfall-cron
+chmod -v 644 /etc/cron.d/qhtlfirewall-cron
 
 cp -avf csget.pl /etc/cron.daily/csget
 chmod 700 /etc/cron.daily/csget
@@ -439,91 +424,90 @@ chmod -v 700 auto.cyberpanel.pl
 
 if test `cat /proc/1/comm` = "systemd"
 then
-    if [ -e /etc/init.d/lfd ]; then
+	if [ -e /etc/init.d/qhtlwaterfall ] || [ -e /etc/init.d/lfd ]; then
         if [ -f /etc/redhat-release ]; then
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-            update-rc.d -f lfd remove
-            update-rc.d -f csf remove
+			update-rc.d -f qhtlwaterfall remove
+			update-rc.d -f qhtlfirewall remove
         elif [ -f /etc/gentoo-release ]; then
-            rc-update del lfd default
-            rc-update del csf default
+			rc-update del qhtlwaterfall default
+			rc-update del qhtlfirewall default
         elif [ -f /etc/slackware-version ]; then
-            rm -vf /etc/rc.d/rc3.d/S80csf
-            rm -vf /etc/rc.d/rc4.d/S80csf
-            rm -vf /etc/rc.d/rc5.d/S80csf
-            rm -vf /etc/rc.d/rc3.d/S85lfd
-            rm -vf /etc/rc.d/rc4.d/S85lfd
-            rm -vf /etc/rc.d/rc5.d/S85lfd
+			rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
         else
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         fi
-        rm -fv /etc/init.d/csf
-        rm -fv /etc/init.d/lfd
+		rm -fv /etc/init.d/qhtlfirewall /etc/init.d/qhtlwaterfall /etc/init.d/csf /etc/init.d/lfd
     fi
 
-    mkdir -p /etc/systemd/system/
-    mkdir -p /usr/lib/systemd/system/
+	mkdir -p /etc/systemd/system/
+	mkdir -p /usr/lib/systemd/system/
 	cp -avf qhtlwaterfall.service /usr/lib/systemd/system/
 	cp -avf qhtlfirewall.service /usr/lib/systemd/system/
 
 	chcon -h system_u:object_r:systemd_unit_file_t:s0 /usr/lib/systemd/system/qhtlwaterfall.service
 	chcon -h system_u:object_r:systemd_unit_file_t:s0 /usr/lib/systemd/system/qhtlfirewall.service
 
-    systemctl daemon-reload
+	systemctl daemon-reload
 
 	systemctl enable qhtlfirewall.service
 	systemctl enable qhtlwaterfall.service
 
-    systemctl disable firewalld
-    systemctl stop firewalld
-    systemctl mask firewalld
+	systemctl disable firewalld
+	systemctl stop firewalld
+	systemctl mask firewalld
 else
-    cp -avf lfd.sh /etc/init.d/lfd
-    cp -avf csf.sh /etc/init.d/csf
-    chmod -v 755 /etc/init.d/lfd
-    chmod -v 755 /etc/init.d/csf
+	cp -avf qhtlwaterfall.sh /etc/init.d/qhtlwaterfall
+	cp -avf qhtlfirewall.sh /etc/init.d/qhtlfirewall
+	chmod -v 755 /etc/init.d/qhtlwaterfall
+	chmod -v 755 /etc/init.d/qhtlfirewall
 
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+	/sbin/chkconfig qhtlwaterfall on
+	/sbin/chkconfig qhtlfirewall on
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
-        update-rc.d lfd defaults 80 20
-        update-rc.d csf defaults 20 80
+	update-rc.d -f qhtlwaterfall remove
+	update-rc.d -f qhtlfirewall remove
+	update-rc.d qhtlwaterfall defaults 80 20
+	update-rc.d qhtlfirewall defaults 20 80
     elif [ -f /etc/gentoo-release ]; then
-        rc-update add lfd default
-        rc-update add csf default
+	rc-update add qhtlwaterfall default
+	rc-update add qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        ln -svf /etc/init.d/csf /etc/rc.d/rc3.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc4.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc5.d/S80csf
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc3.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc4.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc5.d/S85lfd
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc3.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc4.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc5.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc3.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc4.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+	/sbin/chkconfig qhtlwaterfall on
+	/sbin/chkconfig qhtlfirewall on
     fi
 fi
 
-chown -Rf root:root /etc/csf /var/lib/csf /usr/local/csf
-chown -f root:root /usr/sbin/csf /usr/sbin/lfd /etc/logrotate.d/lfd /etc/cron.d/csf-cron /etc/cron.d/lfd-cron /usr/local/man/man1/csf.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/lfd /etc/init.d/csf
+chown -Rf root:root /etc/qhtlfirewall /var/lib/qhtlfirewall /usr/local/qhtlfirewall
+chown -f root:root /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /etc/logrotate.d/qhtlwaterfall /etc/cron.d/qhtlfirewall-cron /etc/cron.d/qhtlwaterfall-cron /usr/local/man/man1/qhtlfirewall.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/qhtlwaterfall /etc/init.d/qhtlfirewall
 
 mkdir -vp /usr/local/CyberCP/public/static/configservercsf/
 cp -avf csf/* /usr/local/CyberCP/public/static/configservercsf/
 cp -avf csf/* cyberpanel/configservercsf/static/configservercsf/
 chmod 755 /usr/local/CyberCP/public/static/configservercsf/
 
-cp cyberpanel/cyberpanel.pl /usr/local/csf/bin/
-chmod 700 /usr/local/csf/bin/cyberpanel.pl
+cp cyberpanel/cyberpanel.pl /usr/local/qhtlfirewall/bin/
+chmod 700 /usr/local/qhtlfirewall/bin/cyberpanel.pl
 cp -avf cyberpanel/configservercsf /usr/local/CyberCP/
 
 mkdir /home/cyberpanel/plugins
diff --git a/qhtlfirewall/install.directadmin.sh b/qhtlfirewall/install.directadmin.sh
index f728830..b314383 100644
--- a/qhtlfirewall/install.directadmin.sh
+++ b/qhtlfirewall/install.directadmin.sh
@@ -20,26 +20,26 @@
 
 umask 0177
 
-echo "Installing csf and lfd"
+echo "Installing qhtlfirewall and qhtlwaterfall"
 echo
 
 echo "Check we're running as root"
 if [ ! `id -u` = 0 ]; then
 	echo
-	echo "FAILED: You have to be logged in as root (UID:0) to install csf"
+	echo "FAILED: You have to be logged in as root (UID:0) to install qhtlfirewall"
 	exit
 fi
 echo
 
-mkdir -v -m 0600 /etc/csf
-cp -avf install.txt /etc/csf/
+mkdir -v -m 0600 /etc/qhtlfirewall
+cp -avf install.txt /etc/qhtlfirewall/
 
 echo "Checking Perl modules..."
 chmod 700 os.pl
 RETURN=`./os.pl`
 if [ "$RETURN" = 1 ]; then
 	echo
-	echo "FAILED: You MUST install the missing perl modules above before you can install csf. See /etc/csf/install.txt for installation details."
+	echo "FAILED: You MUST install the missing perl modules above before you can install QHTL. See /etc/qhtlfirewall/install.txt for installation details."
     echo
 	exit
 else
@@ -47,373 +47,361 @@ else
     echo
 fi
 
-mkdir -v -m 0600 /var/lib/csf
-mkdir -v -m 0600 /var/lib/csf/backup
-mkdir -v -m 0600 /var/lib/csf/Geo
-mkdir -v -m 0600 /var/lib/csf/ui
-mkdir -v -m 0600 /var/lib/csf/stats
-mkdir -v -m 0600 /var/lib/csf/lock
-mkdir -v -m 0600 /var/lib/csf/webmin
-mkdir -v -m 0600 /var/lib/csf/zone
-mkdir -v -m 0600 /usr/local/csf
-mkdir -v -m 0600 /usr/local/csf/bin
-mkdir -v -m 0600 /usr/local/csf/lib
-mkdir -v -m 0600 /usr/local/csf/tpl
+mkdir -v -m 0600 /var/lib/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall/backup
+mkdir -v -m 0600 /var/lib/qhtlfirewall/Geo
+mkdir -v -m 0600 /var/lib/qhtlfirewall/ui
+mkdir -v -m 0600 /var/lib/qhtlfirewall/stats
+mkdir -v -m 0600 /var/lib/qhtlfirewall/lock
+mkdir -v -m 0600 /var/lib/qhtlfirewall/webmin
+mkdir -v -m 0600 /var/lib/qhtlfirewall/zone
+mkdir -v -m 0600 /usr/local/qhtlfirewall
+mkdir -v -m 0600 /usr/local/qhtlfirewall/bin
+mkdir -v -m 0600 /usr/local/qhtlfirewall/lib
+mkdir -v -m 0600 /usr/local/qhtlfirewall/tpl
 
 if [ -e "/etc/csf/alert.txt" ]; then
 	sh migratedata.sh
 fi
 
-if [ ! -e "/etc/csf/csf.conf" ]; then
-	cp -avf csf.directadmin.conf /etc/csf/csf.conf
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.conf" ]; then
+	cp -avf csf.directadmin.conf /etc/qhtlfirewall/qhtlfirewall.conf
 fi
 
-if [ ! -d /var/lib/csf ]; then
-	mkdir -v -p -m 0600 /var/lib/csf
+if [ ! -d /var/lib/qhtlfirewall ]; then
+	mkdir -v -p -m 0600 /var/lib/qhtlfirewall
 fi
-if [ ! -d /usr/local/csf/lib ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/lib
+if [ ! -d /usr/local/qhtlfirewall/lib ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/lib
 fi
-if [ ! -d /usr/local/csf/bin ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/bin
+if [ ! -d /usr/local/qhtlfirewall/bin ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/bin
 fi
-if [ ! -d /usr/local/csf/tpl ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/tpl
+if [ ! -d /usr/local/qhtlfirewall/tpl ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/tpl
 fi
 
-if [ ! -e "/etc/csf/csf.allow" ]; then
-	cp -avf csf.directadmin.allow /etc/csf/csf.allow
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.allow" ]; then
+	cp -avf csf.directadmin.allow /etc/qhtlfirewall/qhtlfirewall.allow
 fi
-if [ ! -e "/etc/csf/csf.deny" ]; then
-	cp -avf csf.deny /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.deny" ]; then
+	cp -avf csf.deny /etc/qhtlfirewall/qhtlfirewall.deny
 fi
-if [ ! -e "/etc/csf/csf.redirect" ]; then
-	cp -avf csf.redirect /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.redirect" ]; then
+	cp -avf csf.redirect /etc/qhtlfirewall/qhtlfirewall.redirect
 fi
-if [ ! -e "/etc/csf/csf.resellers" ]; then
-	cp -avf csf.resellers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.resellers" ]; then
+	cp -avf csf.resellers /etc/qhtlfirewall/qhtlfirewall.resellers
 fi
-if [ ! -e "/etc/csf/csf.dirwatch" ]; then
-	cp -avf csf.dirwatch /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dirwatch" ]; then
+	cp -avf csf.dirwatch /etc/qhtlfirewall/qhtlfirewall.dirwatch
 fi
-if [ ! -e "/etc/csf/csf.syslogs" ]; then
-	cp -avf csf.syslogs /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogs" ]; then
+	cp -avf csf.syslogs /etc/qhtlfirewall/qhtlfirewall.syslogs
 fi
-if [ ! -e "/etc/csf/csf.logfiles" ]; then
-	cp -avf csf.logfiles /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logfiles" ]; then
+	cp -avf csf.logfiles /etc/qhtlfirewall/qhtlfirewall.logfiles
 fi
-if [ ! -e "/etc/csf/csf.logignore" ]; then
-	cp -avf csf.logignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logignore" ]; then
+	cp -avf csf.logignore /etc/qhtlfirewall/qhtlfirewall.logignore
 fi
-if [ ! -e "/etc/csf/csf.blocklists" ]; then
-	cp -avf csf.blocklists /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.blocklists" ]; then
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists
 else
-	cp -avf csf.blocklists /etc/csf/csf.blocklists.new
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists.new
 fi
-if [ ! -e "/etc/csf/csf.ignore" ]; then
-	cp -avf csf.directadmin.ignore /etc/csf/csf.ignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.ignore" ]; then
+	cp -avf csf.directadmin.ignore /etc/qhtlfirewall/qhtlfirewall.ignore
 fi
-if [ ! -e "/etc/csf/csf.pignore" ]; then
-	cp -avf csf.directadmin.pignore /etc/csf/csf.pignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.pignore" ]; then
+	cp -avf csf.directadmin.pignore /etc/qhtlfirewall/qhtlfirewall.pignore
 fi
-if [ ! -e "/etc/csf/csf.rignore" ]; then
-	cp -avf csf.rignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rignore" ]; then
+	cp -avf csf.rignore /etc/qhtlfirewall/qhtlfirewall.rignore
 fi
-if [ ! -e "/etc/csf/csf.fignore" ]; then
-	cp -avf csf.fignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.fignore" ]; then
+	cp -avf csf.fignore /etc/qhtlfirewall/qhtlfirewall.fignore
 fi
-if [ ! -e "/etc/csf/csf.signore" ]; then
-	cp -avf csf.signore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.signore" ]; then
+	cp -avf csf.signore /etc/qhtlfirewall/qhtlfirewall.signore
 fi
-if [ ! -e "/etc/csf/csf.suignore" ]; then
-	cp -avf csf.suignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.suignore" ]; then
+	cp -avf csf.suignore /etc/qhtlfirewall/qhtlfirewall.suignore
 fi
-if [ ! -e "/etc/csf/csf.uidignore" ]; then
-	cp -avf csf.uidignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.uidignore" ]; then
+	cp -avf csf.uidignore /etc/qhtlfirewall/qhtlfirewall.uidignore
 fi
-if [ ! -e "/etc/csf/csf.mignore" ]; then
-	cp -avf csf.mignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.mignore" ]; then
+	cp -avf csf.mignore /etc/qhtlfirewall/qhtlfirewall.mignore
 fi
-if [ ! -e "/etc/csf/csf.sips" ]; then
-	cp -avf csf.sips /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.sips" ]; then
+	cp -avf csf.sips /etc/qhtlfirewall/qhtlfirewall.sips
 fi
-if [ ! -e "/etc/csf/csf.dyndns" ]; then
-	cp -avf csf.dyndns /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dyndns" ]; then
+	cp -avf csf.dyndns /etc/qhtlfirewall/qhtlfirewall.dyndns
 fi
-if [ ! -e "/etc/csf/csf.syslogusers" ]; then
-	cp -avf csf.syslogusers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogusers" ]; then
+	cp -avf csf.syslogusers /etc/qhtlfirewall/qhtlfirewall.syslogusers
 fi
-if [ ! -e "/etc/csf/csf.smtpauth" ]; then
-	cp -avf csf.smtpauth /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.smtpauth" ]; then
+	cp -avf csf.smtpauth /etc/qhtlfirewall/qhtlfirewall.smtpauth
 fi
-if [ ! -e "/etc/csf/csf.rblconf" ]; then
-	cp -avf csf.rblconf /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rblconf" ]; then
+	cp -avf csf.rblconf /etc/qhtlfirewall/qhtlfirewall.rblconf
 fi
-if [ ! -e "/etc/csf/csf.cloudflare" ]; then
-	cp -avf csf.cloudflare /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.cloudflare" ]; then
+	cp -avf csf.cloudflare /etc/qhtlfirewall/qhtlfirewall.cloudflare
 fi
 
-if [ ! -e "/usr/local/csf/tpl/alert.txt" ]; then
-	cp -avf alert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/alert.txt" ]; then
+	cp -avf alert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/reselleralert.txt" ]; then
-	cp -avf reselleralert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/reselleralert.txt" ]; then
+	cp -avf reselleralert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logalert.txt" ]; then
-	cp -avf logalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logalert.txt" ]; then
+	cp -avf logalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logfloodalert.txt" ]; then
-	cp -avf logfloodalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logfloodalert.txt" ]; then
+	cp -avf logfloodalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/syslogalert.txt" ]; then
-	cp -avf syslogalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/syslogalert.txt" ]; then
+	cp -avf syslogalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/integrityalert.txt" ]; then
-	cp -avf integrityalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/integrityalert.txt" ]; then
+	cp -avf integrityalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/exploitalert.txt" ]; then
-	cp -avf exploitalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/exploitalert.txt" ]; then
+	cp -avf exploitalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/queuealert.txt" ]; then
-	cp -avf queuealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/queuealert.txt" ]; then
+	cp -avf queuealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/modsecipdbalert.txt" ]; then
-	cp -avf modsecipdbalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/modsecipdbalert.txt" ]; then
+	cp -avf modsecipdbalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/tracking.txt" ]; then
-	cp -avf tracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/tracking.txt" ]; then
+	cp -avf tracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/connectiontracking.txt" ]; then
-	cp -avf connectiontracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/connectiontracking.txt" ]; then
+	cp -avf connectiontracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/processtracking.txt" ]; then
-	cp -avf processtracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/processtracking.txt" ]; then
+	cp -avf processtracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/accounttracking.txt" ]; then
-	cp -avf accounttracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/accounttracking.txt" ]; then
+	cp -avf accounttracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/usertracking.txt" ]; then
-	cp -avf usertracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/usertracking.txt" ]; then
+	cp -avf usertracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sshalert.txt" ]; then
-	cp -avf sshalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sshalert.txt" ]; then
+	cp -avf sshalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/webminalert.txt" ]; then
-	cp -avf webminalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/webminalert.txt" ]; then
+	cp -avf webminalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sualert.txt" ]; then
-	cp -avf sualert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sualert.txt" ]; then
+	cp -avf sualert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sudoalert.txt" ]; then
-	cp -avf sudoalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sudoalert.txt" ]; then
+	cp -avf sudoalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/consolealert.txt" ]; then
-	cp -avf consolealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/consolealert.txt" ]; then
+	cp -avf consolealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uialert.txt" ]; then
-	cp -avf uialert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uialert.txt" ]; then
+	cp -avf uialert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/cpanelalert.txt" ]; then
-	cp -avf cpanelalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/cpanelalert.txt" ]; then
+	cp -avf cpanelalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/scriptalert.txt" ]; then
-	cp -avf scriptalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/scriptalert.txt" ]; then
+	cp -avf scriptalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/relayalert.txt" ]; then
-	cp -avf relayalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/relayalert.txt" ]; then
+	cp -avf relayalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/filealert.txt" ]; then
-	cp -avf filealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/filealert.txt" ]; then
+	cp -avf filealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/watchalert.txt" ]; then
-	cp -avf watchalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/watchalert.txt" ]; then
+	cp -avf watchalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/loadalert.txt" ]; then
-	cp -avf loadalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/loadalert.txt" ]; then
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/.
 else
-	cp -avf loadalert.txt /usr/local/csf/tpl/loadalert.txt.new
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/loadalert.txt.new
 fi
-if [ ! -e "/usr/local/csf/tpl/resalert.txt" ]; then
-	cp -avf resalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/resalert.txt" ]; then
+	cp -avf resalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portscan.txt" ]; then
-	cp -avf portscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portscan.txt" ]; then
+	cp -avf portscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uidscan.txt" ]; then
-	cp -avf uidscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uidscan.txt" ]; then
+	cp -avf uidscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/permblock.txt" ]; then
-	cp -avf permblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/permblock.txt" ]; then
+	cp -avf permblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/netblock.txt" ]; then
-	cp -avf netblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/netblock.txt" ]; then
+	cp -avf netblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portknocking.txt" ]; then
-	cp -avf portknocking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portknocking.txt" ]; then
+	cp -avf portknocking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/forkbombalert.txt" ]; then
-	cp -avf forkbombalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/forkbombalert.txt" ]; then
+	cp -avf forkbombalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/recaptcha.txt" ]; then
-	cp -avf recaptcha.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/recaptcha.txt" ]; then
+	cp -avf recaptcha.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.main.txt" ]; then
-	cp -avf apache.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.main.txt" ]; then
+	cp -avf apache.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.http.txt" ]; then
-	cp -avf apache.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.http.txt" ]; then
+	cp -avf apache.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.https.txt" ]; then
-	cp -avf apache.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.https.txt" ]; then
+	cp -avf apache.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.main.txt" ]; then
-	cp -avf litespeed.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.main.txt" ]; then
+	cp -avf litespeed.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.http.txt" ]; then
-	cp -avf litespeed.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.http.txt" ]; then
+	cp -avf litespeed.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.https.txt" ]; then
-	cp -avf litespeed.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.https.txt" ]; then
+	cp -avf litespeed.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-cp -avf x-arf.txt /usr/local/csf/tpl/.
+cp -avf x-arf.txt /usr/local/qhtlfirewall/tpl/.
 
-if [ ! -e "/usr/local/csf/bin/regex.custom.pm" ]; then
-	cp -avf regex.custom.pm /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/regex.custom.pm" ]; then
+	cp -avf regex.custom.pm /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/usr/local/csf/bin/pt_deleted_action.pl" ]; then
-	cp -avf pt_deleted_action.pl /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/pt_deleted_action.pl" ]; then
+	cp -avf pt_deleted_action.pl /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/etc/csf/messenger" ]; then
-	cp -avf messenger /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/messenger" ]; then
+	cp -avf messenger /etc/qhtlfirewall/.
 fi
-if [ ! -e "/etc/csf/messenger/index.recaptcha.html" ]; then
-	cp -avf messenger/index.recaptcha.html /etc/csf/messenger/.
+if [ ! -e "/etc/qhtlfirewall/messenger/index.recaptcha.html" ]; then
+	cp -avf messenger/index.recaptcha.html /etc/qhtlfirewall/messenger/.
 fi
-if [ ! -e "/etc/csf/ui" ]; then
-	cp -avf ui /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/ui" ]; then
+	cp -avf ui /etc/qhtlfirewall/.
 fi
 if [ -e "/etc/cron.d/csfcron.sh" ]; then
-	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/csf-cron
+	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/qhtlfirewall-cron
 fi
-if [ ! -e "/etc/cron.d/csf-cron" ]; then
-	cp -avf csfcron.sh /etc/cron.d/csf-cron
+if [ ! -e "/etc/cron.d/qhtlfirewall-cron" ]; then
+	cp -avf qhtlfirewall.cron /etc/cron.d/qhtlfirewall-cron
 fi
 if [ -e "/etc/cron.d/lfdcron.sh" ]; then
-	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/lfd-cron
+	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/qhtlwaterfall-cron
 fi
-if [ ! -e "/etc/cron.d/lfd-cron" ]; then
-	cp -avf lfdcron.sh /etc/cron.d/lfd-cron
+if [ ! -e "/etc/cron.d/qhtlwaterfall-cron" ]; then
+	cp -avf qhtlwaterfall.cron /etc/cron.d/qhtlwaterfall-cron
 fi
-sed -i "s%/etc/init.d/lfd restart%/usr/sbin/csf --lfd restart%" /etc/cron.d/lfd-cron
-if [ -e "/usr/local/csf/bin/servercheck.pm" ]; then
-	rm -f /usr/local/csf/bin/servercheck.pm
+if [ -e "/usr/local/qhtlfirewall/bin/servercheck.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/servercheck.pm
 fi
-if [ -e "/etc/csf/cseui.pl" ]; then
-	rm -f /etc/csf/cseui.pl
+if [ -e "/etc/qhtlfirewall/cseui.pl" ]; then
+	rm -f /etc/qhtlfirewall/cseui.pl
 fi
-if [ -e "/etc/csf/csfui.pl" ]; then
-	rm -f /etc/csf/csfui.pl
+if [ -e "/etc/qhtlfirewall/csfui.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfui.pl
 fi
-if [ -e "/etc/csf/csfuir.pl" ]; then
-	rm -f /etc/csf/csfuir.pl
+if [ -e "/etc/qhtlfirewall/csfuir.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/cseui.pl" ]; then
-	rm -f /usr/local/csf/bin/cseui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/cseui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/cseui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfui.pl" ]; then
-	rm -f /usr/local/csf/bin/csfui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfuir.pl" ]; then
-	rm -f /usr/local/csf/bin/csfuir.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfuir.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/regex.pm" ]; then
-	rm -f /usr/local/csf/bin/regex.pm
+if [ -e "/usr/local/qhtlfirewall/bin/regex.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/regex.pm
 fi
 
 OLDVERSION=0
-if [ -e "/etc/csf/version.txt" ]; then
-    OLDVERSION=`head -n 1 /etc/csf/version.txt`
-fi
-
-rm -f /etc/csf/csf.pl /usr/sbin/csf /etc/csf/lfd.pl /usr/sbin/lfd
-chmod 700 csf.pl lfd.pl
-cp -avf csf.pl /usr/sbin/csf
-cp -avf lfd.pl /usr/sbin/lfd
-chmod 700 /usr/sbin/csf /usr/sbin/lfd
-ln -svf /usr/sbin/csf /etc/csf/csf.pl
-ln -svf /usr/sbin/lfd /etc/csf/lfd.pl
-ln -svf /usr/local/csf/bin/csftest.pl /etc/csf/
-ln -svf /usr/local/csf/bin/pt_deleted_action.pl /etc/csf/
-ln -svf /usr/local/csf/bin/remove_apf_bfd.sh /etc/csf/
-ln -svf /usr/local/csf/bin/uninstall.sh /etc/csf/
-ln -svf /usr/local/csf/bin/regex.custom.pm /etc/csf/
-ln -svf /usr/local/csf/lib/webmin /etc/csf/
-if [ ! -e "/etc/csf/alerts" ]; then
-    ln -svf /usr/local/csf/tpl /etc/csf/alerts
-fi
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/lfd
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/csf
-
-mkdir webmin/csf/images
-mkdir ui/images
-mkdir da/images
-mkdir interworx/images
+if [ -e "/etc/qhtlfirewall/version.txt" ]; then
+	OLDVERSION=`head -n 1 /etc/qhtlfirewall/version.txt`
+fi
+
+rm -f /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /usr/sbin/csf /usr/sbin/lfd
+chmod 700 qhtlfirewall.pl qhtlwaterfall.pl
+cp -avf qhtlfirewall.pl /usr/sbin/qhtlfirewall
+cp -avf qhtlwaterfall.pl /usr/sbin/qhtlwaterfall
+chmod 700 /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall
+# No legacy symlinks created in /etc (no fallbacks)
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlfirewall
+
+mkdir -p webmin/csf/images
+mkdir -p ui/images
+mkdir -p da/images
+mkdir -p interworx/images
 
 cp -avf csf/* webmin/csf/images/
 cp -avf csf/* ui/images/
 cp -avf csf/* da/images/
 cp -avf csf/* interworx/images/
 
-cp -avf messenger/*.php /etc/csf/messenger/
-cp -avf uninstall.directadmin.sh /usr/local/csf/bin/uninstall.sh
-cp -avf csftest.pl /usr/local/csf/bin/
-cp -avf remove_apf_bfd.sh /usr/local/csf/bin/
-cp -avf readme.txt /etc/csf/
-cp -avf sanity.txt /usr/local/csf/lib/
-cp -avf csf.rbls /usr/local/csf/lib/
-cp -avf restricted.txt /usr/local/csf/lib/
-cp -avf changelog.txt /etc/csf/
-cp -avf downloadservers /etc/csf/
-cp -avf install.txt /etc/csf/
-cp -avf version.txt /etc/csf/
-cp -avf license.txt /etc/csf/
-cp -avf webmin /usr/local/csf/lib/
-cp -avf ConfigServer /usr/local/csf/lib/
-cp -avf Net /usr/local/csf/lib/
-cp -avf Geo /usr/local/csf/lib/
-cp -avf Crypt /usr/local/csf/lib/
-cp -avf HTTP /usr/local/csf/lib/
-cp -avf JSON /usr/local/csf/lib/
-cp -avf version/* /usr/local/csf/lib/
-cp -avf csf.div /usr/local/csf/lib/
-cp -avf csfajaxtail.js /usr/local/csf/lib/
-cp -avf ui/images /etc/csf/ui/.
-cp -avf profiles /usr/local/csf/
-cp -avf csf.conf /usr/local/csf/profiles/reset_to_defaults.conf
-cp -avf lfd.logrotate /etc/logrotate.d/lfd
-
-rm -fv /etc/csf/csf.spamhaus /etc/csf/csf.dshield /etc/csf/csf.tor /etc/csf/csf.bogon
+cp -avf messenger/*.php /etc/qhtlfirewall/messenger/
+cp -avf uninstall.directadmin.sh /usr/local/qhtlfirewall/bin/uninstall.sh
+cp -avf csftest.pl /usr/local/qhtlfirewall/bin/
+cp -avf remove_apf_bfd.sh /usr/local/qhtlfirewall/bin/
+cp -avf readme.txt /etc/qhtlfirewall/
+cp -avf sanity.txt /usr/local/qhtlfirewall/lib/
+cp -avf csf.rbls /usr/local/qhtlfirewall/lib/
+cp -avf restricted.txt /usr/local/qhtlfirewall/lib/
+cp -avf changelog.txt /etc/qhtlfirewall/
+cp -avf downloadservers /etc/qhtlfirewall/
+cp -avf install.txt /etc/qhtlfirewall/
+cp -avf version.txt /etc/qhtlfirewall/
+cp -avf license.txt /etc/qhtlfirewall/
+cp -avf webmin /usr/local/qhtlfirewall/lib/
+cp -avf ConfigServer /usr/local/qhtlfirewall/lib/
+cp -avf Net /usr/local/qhtlfirewall/lib/
+cp -avf Geo /usr/local/qhtlfirewall/lib/
+cp -avf Crypt /usr/local/qhtlfirewall/lib/
+cp -avf HTTP /usr/local/qhtlfirewall/lib/
+cp -avf JSON /usr/local/qhtlfirewall/lib/
+cp -avf version/* /usr/local/qhtlfirewall/lib/
+cp -avf csf.div /usr/local/qhtlfirewall/lib/
+cp -avf csfajaxtail.js /usr/local/qhtlfirewall/lib/
+cp -avf ui/images /etc/qhtlfirewall/ui/.
+cp -avf profiles /usr/local/qhtlfirewall/
+cp -avf csf.conf /usr/local/qhtlfirewall/profiles/reset_to_defaults.conf
+cp -avf qhtlwaterfall.logrotate /etc/logrotate.d/qhtlwaterfall
+
+# remove deprecated legacy csf.* blocklist files if present (none in new layout)
 
 mkdir -p /usr/local/man/man1/
-cp -avf csf.1.txt /usr/local/man/man1/csf.1
-cp -avf csf.help /usr/local/csf/lib/
+cp -avf qhtlfirewall.1.txt /usr/local/man/man1/qhtlfirewall.1
+cp -avf qhtlfirewall.help /usr/local/qhtlfirewall/lib/
 chmod 755 /usr/local/man/
 chmod 755 /usr/local/man/man1/
-chmod 644 /usr/local/man/man1/csf.1
-
-chmod -R 600 /etc/csf
-chmod -R 600 /var/lib/csf
-chmod -R 600 /usr/local/csf/bin
-chmod -R 600 /usr/local/csf/lib
-chmod -R 600 /usr/local/csf/tpl
-chmod -R 600 /usr/local/csf/profiles
-chmod 600 /var/log/lfd.log*
-
-chmod -v 700 /usr/local/csf/bin/*.pl /usr/local/csf/bin/*.sh /usr/local/csf/bin/*.pm
-chmod -v 700 /etc/csf/*.pl /etc/csf/*.cgi /etc/csf/*.sh /etc/csf/*.php /etc/csf/*.py
-chmod -v 700 /etc/csf/webmin/csf/index.cgi
-chmod -v 644 /etc/cron.d/lfd-cron
-chmod -v 644 /etc/cron.d/csf-cron
+chmod 644 /usr/local/man/man1/qhtlfirewall.1
+
+chmod -R 600 /etc/qhtlfirewall
+chmod -R 600 /var/lib/qhtlfirewall
+chmod -R 600 /usr/local/qhtlfirewall/bin
+chmod -R 600 /usr/local/qhtlfirewall/lib
+chmod -R 600 /usr/local/qhtlfirewall/tpl
+chmod -R 600 /usr/local/qhtlfirewall/profiles
+chmod 600 /var/log/qhtlwaterfall.log*
+
+chmod -v 700 /usr/local/qhtlfirewall/bin/*.pl /usr/local/qhtlfirewall/bin/*.sh /usr/local/qhtlfirewall/bin/*.pm
+chmod -v 700 /usr/local/qhtlfirewall/lib/webmin/csf/index.cgi
+chmod -v 644 /etc/cron.d/qhtlwaterfall-cron
+chmod -v 644 /etc/cron.d/qhtlfirewall-cron
 
 cp -avf csget.pl /etc/cron.daily/csget
 chmod 700 /etc/cron.daily/csget
@@ -448,33 +436,32 @@ chmod -v 4755 /usr/local/directadmin/plugins/csf/exec/csf
 
 if test `cat /proc/1/comm` = "systemd"
 then
-    if [ -e /etc/init.d/lfd ]; then
+	if [ -e /etc/init.d/qhtlwaterfall ] || [ -e /etc/init.d/lfd ]; then
         if [ -f /etc/redhat-release ]; then
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-            update-rc.d -f lfd remove
-            update-rc.d -f csf remove
+			update-rc.d -f qhtlwaterfall remove
+			update-rc.d -f qhtlfirewall remove
         elif [ -f /etc/gentoo-release ]; then
-            rc-update del lfd default
-            rc-update del csf default
+			rc-update del qhtlwaterfall default
+			rc-update del qhtlfirewall default
         elif [ -f /etc/slackware-version ]; then
-            rm -vf /etc/rc.d/rc3.d/S80csf
-            rm -vf /etc/rc.d/rc4.d/S80csf
-            rm -vf /etc/rc.d/rc5.d/S80csf
-            rm -vf /etc/rc.d/rc3.d/S85lfd
-            rm -vf /etc/rc.d/rc4.d/S85lfd
-            rm -vf /etc/rc.d/rc5.d/S85lfd
+			rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
         else
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         fi
-        rm -fv /etc/init.d/csf
-        rm -fv /etc/init.d/lfd
+		rm -fv /etc/init.d/qhtlfirewall /etc/init.d/qhtlwaterfall /etc/init.d/csf /etc/init.d/lfd
     fi
 
     mkdir -p /etc/systemd/system/
@@ -494,40 +481,40 @@ then
     systemctl stop firewalld
     systemctl mask firewalld
 else
-    cp -avf lfd.sh /etc/init.d/lfd
-    cp -avf csf.sh /etc/init.d/csf
-    chmod -v 755 /etc/init.d/lfd
-    chmod -v 755 /etc/init.d/csf
+	cp -avf qhtlwaterfall.sh /etc/init.d/qhtlwaterfall
+	cp -avf qhtlfirewall.sh /etc/init.d/qhtlfirewall
+	chmod -v 755 /etc/init.d/qhtlwaterfall
+	chmod -v 755 /etc/init.d/qhtlfirewall
 
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+	/sbin/chkconfig qhtlwaterfall on
+	/sbin/chkconfig qhtlfirewall on
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
-        update-rc.d lfd defaults 80 20
-        update-rc.d csf defaults 20 80
+	update-rc.d -f qhtlwaterfall remove
+	update-rc.d -f qhtlfirewall remove
+	update-rc.d qhtlwaterfall defaults 80 20
+	update-rc.d qhtlfirewall defaults 20 80
     elif [ -f /etc/gentoo-release ]; then
-        rc-update add lfd default
-        rc-update add csf default
+	rc-update add qhtlwaterfall default
+	rc-update add qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        ln -svf /etc/init.d/csf /etc/rc.d/rc3.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc4.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc5.d/S80csf
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc3.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc4.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc5.d/S85lfd
-    else
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
-    fi
-fi
-
-chown -Rf root:root /etc/csf /var/lib/csf /usr/local/csf
-chown -f root:root /usr/sbin/csf /usr/sbin/lfd /etc/logrotate.d/lfd /etc/cron.d/csf-cron /etc/cron.d/lfd-cron /usr/local/man/man1/csf.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/lfd /etc/init.d/csf
-
-cd webmin ; tar -czf /usr/local/csf/csfwebmin.tgz ./*
-ln -svf /usr/local/csf/csfwebmin.tgz /etc/csf/
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc3.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc4.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc5.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc3.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc4.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc5.d/S85qhtlwaterfall
+	else
+		/sbin/chkconfig qhtlwaterfall on
+		/sbin/chkconfig qhtlfirewall on
+	fi
+fi
+
+chown -Rf root:root /etc/qhtlfirewall /var/lib/qhtlfirewall /usr/local/qhtlfirewall
+chown -f root:root /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /etc/logrotate.d/qhtlwaterfall /etc/cron.d/qhtlfirewall-cron /etc/cron.d/qhtlwaterfall-cron /usr/local/man/man1/qhtlfirewall.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/qhtlwaterfall /etc/init.d/qhtlfirewall
+
+cd webmin ; tar -czf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz ./*
+ln -svf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz /etc/qhtlfirewall/
 
 echo
 echo "Installation Completed"
diff --git a/qhtlfirewall/install.generic.sh b/qhtlfirewall/install.generic.sh
index 8595848..45c8465 100644
--- a/qhtlfirewall/install.generic.sh
+++ b/qhtlfirewall/install.generic.sh
@@ -21,37 +21,37 @@
 umask 0177
 
 if [ -e "/usr/local/cpanel/version" ]; then
-	echo "Running csf cPanel installer"
+	echo "Running QHTL cPanel installer"
 	echo
 	sh install.cpanel.sh
 	exit 0
 elif [ -e "/usr/local/directadmin/directadmin" ]; then
-	echo "Running csf DirectAdmin installer"
+	echo "Running QHTL DirectAdmin installer"
 	echo
 	sh install.directadmin.sh
 	exit 0
 fi
 
-echo "Installing generic csf and lfd"
+echo "Installing generic qhtlfirewall and qhtlwaterfall"
 echo
 
 echo "Check we're running as root"
 if [ ! `id -u` = 0 ]; then
 	echo
-	echo "FAILED: You have to be logged in as root (UID:0) to install csf"
+	echo "FAILED: You have to be logged in as root (UID:0) to install qhtlfirewall"
 	exit
 fi
 echo
 
-mkdir -v -m 0600 /etc/csf
-cp -avf install.txt /etc/csf/
+mkdir -v -m 0600 /etc/qhtlfirewall
+cp -avf install.txt /etc/qhtlfirewall/
 
 echo "Checking Perl modules..."
 chmod 700 os.pl
 RETURN=`./os.pl`
 if [ "$RETURN" = 1 ]; then
 	echo
-	echo "FAILED: You MUST install the missing perl modules above before you can install csf. See /etc/csf/install.txt for installation details."
+	echo "FAILED: You MUST install the missing perl modules above before you can install QHTL. See /etc/qhtlfirewall/install.txt for installation details."
     echo
 	exit
 else
@@ -59,379 +59,367 @@ else
     echo
 fi
 
-mkdir -v -m 0600 /etc/csf
-mkdir -v -m 0600 /var/lib/csf
-mkdir -v -m 0600 /var/lib/csf/backup
-mkdir -v -m 0600 /var/lib/csf/Geo
-mkdir -v -m 0600 /var/lib/csf/ui
-mkdir -v -m 0600 /var/lib/csf/stats
-mkdir -v -m 0600 /var/lib/csf/lock
-mkdir -v -m 0600 /var/lib/csf/webmin
-mkdir -v -m 0600 /var/lib/csf/zone
-mkdir -v -m 0600 /usr/local/csf
-mkdir -v -m 0600 /usr/local/csf/bin
-mkdir -v -m 0600 /usr/local/csf/lib
-mkdir -v -m 0600 /usr/local/csf/tpl
+mkdir -v -m 0600 /etc/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall/backup
+mkdir -v -m 0600 /var/lib/qhtlfirewall/Geo
+mkdir -v -m 0600 /var/lib/qhtlfirewall/ui
+mkdir -v -m 0600 /var/lib/qhtlfirewall/stats
+mkdir -v -m 0600 /var/lib/qhtlfirewall/lock
+mkdir -v -m 0600 /var/lib/qhtlfirewall/webmin
+mkdir -v -m 0600 /var/lib/qhtlfirewall/zone
+mkdir -v -m 0600 /usr/local/qhtlfirewall
+mkdir -v -m 0600 /usr/local/qhtlfirewall/bin
+mkdir -v -m 0600 /usr/local/qhtlfirewall/lib
+mkdir -v -m 0600 /usr/local/qhtlfirewall/tpl
 
 if [ -e "/etc/csf/alert.txt" ]; then
 	sh migratedata.sh
 fi
 
-if [ ! -e "/etc/csf/csf.conf" ]; then
-	cp -avf csf.generic.conf /etc/csf/csf.conf
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.conf" ]; then
+	cp -avf csf.generic.conf /etc/qhtlfirewall/qhtlfirewall.conf
 fi
 
-if [ ! -d /var/lib/csf ]; then
-	mkdir -v -p -m 0600 /var/lib/csf
+if [ ! -d /var/lib/qhtlfirewall ]; then
+	mkdir -v -p -m 0600 /var/lib/qhtlfirewall
 fi
-if [ ! -d /usr/local/csf/lib ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/lib
+if [ ! -d /usr/local/qhtlfirewall/lib ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/lib
 fi
-if [ ! -d /usr/local/csf/bin ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/bin
+if [ ! -d /usr/local/qhtlfirewall/bin ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/bin
 fi
-if [ ! -d /usr/local/csf/tpl ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/tpl
+if [ ! -d /usr/local/qhtlfirewall/tpl ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/tpl
 fi
 
-if [ ! -e "/etc/csf/csf.allow" ]; then
-	cp -avf csf.generic.allow /etc/csf/csf.allow
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.allow" ]; then
+	cp -avf csf.generic.allow /etc/qhtlfirewall/qhtlfirewall.allow
 fi
-if [ ! -e "/etc/csf/csf.deny" ]; then
-	cp -avf csf.deny /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.deny" ]; then
+	cp -avf csf.deny /etc/qhtlfirewall/qhtlfirewall.deny
 fi
-if [ ! -e "/etc/csf/csf.redirect" ]; then
-	cp -avf csf.redirect /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.redirect" ]; then
+	cp -avf csf.redirect /etc/qhtlfirewall/qhtlfirewall.redirect
 fi
-if [ ! -e "/etc/csf/csf.resellers" ]; then
-	cp -avf csf.resellers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.resellers" ]; then
+	cp -avf csf.resellers /etc/qhtlfirewall/qhtlfirewall.resellers
 fi
-if [ ! -e "/etc/csf/csf.dirwatch" ]; then
-	cp -avf csf.dirwatch /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dirwatch" ]; then
+	cp -avf csf.dirwatch /etc/qhtlfirewall/qhtlfirewall.dirwatch
 fi
-if [ ! -e "/etc/csf/csf.syslogs" ]; then
-	cp -avf csf.syslogs /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogs" ]; then
+	cp -avf csf.syslogs /etc/qhtlfirewall/qhtlfirewall.syslogs
 fi
-if [ ! -e "/etc/csf/csf.logfiles" ]; then
-	cp -avf csf.logfiles /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logfiles" ]; then
+	cp -avf csf.logfiles /etc/qhtlfirewall/qhtlfirewall.logfiles
 fi
-if [ ! -e "/etc/csf/csf.logignore" ]; then
-	cp -avf csf.logignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logignore" ]; then
+	cp -avf csf.logignore /etc/qhtlfirewall/qhtlfirewall.logignore
 fi
-if [ ! -e "/etc/csf/csf.blocklists" ]; then
-	cp -avf csf.blocklists /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.blocklists" ]; then
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists
 else
-	cp -avf csf.blocklists /etc/csf/csf.blocklists.new
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists.new
 fi
-if [ ! -e "/etc/csf/csf.ignore" ]; then
-	cp -avf csf.generic.ignore /etc/csf/csf.ignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.ignore" ]; then
+	cp -avf csf.generic.ignore /etc/qhtlfirewall/qhtlfirewall.ignore
 fi
-if [ ! -e "/etc/csf/csf.pignore" ]; then
-	cp -avf csf.generic.pignore /etc/csf/csf.pignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.pignore" ]; then
+	cp -avf csf.generic.pignore /etc/qhtlfirewall/qhtlfirewall.pignore
 fi
-if [ ! -e "/etc/csf/csf.rignore" ]; then
-	cp -avf csf.rignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rignore" ]; then
+	cp -avf csf.rignore /etc/qhtlfirewall/qhtlfirewall.rignore
 fi
-if [ ! -e "/etc/csf/csf.fignore" ]; then
-	cp -avf csf.fignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.fignore" ]; then
+	cp -avf csf.fignore /etc/qhtlfirewall/qhtlfirewall.fignore
 fi
-if [ ! -e "/etc/csf/csf.signore" ]; then
-	cp -avf csf.signore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.signore" ]; then
+	cp -avf csf.signore /etc/qhtlfirewall/qhtlfirewall.signore
 fi
-if [ ! -e "/etc/csf/csf.suignore" ]; then
-	cp -avf csf.suignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.suignore" ]; then
+	cp -avf csf.suignore /etc/qhtlfirewall/qhtlfirewall.suignore
 fi
-if [ ! -e "/etc/csf/csf.uidignore" ]; then
-	cp -avf csf.uidignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.uidignore" ]; then
+	cp -avf csf.uidignore /etc/qhtlfirewall/qhtlfirewall.uidignore
 fi
-if [ ! -e "/etc/csf/csf.mignore" ]; then
-	cp -avf csf.mignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.mignore" ]; then
+	cp -avf csf.mignore /etc/qhtlfirewall/qhtlfirewall.mignore
 fi
-if [ ! -e "/etc/csf/csf.sips" ]; then
-	cp -avf csf.sips /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.sips" ]; then
+	cp -avf csf.sips /etc/qhtlfirewall/qhtlfirewall.sips
 fi
-if [ ! -e "/etc/csf/csf.dyndns" ]; then
-	cp -avf csf.dyndns /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dyndns" ]; then
+	cp -avf csf.dyndns /etc/qhtlfirewall/qhtlfirewall.dyndns
 fi
-if [ ! -e "/etc/csf/csf.syslogusers" ]; then
-	cp -avf csf.syslogusers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogusers" ]; then
+	cp -avf csf.syslogusers /etc/qhtlfirewall/qhtlfirewall.syslogusers
 fi
-if [ ! -e "/etc/csf/csf.smtpauth" ]; then
-	cp -avf csf.smtpauth /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.smtpauth" ]; then
+	cp -avf csf.smtpauth /etc/qhtlfirewall/qhtlfirewall.smtpauth
 fi
-if [ ! -e "/etc/csf/csf.rblconf" ]; then
-	cp -avf csf.rblconf /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rblconf" ]; then
+	cp -avf csf.rblconf /etc/qhtlfirewall/qhtlfirewall.rblconf
 fi
-if [ ! -e "/etc/csf/csf.cloudflare" ]; then
-	cp -avf csf.cloudflare /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.cloudflare" ]; then
+	cp -avf csf.cloudflare /etc/qhtlfirewall/qhtlfirewall.cloudflare
 fi
 
-if [ ! -e "/usr/local/csf/tpl/alert.txt" ]; then
-	cp -avf alert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/alert.txt" ]; then
+	cp -avf alert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/reselleralert.txt" ]; then
-	cp -avf reselleralert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/reselleralert.txt" ]; then
+	cp -avf reselleralert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logalert.txt" ]; then
-	cp -avf logalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logalert.txt" ]; then
+	cp -avf logalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logfloodalert.txt" ]; then
-	cp -avf logfloodalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logfloodalert.txt" ]; then
+	cp -avf logfloodalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/syslogalert.txt" ]; then
-	cp -avf syslogalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/syslogalert.txt" ]; then
+	cp -avf syslogalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/integrityalert.txt" ]; then
-	cp -avf integrityalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/integrityalert.txt" ]; then
+	cp -avf integrityalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/exploitalert.txt" ]; then
-	cp -avf exploitalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/exploitalert.txt" ]; then
+	cp -avf exploitalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/queuealert.txt" ]; then
-	cp -avf queuealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/queuealert.txt" ]; then
+	cp -avf queuealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/modsecipdbalert.txt" ]; then
-	cp -avf modsecipdbalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/modsecipdbalert.txt" ]; then
+	cp -avf modsecipdbalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/tracking.txt" ]; then
-	cp -avf tracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/tracking.txt" ]; then
+	cp -avf tracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/connectiontracking.txt" ]; then
-	cp -avf connectiontracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/connectiontracking.txt" ]; then
+	cp -avf connectiontracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/processtracking.txt" ]; then
-	cp -avf processtracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/processtracking.txt" ]; then
+	cp -avf processtracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/accounttracking.txt" ]; then
-	cp -avf accounttracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/accounttracking.txt" ]; then
+	cp -avf accounttracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/usertracking.txt" ]; then
-	cp -avf usertracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/usertracking.txt" ]; then
+	cp -avf usertracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sshalert.txt" ]; then
-	cp -avf sshalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sshalert.txt" ]; then
+	cp -avf sshalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/webminalert.txt" ]; then
-	cp -avf webminalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/webminalert.txt" ]; then
+	cp -avf webminalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sualert.txt" ]; then
-	cp -avf sualert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sualert.txt" ]; then
+	cp -avf sualert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sudoalert.txt" ]; then
-	cp -avf sudoalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sudoalert.txt" ]; then
+	cp -avf sudoalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/consolealert.txt" ]; then
-	cp -avf consolealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/consolealert.txt" ]; then
+	cp -avf consolealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uialert.txt" ]; then
-	cp -avf uialert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uialert.txt" ]; then
+	cp -avf uialert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/cpanelalert.txt" ]; then
-	cp -avf cpanelalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/cpanelalert.txt" ]; then
+	cp -avf cpanelalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/scriptalert.txt" ]; then
-	cp -avf scriptalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/scriptalert.txt" ]; then
+	cp -avf scriptalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/relayalert.txt" ]; then
-	cp -avf relayalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/relayalert.txt" ]; then
+	cp -avf relayalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/filealert.txt" ]; then
-	cp -avf filealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/filealert.txt" ]; then
+	cp -avf filealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/watchalert.txt" ]; then
-	cp -avf watchalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/watchalert.txt" ]; then
+	cp -avf watchalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/loadalert.txt" ]; then
-	cp -avf loadalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/loadalert.txt" ]; then
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/.
 else
-	cp -avf loadalert.txt /usr/local/csf/tpl/loadalert.txt.new
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/loadalert.txt.new
 fi
-if [ ! -e "/usr/local/csf/tpl/resalert.txt" ]; then
-	cp -avf resalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/resalert.txt" ]; then
+	cp -avf resalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portscan.txt" ]; then
-	cp -avf portscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portscan.txt" ]; then
+	cp -avf portscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uidscan.txt" ]; then
-	cp -avf uidscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uidscan.txt" ]; then
+	cp -avf uidscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/permblock.txt" ]; then
-	cp -avf permblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/permblock.txt" ]; then
+	cp -avf permblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/netblock.txt" ]; then
-	cp -avf netblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/netblock.txt" ]; then
+	cp -avf netblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portknocking.txt" ]; then
-	cp -avf portknocking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portknocking.txt" ]; then
+	cp -avf portknocking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/forkbombalert.txt" ]; then
-	cp -avf forkbombalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/forkbombalert.txt" ]; then
+	cp -avf forkbombalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/recaptcha.txt" ]; then
-	cp -avf recaptcha.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/recaptcha.txt" ]; then
+	cp -avf recaptcha.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.main.txt" ]; then
-	cp -avf apache.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.main.txt" ]; then
+	cp -avf apache.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.http.txt" ]; then
-	cp -avf apache.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.http.txt" ]; then
+	cp -avf apache.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.https.txt" ]; then
-	cp -avf apache.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.https.txt" ]; then
+	cp -avf apache.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.main.txt" ]; then
-	cp -avf litespeed.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.main.txt" ]; then
+	cp -avf litespeed.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.http.txt" ]; then
-	cp -avf litespeed.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.http.txt" ]; then
+	cp -avf litespeed.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.https.txt" ]; then
-	cp -avf litespeed.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.https.txt" ]; then
+	cp -avf litespeed.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-cp -avf x-arf.txt /usr/local/csf/tpl/.
+cp -avf x-arf.txt /usr/local/qhtlfirewall/tpl/.
 
-if [ ! -e "/usr/local/csf/bin/regex.custom.pm" ]; then
-	cp -avf regex.custom.pm /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/regex.custom.pm" ]; then
+	cp -avf regex.custom.pm /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/usr/local/csf/bin/pt_deleted_action.pl" ]; then
-	cp -avf pt_deleted_action.pl /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/pt_deleted_action.pl" ]; then
+	cp -avf pt_deleted_action.pl /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/etc/csf/messenger" ]; then
-	cp -avf messenger /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/messenger" ]; then
+	cp -avf messenger /etc/qhtlfirewall/.
 fi
-if [ ! -e "/etc/csf/messenger/index.recaptcha.html" ]; then
-	cp -avf messenger/index.recaptcha.html /etc/csf/messenger/.
+if [ ! -e "/etc/qhtlfirewall/messenger/index.recaptcha.html" ]; then
+	cp -avf messenger/index.recaptcha.html /etc/qhtlfirewall/messenger/.
 fi
-if [ ! -e "/etc/csf/ui" ]; then
-	cp -avf ui /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/ui" ]; then
+	cp -avf ui /etc/qhtlfirewall/.
 fi
 if [ -e "/etc/cron.d/csfcron.sh" ]; then
-	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/csf-cron
+	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/qhtlfirewall-cron
 fi
-if [ ! -e "/etc/cron.d/csf-cron" ]; then
-	cp -avf csfcron.sh /etc/cron.d/csf-cron
+if [ ! -e "/etc/cron.d/qhtlfirewall-cron" ]; then
+	cp -avf qhtlfirewall.cron /etc/cron.d/qhtlfirewall-cron
 fi
 if [ -e "/etc/cron.d/lfdcron.sh" ]; then
-	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/lfd-cron
+	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/qhtlwaterfall-cron
 fi
-if [ ! -e "/etc/cron.d/lfd-cron" ]; then
-	cp -avf lfdcron.sh /etc/cron.d/lfd-cron
+if [ ! -e "/etc/cron.d/qhtlwaterfall-cron" ]; then
+	cp -avf qhtlwaterfall.cron /etc/cron.d/qhtlwaterfall-cron
 fi
-sed -i "s%/etc/init.d/lfd restart%/usr/sbin/csf --lfd restart%" /etc/cron.d/lfd-cron
-if [ -e "/usr/local/csf/bin/servercheck.pm" ]; then
-	rm -f /usr/local/csf/bin/servercheck.pm
+if [ -e "/usr/local/qhtlfirewall/bin/servercheck.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/servercheck.pm
 fi
-if [ -e "/etc/csf/cseui.pl" ]; then
-	rm -f /etc/csf/cseui.pl
+if [ -e "/etc/qhtlfirewall/cseui.pl" ]; then
+	rm -f /etc/qhtlfirewall/cseui.pl
 fi
-if [ -e "/etc/csf/csfui.pl" ]; then
-	rm -f /etc/csf/csfui.pl
+if [ -e "/etc/qhtlfirewall/csfui.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfui.pl
 fi
-if [ -e "/etc/csf/csfuir.pl" ]; then
-	rm -f /etc/csf/csfuir.pl
+if [ -e "/etc/qhtlfirewall/csfuir.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/cseui.pl" ]; then
-	rm -f /usr/local/csf/bin/cseui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/cseui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/cseui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfui.pl" ]; then
-	rm -f /usr/local/csf/bin/csfui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfuir.pl" ]; then
-	rm -f /usr/local/csf/bin/csfuir.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfuir.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/regex.pm" ]; then
-	rm -f /usr/local/csf/bin/regex.pm
+if [ -e "/usr/local/qhtlfirewall/bin/regex.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/regex.pm
 fi
 
 OLDVERSION=0
-if [ -e "/etc/csf/version.txt" ]; then
-    OLDVERSION=`head -n 1 /etc/csf/version.txt`
-fi
-
-rm -f /etc/csf/csf.pl /usr/sbin/csf /etc/csf/lfd.pl /usr/sbin/lfd
-chmod 700 csf.pl lfd.pl
-cp -avf csf.pl /usr/sbin/csf
-cp -avf lfd.pl /usr/sbin/lfd
-chmod 700 /usr/sbin/csf /usr/sbin/lfd
-ln -svf /usr/sbin/csf /etc/csf/csf.pl
-ln -svf /usr/sbin/lfd /etc/csf/lfd.pl
-ln -svf /usr/local/csf/bin/csftest.pl /etc/csf/
-ln -svf /usr/local/csf/bin/pt_deleted_action.pl /etc/csf/
-ln -svf /usr/local/csf/bin/remove_apf_bfd.sh /etc/csf/
-ln -svf /usr/local/csf/bin/uninstall.sh /etc/csf/
-ln -svf /usr/local/csf/bin/regex.custom.pm /etc/csf/
-ln -svf /usr/local/csf/lib/webmin /etc/csf/
-if [ ! -e "/etc/csf/alerts" ]; then
-    ln -svf /usr/local/csf/tpl /etc/csf/alerts
-fi
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/lfd
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/csf
-
-mkdir webmin/csf/images
-mkdir ui/images
-mkdir da/images
-mkdir interworx/images
+if [ -e "/etc/qhtlfirewall/version.txt" ]; then
+	OLDVERSION=`head -n 1 /etc/qhtlfirewall/version.txt`
+fi
+
+rm -f /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /usr/sbin/csf /usr/sbin/lfd
+chmod 700 qhtlfirewall.pl qhtlwaterfall.pl
+cp -avf qhtlfirewall.pl /usr/sbin/qhtlfirewall
+cp -avf qhtlwaterfall.pl /usr/sbin/qhtlwaterfall
+chmod 700 /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall
+# No legacy symlinks created (no fallbacks)
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlfirewall
+
+mkdir -p webmin/csf/images
+mkdir -p ui/images
+mkdir -p da/images
+mkdir -p interworx/images
 
 cp -avf csf/* webmin/csf/images/
 cp -avf csf/* ui/images/
 cp -avf csf/* da/images/
 cp -avf csf/* interworx/images/
 
-cp -avf messenger/*.php /etc/csf/messenger/
-cp -avf uninstall.generic.sh /usr/local/csf/bin/uninstall.sh
-cp -avf csftest.pl /usr/local/csf/bin/
-cp -avf remove_apf_bfd.sh /usr/local/csf/bin/
-cp -avf readme.txt /etc/csf/
-cp -avf sanity.txt /usr/local/csf/lib/
-cp -avf csf.rbls /usr/local/csf/lib/
-cp -avf restricted.txt /usr/local/csf/lib/
-cp -avf changelog.txt /etc/csf/
-cp -avf downloadservers /etc/csf/
-cp -avf install.txt /etc/csf/
-cp -avf version.txt /etc/csf/
-cp -avf license.txt /etc/csf/
-cp -avf webmin /usr/local/csf/lib/
-cp -avf ConfigServer /usr/local/csf/lib/
-cp -avf Net /usr/local/csf/lib/
-cp -avf Geo /usr/local/csf/lib/
-cp -avf Crypt /usr/local/csf/lib/
-cp -avf HTTP /usr/local/csf/lib/
-cp -avf JSON /usr/local/csf/lib/
-cp -avf version/* /usr/local/csf/lib/
-cp -avf csf.div /usr/local/csf/lib/
-cp -avf csfajaxtail.js /usr/local/csf/lib/
-cp -avf ui/images /etc/csf/ui/.
-cp -avf profiles /usr/local/csf/
-cp -avf csf.conf /usr/local/csf/profiles/reset_to_defaults.conf
-cp -avf lfd.logrotate /etc/logrotate.d/lfd
-chcon --reference /etc/logrotate.d /etc/logrotate.d/lfd
+cp -avf messenger/*.php /etc/qhtlfirewall/messenger/
+cp -avf uninstall.generic.sh /usr/local/qhtlfirewall/bin/uninstall.sh
+cp -avf csftest.pl /usr/local/qhtlfirewall/bin/
+cp -avf remove_apf_bfd.sh /usr/local/qhtlfirewall/bin/
+cp -avf readme.txt /etc/qhtlfirewall/
+cp -avf sanity.txt /usr/local/qhtlfirewall/lib/
+cp -avf csf.rbls /usr/local/qhtlfirewall/lib/
+cp -avf restricted.txt /usr/local/qhtlfirewall/lib/
+cp -avf changelog.txt /etc/qhtlfirewall/
+cp -avf downloadservers /etc/qhtlfirewall/
+cp -avf install.txt /etc/qhtlfirewall/
+cp -avf version.txt /etc/qhtlfirewall/
+cp -avf license.txt /etc/qhtlfirewall/
+cp -avf webmin /usr/local/qhtlfirewall/lib/
+cp -avf ConfigServer /usr/local/qhtlfirewall/lib/
+cp -avf Net /usr/local/qhtlfirewall/lib/
+cp -avf Geo /usr/local/qhtlfirewall/lib/
+cp -avf Crypt /usr/local/qhtlfirewall/lib/
+cp -avf HTTP /usr/local/qhtlfirewall/lib/
+cp -avf JSON /usr/local/qhtlfirewall/lib/
+cp -avf version/* /usr/local/qhtlfirewall/lib/
+cp -avf csf.div /usr/local/qhtlfirewall/lib/
+cp -avf csfajaxtail.js /usr/local/qhtlfirewall/lib/
+cp -avf ui/images /etc/qhtlfirewall/ui/.
+cp -avf profiles /usr/local/qhtlfirewall/
+cp -avf csf.conf /usr/local/qhtlfirewall/profiles/reset_to_defaults.conf
+cp -avf qhtlwaterfall.logrotate /etc/logrotate.d/qhtlwaterfall
+chcon --reference /etc/logrotate.d /etc/logrotate.d/qhtlwaterfall
 
 if [ -e "/usr/local/ispconfig/interface/web/csf/ispconfig_csf" ]; then
     rm -Rfv /usr/local/ispconfig/interface/web/csf/
 fi
 
-rm -fv /etc/csf/csf.spamhaus /etc/csf/csf.dshield /etc/csf/csf.tor /etc/csf/csf.bogon
+# remove deprecated legacy csf.* blocklist files if present (none in new layout)
 
 mkdir -p /usr/local/man/man1/
-cp -avf csf.1.txt /usr/local/man/man1/csf.1
-cp -avf csf.help /usr/local/csf/lib/
+cp -avf qhtlfirewall.1.txt /usr/local/man/man1/qhtlfirewall.1
+cp -avf qhtlfirewall.help /usr/local/qhtlfirewall/lib/
 chmod 755 /usr/local/man/
 chmod 755 /usr/local/man/man1/
-chmod 644 /usr/local/man/man1/csf.1
-
-chmod -R 600 /etc/csf
-chmod -R 600 /var/lib/csf
-chmod -R 600 /usr/local/csf/bin
-chmod -R 600 /usr/local/csf/lib
-chmod -R 600 /usr/local/csf/tpl
-chmod -R 600 /usr/local/csf/profiles
-chmod 600 /var/log/lfd.log*
-
-chmod -v 700 /usr/local/csf/bin/*.pl /usr/local/csf/bin/*.sh /usr/local/csf/bin/*.pm
-chmod -v 700 /etc/csf/*.pl /etc/csf/*.cgi /etc/csf/*.sh /etc/csf/*.php /etc/csf/*.py
-chmod -v 700 /etc/csf/webmin/csf/index.cgi
-chmod -v 644 /etc/cron.d/lfd-cron
-chmod -v 644 /etc/cron.d/csf-cron
+chmod 644 /usr/local/man/man1/qhtlfirewall.1
+
+chmod -R 600 /etc/qhtlfirewall
+chmod -R 600 /var/lib/qhtlfirewall
+chmod -R 600 /usr/local/qhtlfirewall/bin
+chmod -R 600 /usr/local/qhtlfirewall/lib
+chmod -R 600 /usr/local/qhtlfirewall/tpl
+chmod -R 600 /usr/local/qhtlfirewall/profiles
+chmod 600 /var/log/qhtlwaterfall.log*
+
+chmod -v 700 /usr/local/qhtlfirewall/bin/*.pl /usr/local/qhtlfirewall/bin/*.sh /usr/local/qhtlfirewall/bin/*.pm
+chmod -v 700 /usr/local/qhtlfirewall/lib/webmin/csf/index.cgi
+chmod -v 644 /etc/cron.d/qhtlwaterfall-cron
+chmod -v 644 /etc/cron.d/qhtlfirewall-cron
 
 cp -avf csget.pl /etc/cron.daily/csget
 chmod 700 /etc/cron.daily/csget
@@ -442,33 +430,32 @@ chmod -v 700 auto.generic.pl
 
 if test `cat /proc/1/comm` = "systemd"
 then
-    if [ -e /etc/init.d/lfd ]; then
+	if [ -e /etc/init.d/qhtlwaterfall ] || [ -e /etc/init.d/lfd ]; then
         if [ -f /etc/redhat-release ]; then
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-            update-rc.d -f lfd remove
-            update-rc.d -f csf remove
+			update-rc.d -f qhtlwaterfall remove
+			update-rc.d -f qhtlfirewall remove
         elif [ -f /etc/gentoo-release ]; then
-            rc-update del lfd default
-            rc-update del csf default
+			rc-update del qhtlwaterfall default
+			rc-update del qhtlfirewall default
         elif [ -f /etc/slackware-version ]; then
-            rm -vf /etc/rc.d/rc3.d/S80csf
-            rm -vf /etc/rc.d/rc4.d/S80csf
-            rm -vf /etc/rc.d/rc5.d/S80csf
-            rm -vf /etc/rc.d/rc3.d/S85lfd
-            rm -vf /etc/rc.d/rc4.d/S85lfd
-            rm -vf /etc/rc.d/rc5.d/S85lfd
+			rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
         else
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         fi
-        rm -fv /etc/init.d/csf
-        rm -fv /etc/init.d/lfd
+	rm -fv /etc/init.d/qhtlfirewall /etc/init.d/qhtlwaterfall /etc/init.d/csf /etc/init.d/lfd
     fi
 
     mkdir -p /etc/systemd/system/
@@ -488,40 +475,40 @@ then
     systemctl stop firewalld
     systemctl mask firewalld
 else
-    cp -avf lfd.sh /etc/init.d/lfd
-    cp -avf csf.sh /etc/init.d/csf
-    chmod -v 755 /etc/init.d/lfd
-    chmod -v 755 /etc/init.d/csf
+	cp -avf qhtlwaterfall.sh /etc/init.d/qhtlwaterfall
+	cp -avf qhtlfirewall.sh /etc/init.d/qhtlfirewall
+	chmod -v 755 /etc/init.d/qhtlwaterfall
+	chmod -v 755 /etc/init.d/qhtlfirewall
 
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+	/sbin/chkconfig qhtlwaterfall on
+	/sbin/chkconfig qhtlfirewall on
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
-        update-rc.d lfd defaults 80 20
-        update-rc.d csf defaults 20 80
+	update-rc.d -f qhtlwaterfall remove
+	update-rc.d -f qhtlfirewall remove
+	update-rc.d qhtlwaterfall defaults 80 20
+	update-rc.d qhtlfirewall defaults 20 80
     elif [ -f /etc/gentoo-release ]; then
-        rc-update add lfd default
-        rc-update add csf default
+	rc-update add qhtlwaterfall default
+	rc-update add qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        ln -svf /etc/init.d/csf /etc/rc.d/rc3.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc4.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc5.d/S80csf
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc3.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc4.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc5.d/S85lfd
-    else
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
-    fi
-fi
-
-chown -Rf root:root /etc/csf /var/lib/csf /usr/local/csf
-chown -f root:root /usr/sbin/csf /usr/sbin/lfd /etc/logrotate.d/lfd /etc/cron.d/csf-cron /etc/cron.d/lfd-cron /usr/local/man/man1/csf.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/lfd /etc/init.d/csf
-
-cd webmin ; tar -czf /usr/local/csf/csfwebmin.tgz ./*
-ln -svf /usr/local/csf/csfwebmin.tgz /etc/csf/
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc3.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc4.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc5.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc3.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc4.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc5.d/S85qhtlwaterfall
+	else
+		/sbin/chkconfig qhtlwaterfall on
+		/sbin/chkconfig qhtlfirewall on
+	fi
+fi
+
+chown -Rf root:root /etc/qhtlfirewall /var/lib/qhtlfirewall /usr/local/qhtlfirewall
+chown -f root:root /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /etc/logrotate.d/qhtlwaterfall /etc/cron.d/qhtlfirewall-cron /etc/cron.d/qhtlwaterfall-cron /usr/local/man/man1/qhtlfirewall.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/qhtlwaterfall /etc/init.d/qhtlfirewall
+
+cd webmin ; tar -czf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz ./*
+ln -svf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz /etc/qhtlfirewall/
 
 echo
 echo "Installation Completed"
diff --git a/qhtlfirewall/install.interworx.sh b/qhtlfirewall/install.interworx.sh
index 5c766d2..1351bcd 100644
--- a/qhtlfirewall/install.interworx.sh
+++ b/qhtlfirewall/install.interworx.sh
@@ -21,37 +21,37 @@
 umask 0177
 
 if [ -e "/usr/local/cpanel/version" ]; then
-	echo "Running csf cPanel installer"
+	echo "Running qhtlfirewall cPanel installer"
 	echo
 	sh install.cpanel.sh
 	exit 0
 elif [ -e "/usr/local/directadmin/directadmin" ]; then
-	echo "Running csf DirectAdmin installer"
+	echo "Running qhtlfirewall DirectAdmin installer"
 	echo
 	sh install.directadmin.sh
 	exit 0
 fi
 
-echo "Installing csf and lfd"
+echo "Installing qhtlfirewall and qhtlwaterfall"
 echo
 
 echo "Check we're running as root"
 if [ ! `id -u` = 0 ]; then
 	echo
-	echo "FAILED: You have to be logged in as root (UID:0) to install csf"
+	echo "FAILED: You have to be logged in as root (UID:0) to install qhtlfirewall"
 	exit
 fi
 echo
 
-mkdir -v -m 0600 /etc/csf
-cp -avf install.txt /etc/csf/
+mkdir -v -m 0600 /etc/qhtlfirewall
+cp -avf install.txt /etc/qhtlfirewall/
 
 echo "Checking Perl modules..."
 chmod 700 os.pl
 RETURN=`./os.pl`
 if [ "$RETURN" = 1 ]; then
 	echo
-	echo "FAILED: You MUST install the missing perl modules above before you can install csf. See /etc/csf/install.txt for installation details."
+	echo "FAILED: You MUST install the missing perl modules above before you can install QHTL. See /etc/qhtlfirewall/install.txt for installation details."
     echo
 	exit
 else
@@ -59,380 +59,368 @@ else
     echo
 fi
 
-mkdir -v -m 0600 /etc/csf
-mkdir -v -m 0600 /var/lib/csf
-mkdir -v -m 0600 /var/lib/csf/backup
-mkdir -v -m 0600 /var/lib/csf/Geo
-mkdir -v -m 0600 /var/lib/csf/ui
-mkdir -v -m 0600 /var/lib/csf/stats
-mkdir -v -m 0600 /var/lib/csf/lock
-mkdir -v -m 0600 /var/lib/csf/webmin
-mkdir -v -m 0600 /var/lib/csf/zone
-mkdir -v -m 0600 /usr/local/csf
-mkdir -v -m 0600 /usr/local/csf/bin
-mkdir -v -m 0600 /usr/local/csf/lib
-mkdir -v -m 0600 /usr/local/csf/tpl
-
-if [ -e "/etc/csf/alert.txt" ]; then
+mkdir -v -m 0600 /etc/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall/backup
+mkdir -v -m 0600 /var/lib/qhtlfirewall/Geo
+mkdir -v -m 0600 /var/lib/qhtlfirewall/ui
+mkdir -v -m 0600 /var/lib/qhtlfirewall/stats
+mkdir -v -m 0600 /var/lib/qhtlfirewall/lock
+mkdir -v -m 0600 /var/lib/qhtlfirewall/webmin
+mkdir -v -m 0600 /var/lib/qhtlfirewall/zone
+mkdir -v -m 0600 /usr/local/qhtlfirewall
+mkdir -v -m 0600 /usr/local/qhtlfirewall/bin
+mkdir -v -m 0600 /usr/local/qhtlfirewall/lib
+mkdir -v -m 0600 /usr/local/qhtlfirewall/tpl
+
+if [ -e "/etc/qhtlfirewall/alert.txt" ]; then
 	sh migratedata.sh
 fi
 
-if [ ! -e "/etc/csf/csf.conf" ]; then
-	cp -avf csf.interworx.conf /etc/csf/csf.conf
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.conf" ]; then
+	cp -avf csf.interworx.conf /etc/qhtlfirewall/qhtlfirewall.conf
 fi
 
-if [ ! -d /var/lib/csf ]; then
-	mkdir -v -p -m 0600 /var/lib/csf
+if [ ! -d /var/lib/qhtlfirewall ]; then
+	mkdir -v -p -m 0600 /var/lib/qhtlfirewall
 fi
-if [ ! -d /usr/local/csf/lib ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/lib
+if [ ! -d /usr/local/qhtlfirewall/lib ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/lib
 fi
-if [ ! -d /usr/local/csf/bin ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/bin
+if [ ! -d /usr/local/qhtlfirewall/bin ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/bin
 fi
-if [ ! -d /usr/local/csf/tpl ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/tpl
+if [ ! -d /usr/local/qhtlfirewall/tpl ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/tpl
 fi
 
-if [ ! -e "/etc/csf/csf.allow" ]; then
-	cp -avf csf.interworx.allow /etc/csf/csf.allow
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.allow" ]; then
+	cp -avf csf.interworx.allow /etc/qhtlfirewall/qhtlfirewall.allow
+	sed -i 's#/etc/csf/#/etc/qhtlfirewall/#g' /etc/qhtlfirewall/qhtlfirewall.allow
 fi
-if [ ! -e "/etc/csf/csf.deny" ]; then
-	cp -avf csf.deny /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.deny" ]; then
+	cp -avf csf.deny /etc/qhtlfirewall/qhtlfirewall.deny
 fi
-if [ ! -e "/etc/csf/csf.redirect" ]; then
-	cp -avf csf.redirect /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.redirect" ]; then
+	cp -avf csf.redirect /etc/qhtlfirewall/qhtlfirewall.redirect
 fi
-if [ ! -e "/etc/csf/csf.resellers" ]; then
-	cp -avf csf.resellers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.resellers" ]; then
+	cp -avf csf.resellers /etc/qhtlfirewall/qhtlfirewall.resellers
 fi
-if [ ! -e "/etc/csf/csf.dirwatch" ]; then
-	cp -avf csf.dirwatch /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dirwatch" ]; then
+	cp -avf csf.dirwatch /etc/qhtlfirewall/qhtlfirewall.dirwatch
 fi
-if [ ! -e "/etc/csf/csf.syslogs" ]; then
-	cp -avf csf.syslogs /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogs" ]; then
+	cp -avf csf.syslogs /etc/qhtlfirewall/qhtlfirewall.syslogs
 fi
-if [ ! -e "/etc/csf/csf.logfiles" ]; then
-	cp -avf csf.logfiles /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logfiles" ]; then
+	cp -avf csf.logfiles /etc/qhtlfirewall/qhtlfirewall.logfiles
 fi
-if [ ! -e "/etc/csf/csf.logignore" ]; then
-	cp -avf csf.logignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logignore" ]; then
+	cp -avf csf.logignore /etc/qhtlfirewall/qhtlfirewall.logignore
 fi
-if [ ! -e "/etc/csf/csf.blocklists" ]; then
-	cp -avf csf.blocklists /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.blocklists" ]; then
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists
 else
-	cp -avf csf.blocklists /etc/csf/csf.blocklists.new
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists.new
 fi
-if [ ! -e "/etc/csf/csf.ignore" ]; then
-	cp -avf csf.interworx.ignore /etc/csf/csf.ignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.ignore" ]; then
+	cp -avf csf.interworx.ignore /etc/qhtlfirewall/qhtlfirewall.ignore
+	sed -i 's#/etc/csf/#/etc/qhtlfirewall/#g' /etc/qhtlfirewall/qhtlfirewall.ignore
 fi
-if [ ! -e "/etc/csf/csf.pignore" ]; then
-	cp -avf csf.interworx.pignore /etc/csf/csf.pignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.pignore" ]; then
+	cp -avf csf.interworx.pignore /etc/qhtlfirewall/qhtlfirewall.pignore
 fi
-if [ ! -e "/etc/csf/csf.rignore" ]; then
-	cp -avf csf.rignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rignore" ]; then
+	cp -avf csf.rignore /etc/qhtlfirewall/qhtlfirewall.rignore
 fi
-if [ ! -e "/etc/csf/csf.fignore" ]; then
-	cp -avf csf.fignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.fignore" ]; then
+	cp -avf csf.fignore /etc/qhtlfirewall/qhtlfirewall.fignore
 fi
-if [ ! -e "/etc/csf/csf.signore" ]; then
-	cp -avf csf.signore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.signore" ]; then
+	cp -avf csf.signore /etc/qhtlfirewall/qhtlfirewall.signore
 fi
-if [ ! -e "/etc/csf/csf.suignore" ]; then
-	cp -avf csf.suignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.suignore" ]; then
+	cp -avf csf.suignore /etc/qhtlfirewall/qhtlfirewall.suignore
 fi
-if [ ! -e "/etc/csf/csf.uidignore" ]; then
-	cp -avf csf.uidignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.uidignore" ]; then
+	cp -avf csf.uidignore /etc/qhtlfirewall/qhtlfirewall.uidignore
 fi
-if [ ! -e "/etc/csf/csf.mignore" ]; then
-	cp -avf csf.mignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.mignore" ]; then
+	cp -avf csf.mignore /etc/qhtlfirewall/qhtlfirewall.mignore
 fi
-if [ ! -e "/etc/csf/csf.sips" ]; then
-	cp -avf csf.sips /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.sips" ]; then
+	cp -avf csf.sips /etc/qhtlfirewall/qhtlfirewall.sips
 fi
-if [ ! -e "/etc/csf/csf.dyndns" ]; then
-	cp -avf csf.dyndns /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dyndns" ]; then
+	cp -avf csf.dyndns /etc/qhtlfirewall/qhtlfirewall.dyndns
 fi
-if [ ! -e "/etc/csf/csf.syslogusers" ]; then
-	cp -avf csf.syslogusers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogusers" ]; then
+	cp -avf csf.syslogusers /etc/qhtlfirewall/qhtlfirewall.syslogusers
 fi
-if [ ! -e "/etc/csf/csf.smtpauth" ]; then
-	cp -avf csf.smtpauth /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.smtpauth" ]; then
+	cp -avf csf.smtpauth /etc/qhtlfirewall/qhtlfirewall.smtpauth
 fi
-if [ ! -e "/etc/csf/csf.rblconf" ]; then
-	cp -avf csf.rblconf /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rblconf" ]; then
+	cp -avf csf.rblconf /etc/qhtlfirewall/qhtlfirewall.rblconf
 fi
-if [ ! -e "/etc/csf/csf.cloudflare" ]; then
-	cp -avf csf.cloudflare /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.cloudflare" ]; then
+	cp -avf csf.cloudflare /etc/qhtlfirewall/qhtlfirewall.cloudflare
 fi
 
-if [ ! -e "/usr/local/csf/tpl/alert.txt" ]; then
-	cp -avf alert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/alert.txt" ]; then
+	cp -avf alert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/reselleralert.txt" ]; then
-	cp -avf reselleralert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/reselleralert.txt" ]; then
+	cp -avf reselleralert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logalert.txt" ]; then
-	cp -avf logalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logalert.txt" ]; then
+	cp -avf logalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logfloodalert.txt" ]; then
-	cp -avf logfloodalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logfloodalert.txt" ]; then
+	cp -avf logfloodalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/syslogalert.txt" ]; then
-	cp -avf syslogalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/syslogalert.txt" ]; then
+	cp -avf syslogalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/integrityalert.txt" ]; then
-	cp -avf integrityalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/integrityalert.txt" ]; then
+	cp -avf integrityalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/exploitalert.txt" ]; then
-	cp -avf exploitalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/exploitalert.txt" ]; then
+	cp -avf exploitalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/queuealert.txt" ]; then
-	cp -avf queuealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/queuealert.txt" ]; then
+	cp -avf queuealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/modsecipdbalert.txt" ]; then
-	cp -avf modsecipdbalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/modsecipdbalert.txt" ]; then
+	cp -avf modsecipdbalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/tracking.txt" ]; then
-	cp -avf tracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/tracking.txt" ]; then
+	cp -avf tracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/connectiontracking.txt" ]; then
-	cp -avf connectiontracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/connectiontracking.txt" ]; then
+	cp -avf connectiontracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/processtracking.txt" ]; then
-	cp -avf processtracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/processtracking.txt" ]; then
+	cp -avf processtracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/accounttracking.txt" ]; then
-	cp -avf accounttracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/accounttracking.txt" ]; then
+	cp -avf accounttracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/usertracking.txt" ]; then
-	cp -avf usertracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/usertracking.txt" ]; then
+	cp -avf usertracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sshalert.txt" ]; then
-	cp -avf sshalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sshalert.txt" ]; then
+	cp -avf sshalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/webminalert.txt" ]; then
-	cp -avf webminalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/webminalert.txt" ]; then
+	cp -avf webminalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sualert.txt" ]; then
-	cp -avf sualert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sualert.txt" ]; then
+	cp -avf sualert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sudoalert.txt" ]; then
-	cp -avf sudoalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sudoalert.txt" ]; then
+	cp -avf sudoalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/consolealert.txt" ]; then
-	cp -avf consolealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/consolealert.txt" ]; then
+	cp -avf consolealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uialert.txt" ]; then
-	cp -avf uialert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uialert.txt" ]; then
+	cp -avf uialert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/cpanelalert.txt" ]; then
-	cp -avf cpanelalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/cpanelalert.txt" ]; then
+	cp -avf cpanelalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/scriptalert.txt" ]; then
-	cp -avf scriptalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/scriptalert.txt" ]; then
+	cp -avf scriptalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/relayalert.txt" ]; then
-	cp -avf relayalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/relayalert.txt" ]; then
+	cp -avf relayalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/filealert.txt" ]; then
-	cp -avf filealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/filealert.txt" ]; then
+	cp -avf filealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/watchalert.txt" ]; then
-	cp -avf watchalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/watchalert.txt" ]; then
+	cp -avf watchalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/loadalert.txt" ]; then
-	cp -avf loadalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/loadalert.txt" ]; then
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/.
 else
-	cp -avf loadalert.txt /usr/local/csf/tpl/loadalert.txt.new
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/loadalert.txt.new
 fi
-if [ ! -e "/usr/local/csf/tpl/resalert.txt" ]; then
-	cp -avf resalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/resalert.txt" ]; then
+	cp -avf resalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portscan.txt" ]; then
-	cp -avf portscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portscan.txt" ]; then
+	cp -avf portscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uidscan.txt" ]; then
-	cp -avf uidscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uidscan.txt" ]; then
+	cp -avf uidscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/permblock.txt" ]; then
-	cp -avf permblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/permblock.txt" ]; then
+	cp -avf permblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/netblock.txt" ]; then
-	cp -avf netblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/netblock.txt" ]; then
+	cp -avf netblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portknocking.txt" ]; then
-	cp -avf portknocking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portknocking.txt" ]; then
+	cp -avf portknocking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/forkbombalert.txt" ]; then
-	cp -avf forkbombalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/forkbombalert.txt" ]; then
+	cp -avf forkbombalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/recaptcha.txt" ]; then
-	cp -avf recaptcha.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/recaptcha.txt" ]; then
+	cp -avf recaptcha.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.main.txt" ]; then
-	cp -avf apache.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.main.txt" ]; then
+	cp -avf apache.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.http.txt" ]; then
-	cp -avf apache.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.http.txt" ]; then
+	cp -avf apache.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.https.txt" ]; then
-	cp -avf apache.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.https.txt" ]; then
+	cp -avf apache.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.main.txt" ]; then
-	cp -avf litespeed.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.main.txt" ]; then
+	cp -avf litespeed.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.http.txt" ]; then
-	cp -avf litespeed.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.http.txt" ]; then
+	cp -avf litespeed.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.https.txt" ]; then
-	cp -avf litespeed.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.https.txt" ]; then
+	cp -avf litespeed.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-cp -avf x-arf.txt /usr/local/csf/tpl/.
+cp -avf x-arf.txt /usr/local/qhtlfirewall/tpl/.
 
-if [ ! -e "/usr/local/csf/bin/regex.custom.pm" ]; then
-	cp -avf regex.custom.pm /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/regex.custom.pm" ]; then
+	cp -avf regex.custom.pm /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/usr/local/csf/bin/pt_deleted_action.pl" ]; then
-	cp -avf pt_deleted_action.pl /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/pt_deleted_action.pl" ]; then
+	cp -avf pt_deleted_action.pl /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/etc/csf/messenger" ]; then
-	cp -avf messenger /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/messenger" ]; then
+	cp -avf messenger /etc/qhtlfirewall/.
 fi
-if [ ! -e "/etc/csf/messenger/index.recaptcha.html" ]; then
-	cp -avf messenger/index.recaptcha.html /etc/csf/messenger/.
+if [ ! -e "/etc/qhtlfirewall/messenger/index.recaptcha.html" ]; then
+	cp -avf messenger/index.recaptcha.html /etc/qhtlfirewall/messenger/.
 fi
-if [ ! -e "/etc/csf/ui" ]; then
-	cp -avf ui /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/ui" ]; then
+	cp -avf ui /etc/qhtlfirewall/.
 fi
 if [ -e "/etc/cron.d/csfcron.sh" ]; then
-	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/csf-cron
+	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/qhtlfirewall-cron
 fi
-if [ ! -e "/etc/cron.d/csf-cron" ]; then
-	cp -avf csfcron.sh /etc/cron.d/csf-cron
+if [ ! -e "/etc/cron.d/qhtlfirewall-cron" ]; then
+	cp -avf qhtlfirewall.cron /etc/cron.d/qhtlfirewall-cron
 fi
 if [ -e "/etc/cron.d/lfdcron.sh" ]; then
-	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/lfd-cron
+	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/qhtlwaterfall-cron
 fi
-if [ ! -e "/etc/cron.d/lfd-cron" ]; then
-	cp -avf lfdcron.sh /etc/cron.d/lfd-cron
+if [ ! -e "/etc/cron.d/qhtlwaterfall-cron" ]; then
+	cp -avf qhtlwaterfall.cron /etc/cron.d/qhtlwaterfall-cron
 fi
-sed -i "s%/etc/init.d/lfd restart%/usr/sbin/csf --lfd restart%" /etc/cron.d/lfd-cron
-if [ -e "/usr/local/csf/bin/servercheck.pm" ]; then
-	rm -f /usr/local/csf/bin/servercheck.pm
+if [ -e "/usr/local/qhtlfirewall/bin/servercheck.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/servercheck.pm
 fi
-if [ -e "/etc/csf/cseui.pl" ]; then
-	rm -f /etc/csf/cseui.pl
+if [ -e "/etc/qhtlfirewall/cseui.pl" ]; then
+	rm -f /etc/qhtlfirewall/cseui.pl
 fi
-if [ -e "/etc/csf/csfui.pl" ]; then
-	rm -f /etc/csf/csfui.pl
+if [ -e "/etc/qhtlfirewall/csfui.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfui.pl
 fi
-if [ -e "/etc/csf/csfuir.pl" ]; then
-	rm -f /etc/csf/csfuir.pl
+if [ -e "/etc/qhtlfirewall/csfuir.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/cseui.pl" ]; then
-	rm -f /usr/local/csf/bin/cseui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/cseui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/cseui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfui.pl" ]; then
-	rm -f /usr/local/csf/bin/csfui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfuir.pl" ]; then
-	rm -f /usr/local/csf/bin/csfuir.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfuir.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/regex.pm" ]; then
-	rm -f /usr/local/csf/bin/regex.pm
+if [ -e "/usr/local/qhtlfirewall/bin/regex.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/regex.pm
 fi
 
 OLDVERSION=0
-if [ -e "/etc/csf/version.txt" ]; then
-    OLDVERSION=`head -n 1 /etc/csf/version.txt`
-fi
-
-rm -f /etc/csf/csf.pl /usr/sbin/csf /etc/csf/lfd.pl /usr/sbin/lfd
-chmod 700 csf.pl lfd.pl
-cp -avf csf.pl /usr/sbin/csf
-cp -avf lfd.pl /usr/sbin/lfd
-chmod 700 /usr/sbin/csf /usr/sbin/lfd
-ln -svf /usr/sbin/csf /etc/csf/csf.pl
-ln -svf /usr/sbin/lfd /etc/csf/lfd.pl
-ln -svf /usr/local/csf/bin/csftest.pl /etc/csf/
-ln -svf /usr/local/csf/bin/pt_deleted_action.pl /etc/csf/
-ln -svf /usr/local/csf/bin/remove_apf_bfd.sh /etc/csf/
-ln -svf /usr/local/csf/bin/uninstall.sh /etc/csf/
-ln -svf /usr/local/csf/bin/regex.custom.pm /etc/csf/
-ln -svf /usr/local/csf/lib/webmin /etc/csf/
-if [ ! -e "/etc/csf/alerts" ]; then
-    ln -svf /usr/local/csf/tpl /etc/csf/alerts
-fi
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/lfd
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/csf
-
-mkdir webmin/csf/images
-mkdir ui/images
-mkdir da/images
-mkdir interworx/images
+if [ -e "/etc/qhtlfirewall/version.txt" ]; then
+	OLDVERSION=`head -n 1 /etc/qhtlfirewall/version.txt`
+fi
+
+rm -f /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /usr/sbin/csf /usr/sbin/lfd
+chmod 700 qhtlfirewall.pl qhtlwaterfall.pl
+cp -avf qhtlfirewall.pl /usr/sbin/qhtlfirewall
+cp -avf qhtlwaterfall.pl /usr/sbin/qhtlwaterfall
+chmod 700 /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlfirewall
+
+mkdir -p webmin/csf/images
+mkdir -p ui/images
+mkdir -p da/images
+mkdir -p interworx/images
 
 cp -avf csf/* webmin/csf/images/
 cp -avf csf/* ui/images/
 cp -avf csf/* da/images/
 cp -avf csf/* interworx/images/
 
-cp -avf messenger/*.php /etc/csf/messenger/
-cp -avf uninstall.interworx.sh /usr/local/csf/bin/uninstall.sh
-cp -avf csftest.pl /usr/local/csf/bin/
-cp -avf remove_apf_bfd.sh /usr/local/csf/bin/
-cp -avf readme.txt /etc/csf/
-cp -avf sanity.txt /usr/local/csf/lib/
-cp -avf csf.rbls /usr/local/csf/lib/
-cp -avf restricted.txt /usr/local/csf/lib/
-cp -avf changelog.txt /etc/csf/
-cp -avf downloadservers /etc/csf/
-cp -avf install.txt /etc/csf/
-cp -avf version.txt /etc/csf/
-cp -avf license.txt /etc/csf/
-cp -avf webmin /usr/local/csf/lib/
-cp -avf ConfigServer /usr/local/csf/lib/
-cp -avf Net /usr/local/csf/lib/
-cp -avf Geo /usr/local/csf/lib/
-cp -avf Crypt /usr/local/csf/lib/
-cp -avf HTTP /usr/local/csf/lib/
-cp -avf JSON /usr/local/csf/lib/
-cp -avf version/* /usr/local/csf/lib/
-cp -avf csf.div /usr/local/csf/lib/
-cp -avf csfajaxtail.js /usr/local/csf/lib/
-cp -avf ui/images /etc/csf/ui/.
-cp -avf profiles /usr/local/csf/
-cp -avf csf.conf /usr/local/csf/profiles/reset_to_defaults.conf
-cp -avf lfd.logrotate /etc/logrotate.d/lfd
-chcon --reference /etc/logrotate.d /etc/logrotate.d/lfd
-cp -avf apf_stub.pl /etc/csf/
+cp -avf messenger/*.php /etc/qhtlfirewall/messenger/
+cp -avf uninstall.interworx.sh /usr/local/qhtlfirewall/bin/uninstall.sh
+cp -avf csftest.pl /usr/local/qhtlfirewall/bin/
+cp -avf remove_apf_bfd.sh /usr/local/qhtlfirewall/bin/
+cp -avf readme.txt /etc/qhtlfirewall/
+cp -avf sanity.txt /usr/local/qhtlfirewall/lib/
+cp -avf csf.rbls /usr/local/qhtlfirewall/lib/
+cp -avf restricted.txt /usr/local/qhtlfirewall/lib/
+cp -avf changelog.txt /etc/qhtlfirewall/
+cp -avf downloadservers /etc/qhtlfirewall/
+cp -avf install.txt /etc/qhtlfirewall/
+cp -avf version.txt /etc/qhtlfirewall/
+cp -avf license.txt /etc/qhtlfirewall/
+cp -avf webmin /usr/local/qhtlfirewall/lib/
+cp -avf ConfigServer /usr/local/qhtlfirewall/lib/
+cp -avf Net /usr/local/qhtlfirewall/lib/
+cp -avf Geo /usr/local/qhtlfirewall/lib/
+cp -avf Crypt /usr/local/qhtlfirewall/lib/
+cp -avf HTTP /usr/local/qhtlfirewall/lib/
+cp -avf JSON /usr/local/qhtlfirewall/lib/
+cp -avf version/* /usr/local/qhtlfirewall/lib/
+cp -avf csf.div /usr/local/qhtlfirewall/lib/
+cp -avf csfajaxtail.js /usr/local/qhtlfirewall/lib/
+cp -avf ui/images /etc/qhtlfirewall/ui/.
+cp -avf profiles /usr/local/qhtlfirewall/
+cp -avf csf.conf /usr/local/qhtlfirewall/profiles/reset_to_defaults.conf
+cp -avf qhtlwaterfall.logrotate /etc/logrotate.d/qhtlwaterfall
+cp -avf apf_stub.pl /etc/qhtlfirewall/
 
 if [ -e "/usr/local/ispconfig/interface/web/csf/ispconfig_csf" ]; then
-    rm -Rfv /usr/local/ispconfig/interface/web/csf/
+	rm -Rfv /usr/local/ispconfig/interface/web/csf/
 fi
 
-rm -fv /etc/csf/csf.spamhaus /etc/csf/csf.dshield /etc/csf/csf.tor /etc/csf/csf.bogon
+rm -fv /etc/qhtlfirewall/csf.spamhaus /etc/qhtlfirewall/csf.dshield /etc/qhtlfirewall/csf.tor /etc/qhtlfirewall/csf.bogon
 
 mkdir -p /usr/local/man/man1/
-cp -avf csf.1.txt /usr/local/man/man1/csf.1
-cp -avf csf.help /usr/local/csf/lib/
+cp -avf qhtlfirewall.1.txt /usr/local/man/man1/qhtlfirewall.1
+cp -avf qhtlfirewall.help /usr/local/qhtlfirewall/lib/
 chmod 755 /usr/local/man/
 chmod 755 /usr/local/man/man1/
-chmod 644 /usr/local/man/man1/csf.1
-
-chmod -R 600 /etc/csf
-chmod -R 600 /var/lib/csf
-chmod -R 600 /usr/local/csf/bin
-chmod -R 600 /usr/local/csf/lib
-chmod -R 600 /usr/local/csf/tpl
-chmod -R 600 /usr/local/csf/profiles
-chmod 600 /var/log/lfd.log*
-
-chmod -v 700 /usr/local/csf/bin/*.pl /usr/local/csf/bin/*.sh /usr/local/csf/bin/*.pm
-chmod -v 700 /etc/csf/*.pl /etc/csf/*.cgi /etc/csf/*.sh /etc/csf/*.php /etc/csf/*.py
-chmod -v 700 /etc/csf/webmin/csf/index.cgi
-chmod -v 644 /etc/cron.d/lfd-cron
-chmod -v 644 /etc/cron.d/csf-cron
+chmod 644 /usr/local/man/man1/qhtlfirewall.1
+
+chmod -R 600 /etc/qhtlfirewall
+chmod -R 600 /var/lib/qhtlfirewall
+chmod -R 600 /usr/local/qhtlfirewall/bin
+chmod -R 600 /usr/local/qhtlfirewall/lib
+chmod -R 600 /usr/local/qhtlfirewall/tpl
+chmod -R 600 /usr/local/qhtlfirewall/profiles
+chmod 600 /var/log/qhtlwaterfall.log*
+
+chmod -v 700 /usr/local/qhtlfirewall/bin/*.pl /usr/local/qhtlfirewall/bin/*.sh /usr/local/qhtlfirewall/bin/*.pm
+chmod -v 700 /usr/local/qhtlfirewall/lib/webmin/csf/index.cgi
+chmod -v 644 /etc/cron.d/qhtlwaterfall-cron
+chmod -v 644 /etc/cron.d/qhtlfirewall-cron
 
 cp -avf csget.pl /etc/cron.daily/csget
 chmod 700 /etc/cron.daily/csget
@@ -443,33 +431,32 @@ chmod -v 700 auto.interworx.pl
 
 if test `cat /proc/1/comm` = "systemd"
 then
-    if [ -e /etc/init.d/lfd ]; then
+	if [ -e /etc/init.d/qhtlwaterfall ] || [ -e /etc/init.d/lfd ]; then
         if [ -f /etc/redhat-release ]; then
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-            update-rc.d -f lfd remove
-            update-rc.d -f csf remove
+			update-rc.d -f qhtlwaterfall remove
+			update-rc.d -f qhtlfirewall remove
         elif [ -f /etc/gentoo-release ]; then
-            rc-update del lfd default
-            rc-update del csf default
+			rc-update del qhtlwaterfall default
+			rc-update del qhtlfirewall default
         elif [ -f /etc/slackware-version ]; then
-            rm -vf /etc/rc.d/rc3.d/S80csf
-            rm -vf /etc/rc.d/rc4.d/S80csf
-            rm -vf /etc/rc.d/rc5.d/S80csf
-            rm -vf /etc/rc.d/rc3.d/S85lfd
-            rm -vf /etc/rc.d/rc4.d/S85lfd
-            rm -vf /etc/rc.d/rc5.d/S85lfd
+			rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
         else
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         fi
-        rm -fv /etc/init.d/csf
-        rm -fv /etc/init.d/lfd
+		rm -fv /etc/init.d/qhtlfirewall /etc/init.d/qhtlwaterfall /etc/init.d/csf /etc/init.d/lfd
     fi
 
     mkdir -p /etc/systemd/system/
@@ -489,37 +476,37 @@ then
     systemctl stop firewalld
     systemctl mask firewalld
 else
-    cp -avf lfd.sh /etc/init.d/lfd
-    cp -avf csf.sh /etc/init.d/csf
-    chmod -v 755 /etc/init.d/lfd
-    chmod -v 755 /etc/init.d/csf
+	cp -avf qhtlwaterfall.sh /etc/init.d/qhtlwaterfall
+	cp -avf qhtlfirewall.sh /etc/init.d/qhtlfirewall
+	chmod -v 755 /etc/init.d/qhtlwaterfall
+	chmod -v 755 /etc/init.d/qhtlfirewall
 
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+	/sbin/chkconfig qhtlwaterfall on
+	/sbin/chkconfig qhtlfirewall on
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
-        update-rc.d lfd defaults 80 20
-        update-rc.d csf defaults 20 80
+	update-rc.d -f qhtlwaterfall remove
+	update-rc.d -f qhtlfirewall remove
+	update-rc.d qhtlwaterfall defaults 80 20
+	update-rc.d qhtlfirewall defaults 20 80
     elif [ -f /etc/gentoo-release ]; then
-        rc-update add lfd default
-        rc-update add csf default
+	rc-update add qhtlwaterfall default
+	rc-update add qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        ln -svf /etc/init.d/csf /etc/rc.d/rc3.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc4.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc5.d/S80csf
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc3.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc4.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc5.d/S85lfd
-    else
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
-    fi
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc3.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc4.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc5.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc3.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc4.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc5.d/S85qhtlwaterfall
+	else
+		/sbin/chkconfig qhtlwaterfall on
+		/sbin/chkconfig qhtlfirewall on
+	fi
 fi
 
-chown -Rf root:root /etc/csf /var/lib/csf /usr/local/csf
-chown -f root:root /usr/sbin/csf /usr/sbin/lfd /etc/logrotate.d/lfd /etc/cron.d/csf-cron /etc/cron.d/lfd-cron /usr/local/man/man1/csf.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/lfd /etc/init.d/csf
+chown -Rf root:root /etc/qhtlfirewall /var/lib/qhtlfirewall /usr/local/qhtlfirewall
+chown -f root:root /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /etc/logrotate.d/qhtlwaterfall /etc/cron.d/qhtlfirewall-cron /etc/cron.d/qhtlwaterfall-cron /usr/local/man/man1/qhtlfirewall.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/qhtlwaterfall /etc/init.d/qhtlfirewall
 
 mkdir -v -m 0600 /usr/local/interworx/plugins/configservercsf /usr/local/interworx/html/configserver
 chmod -v 0711 /usr/local/interworx/html/configserver
@@ -545,8 +532,8 @@ else
 fi
 chmod 750 /etc/apf/apf
 
-cd webmin ; tar -czf /usr/local/csf/csfwebmin.tgz ./*
-ln -svf /usr/local/csf/csfwebmin.tgz /etc/csf/
+cd webmin ; tar -czf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz ./*
+ln -svf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz /etc/qhtlfirewall/
 
 echo
 echo "Installation Completed"
diff --git a/qhtlfirewall/install.txt b/qhtlfirewall/install.txt
index 4fa0613..53009a4 100644
--- a/qhtlfirewall/install.txt
+++ b/qhtlfirewall/install.txt
@@ -95,7 +95,7 @@ To install or upgrade the csf webmin module:
 Install csf as above
 Install the csf webmin module in:
   Webmin > Webmin Configuration > Webmin Modules >
-  From local file > /usr/local/csf/csfwebmin.tgz > Install Module
+  From local file > /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz > Install Module
 
 
 Uninstallation
diff --git a/qhtlfirewall/install.vesta.sh b/qhtlfirewall/install.vesta.sh
index de7438a..33f395c 100644
--- a/qhtlfirewall/install.vesta.sh
+++ b/qhtlfirewall/install.vesta.sh
@@ -32,26 +32,26 @@ elif [ -e "/usr/local/directadmin/directadmin" ]; then
 	exit 0
 fi
 
-echo "Installing csf and lfd"
+echo "Installing qhtlfirewall and qhtlwaterfall"
 echo
 
 echo "Check we're running as root"
 if [ ! `id -u` = 0 ]; then
 	echo
-	echo "FAILED: You have to be logged in as root (UID:0) to install csf"
+	echo "FAILED: You have to be logged in as root (UID:0) to install qhtlfirewall"
 	exit
 fi
 echo
 
-mkdir -v -m 0600 /etc/csf
-cp -avf install.txt /etc/csf/
+mkdir -v -m 0600 /etc/qhtlfirewall
+cp -avf install.txt /etc/qhtlfirewall/
 
 echo "Checking Perl modules..."
 chmod 700 os.pl
 RETURN=`./os.pl`
 if [ "$RETURN" = 1 ]; then
 	echo
-	echo "FAILED: You MUST install the missing perl modules above before you can install csf. See /etc/csf/install.txt for installation details."
+	echo "FAILED: You MUST install the missing perl modules above before you can install QHTL. See /etc/qhtlfirewall/install.txt for installation details."
     echo
 	exit
 else
@@ -59,379 +59,367 @@ else
     echo
 fi
 
-mkdir -v -m 0600 /etc/csf
-mkdir -v -m 0600 /var/lib/csf
-mkdir -v -m 0600 /var/lib/csf/backup
-mkdir -v -m 0600 /var/lib/csf/Geo
-mkdir -v -m 0600 /var/lib/csf/ui
-mkdir -v -m 0600 /var/lib/csf/stats
-mkdir -v -m 0600 /var/lib/csf/lock
-mkdir -v -m 0600 /var/lib/csf/webmin
-mkdir -v -m 0600 /var/lib/csf/zone
-mkdir -v -m 0600 /usr/local/csf
-mkdir -v -m 0600 /usr/local/csf/bin
-mkdir -v -m 0600 /usr/local/csf/lib
-mkdir -v -m 0600 /usr/local/csf/tpl
-
-if [ -e "/etc/csf/alert.txt" ]; then
+mkdir -v -m 0600 /etc/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall
+mkdir -v -m 0600 /var/lib/qhtlfirewall/backup
+mkdir -v -m 0600 /var/lib/qhtlfirewall/Geo
+mkdir -v -m 0600 /var/lib/qhtlfirewall/ui
+mkdir -v -m 0600 /var/lib/qhtlfirewall/stats
+mkdir -v -m 0600 /var/lib/qhtlfirewall/lock
+mkdir -v -m 0600 /var/lib/qhtlfirewall/webmin
+mkdir -v -m 0600 /var/lib/qhtlfirewall/zone
+mkdir -v -m 0600 /usr/local/qhtlfirewall
+mkdir -v -m 0600 /usr/local/qhtlfirewall/bin
+mkdir -v -m 0600 /usr/local/qhtlfirewall/lib
+mkdir -v -m 0600 /usr/local/qhtlfirewall/tpl
+
+if [ -e "/etc/qhtlfirewall/alert.txt" ]; then
 	sh migratedata.sh
 fi
 
-if [ ! -e "/etc/csf/csf.conf" ]; then
-	cp -avf csf.vesta.conf /etc/csf/csf.conf
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.conf" ]; then
+	cp -avf csf.vesta.conf /etc/qhtlfirewall/qhtlfirewall.conf
 fi
 
-if [ ! -d /var/lib/csf ]; then
-	mkdir -v -p -m 0600 /var/lib/csf
+if [ ! -d /var/lib/qhtlfirewall ]; then
+	mkdir -v -p -m 0600 /var/lib/qhtlfirewall
 fi
-if [ ! -d /usr/local/csf/lib ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/lib
+if [ ! -d /usr/local/qhtlfirewall/lib ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/lib
 fi
-if [ ! -d /usr/local/csf/bin ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/bin
+if [ ! -d /usr/local/qhtlfirewall/bin ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/bin
 fi
-if [ ! -d /usr/local/csf/tpl ]; then
-	mkdir -v -p -m 0600 /usr/local/csf/tpl
+if [ ! -d /usr/local/qhtlfirewall/tpl ]; then
+	mkdir -v -p -m 0600 /usr/local/qhtlfirewall/tpl
 fi
 
-if [ ! -e "/etc/csf/csf.allow" ]; then
-	cp -avf csf.vesta.allow /etc/csf/csf.allow
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.allow" ]; then
+	cp -avf csf.vesta.allow /etc/qhtlfirewall/qhtlfirewall.allow
+	sed -i 's#/etc/csf/#/etc/qhtlfirewall/#g' /etc/qhtlfirewall/qhtlfirewall.allow
 fi
-if [ ! -e "/etc/csf/csf.deny" ]; then
-	cp -avf csf.deny /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.deny" ]; then
+	cp -avf csf.deny /etc/qhtlfirewall/qhtlfirewall.deny
 fi
-if [ ! -e "/etc/csf/csf.redirect" ]; then
-	cp -avf csf.redirect /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.redirect" ]; then
+	cp -avf csf.redirect /etc/qhtlfirewall/qhtlfirewall.redirect
 fi
-if [ ! -e "/etc/csf/csf.resellers" ]; then
-	cp -avf csf.resellers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.resellers" ]; then
+	cp -avf csf.resellers /etc/qhtlfirewall/qhtlfirewall.resellers
 fi
-if [ ! -e "/etc/csf/csf.dirwatch" ]; then
-	cp -avf csf.dirwatch /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dirwatch" ]; then
+	cp -avf csf.dirwatch /etc/qhtlfirewall/qhtlfirewall.dirwatch
 fi
-if [ ! -e "/etc/csf/csf.syslogs" ]; then
-	cp -avf csf.syslogs /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogs" ]; then
+	cp -avf csf.syslogs /etc/qhtlfirewall/qhtlfirewall.syslogs
 fi
-if [ ! -e "/etc/csf/csf.logfiles" ]; then
-	cp -avf csf.logfiles /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logfiles" ]; then
+	cp -avf csf.logfiles /etc/qhtlfirewall/qhtlfirewall.logfiles
 fi
-if [ ! -e "/etc/csf/csf.logignore" ]; then
-	cp -avf csf.logignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.logignore" ]; then
+	cp -avf csf.logignore /etc/qhtlfirewall/qhtlfirewall.logignore
 fi
-if [ ! -e "/etc/csf/csf.blocklists" ]; then
-	cp -avf csf.blocklists /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.blocklists" ]; then
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists
 else
-	cp -avf csf.blocklists /etc/csf/csf.blocklists.new
+	cp -avf csf.blocklists /etc/qhtlfirewall/qhtlfirewall.blocklists.new
 fi
-if [ ! -e "/etc/csf/csf.ignore" ]; then
-	cp -avf csf.vesta.ignore /etc/csf/csf.ignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.ignore" ]; then
+	cp -avf csf.vesta.ignore /etc/qhtlfirewall/qhtlfirewall.ignore
+	sed -i 's#/etc/csf/#/etc/qhtlfirewall/#g' /etc/qhtlfirewall/qhtlfirewall.ignore
 fi
-if [ ! -e "/etc/csf/csf.pignore" ]; then
-	cp -avf csf.vesta.pignore /etc/csf/csf.pignore
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.pignore" ]; then
+	cp -avf csf.vesta.pignore /etc/qhtlfirewall/qhtlfirewall.pignore
 fi
-if [ ! -e "/etc/csf/csf.rignore" ]; then
-	cp -avf csf.rignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rignore" ]; then
+	cp -avf csf.rignore /etc/qhtlfirewall/qhtlfirewall.rignore
 fi
-if [ ! -e "/etc/csf/csf.fignore" ]; then
-	cp -avf csf.fignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.fignore" ]; then
+	cp -avf csf.fignore /etc/qhtlfirewall/qhtlfirewall.fignore
 fi
-if [ ! -e "/etc/csf/csf.signore" ]; then
-	cp -avf csf.signore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.signore" ]; then
+	cp -avf csf.signore /etc/qhtlfirewall/qhtlfirewall.signore
 fi
-if [ ! -e "/etc/csf/csf.suignore" ]; then
-	cp -avf csf.suignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.suignore" ]; then
+	cp -avf csf.suignore /etc/qhtlfirewall/qhtlfirewall.suignore
 fi
-if [ ! -e "/etc/csf/csf.uidignore" ]; then
-	cp -avf csf.uidignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.uidignore" ]; then
+	cp -avf csf.uidignore /etc/qhtlfirewall/qhtlfirewall.uidignore
 fi
-if [ ! -e "/etc/csf/csf.mignore" ]; then
-	cp -avf csf.mignore /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.mignore" ]; then
+	cp -avf csf.mignore /etc/qhtlfirewall/qhtlfirewall.mignore
 fi
-if [ ! -e "/etc/csf/csf.sips" ]; then
-	cp -avf csf.sips /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.sips" ]; then
+	cp -avf csf.sips /etc/qhtlfirewall/qhtlfirewall.sips
 fi
-if [ ! -e "/etc/csf/csf.dyndns" ]; then
-	cp -avf csf.dyndns /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.dyndns" ]; then
+	cp -avf csf.dyndns /etc/qhtlfirewall/qhtlfirewall.dyndns
 fi
-if [ ! -e "/etc/csf/csf.syslogusers" ]; then
-	cp -avf csf.syslogusers /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.syslogusers" ]; then
+	cp -avf csf.syslogusers /etc/qhtlfirewall/qhtlfirewall.syslogusers
 fi
-if [ ! -e "/etc/csf/csf.smtpauth" ]; then
-	cp -avf csf.smtpauth /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.smtpauth" ]; then
+	cp -avf csf.smtpauth /etc/qhtlfirewall/qhtlfirewall.smtpauth
 fi
-if [ ! -e "/etc/csf/csf.rblconf" ]; then
-	cp -avf csf.rblconf /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.rblconf" ]; then
+	cp -avf csf.rblconf /etc/qhtlfirewall/qhtlfirewall.rblconf
 fi
-if [ ! -e "/etc/csf/csf.cloudflare" ]; then
-	cp -avf csf.cloudflare /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/qhtlfirewall.cloudflare" ]; then
+	cp -avf csf.cloudflare /etc/qhtlfirewall/qhtlfirewall.cloudflare
 fi
 
-if [ ! -e "/usr/local/csf/tpl/alert.txt" ]; then
-	cp -avf alert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/alert.txt" ]; then
+	cp -avf alert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/reselleralert.txt" ]; then
-	cp -avf reselleralert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/reselleralert.txt" ]; then
+	cp -avf reselleralert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logalert.txt" ]; then
-	cp -avf logalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logalert.txt" ]; then
+	cp -avf logalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/logfloodalert.txt" ]; then
-	cp -avf logfloodalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/logfloodalert.txt" ]; then
+	cp -avf logfloodalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/syslogalert.txt" ]; then
-	cp -avf syslogalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/syslogalert.txt" ]; then
+	cp -avf syslogalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/integrityalert.txt" ]; then
-	cp -avf integrityalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/integrityalert.txt" ]; then
+	cp -avf integrityalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/exploitalert.txt" ]; then
-	cp -avf exploitalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/exploitalert.txt" ]; then
+	cp -avf exploitalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/queuealert.txt" ]; then
-	cp -avf queuealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/queuealert.txt" ]; then
+	cp -avf queuealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/modsecipdbalert.txt" ]; then
-	cp -avf modsecipdbalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/modsecipdbalert.txt" ]; then
+	cp -avf modsecipdbalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/tracking.txt" ]; then
-	cp -avf tracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/tracking.txt" ]; then
+	cp -avf tracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/connectiontracking.txt" ]; then
-	cp -avf connectiontracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/connectiontracking.txt" ]; then
+	cp -avf connectiontracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/processtracking.txt" ]; then
-	cp -avf processtracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/processtracking.txt" ]; then
+	cp -avf processtracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/accounttracking.txt" ]; then
-	cp -avf accounttracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/accounttracking.txt" ]; then
+	cp -avf accounttracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/usertracking.txt" ]; then
-	cp -avf usertracking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/usertracking.txt" ]; then
+	cp -avf usertracking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sshalert.txt" ]; then
-	cp -avf sshalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sshalert.txt" ]; then
+	cp -avf sshalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/webminalert.txt" ]; then
-	cp -avf webminalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/webminalert.txt" ]; then
+	cp -avf webminalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sualert.txt" ]; then
-	cp -avf sualert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sualert.txt" ]; then
+	cp -avf sualert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/sudoalert.txt" ]; then
-	cp -avf sudoalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/sudoalert.txt" ]; then
+	cp -avf sudoalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/consolealert.txt" ]; then
-	cp -avf consolealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/consolealert.txt" ]; then
+	cp -avf consolealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uialert.txt" ]; then
-	cp -avf uialert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uialert.txt" ]; then
+	cp -avf uialert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/cpanelalert.txt" ]; then
-	cp -avf cpanelalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/cpanelalert.txt" ]; then
+	cp -avf cpanelalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/scriptalert.txt" ]; then
-	cp -avf scriptalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/scriptalert.txt" ]; then
+	cp -avf scriptalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/relayalert.txt" ]; then
-	cp -avf relayalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/relayalert.txt" ]; then
+	cp -avf relayalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/filealert.txt" ]; then
-	cp -avf filealert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/filealert.txt" ]; then
+	cp -avf filealert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/watchalert.txt" ]; then
-	cp -avf watchalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/watchalert.txt" ]; then
+	cp -avf watchalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/loadalert.txt" ]; then
-	cp -avf loadalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/loadalert.txt" ]; then
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/.
 else
-	cp -avf loadalert.txt /usr/local/csf/tpl/loadalert.txt.new
+	cp -avf loadalert.txt /usr/local/qhtlfirewall/tpl/loadalert.txt.new
 fi
-if [ ! -e "/usr/local/csf/tpl/resalert.txt" ]; then
-	cp -avf resalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/resalert.txt" ]; then
+	cp -avf resalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portscan.txt" ]; then
-	cp -avf portscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portscan.txt" ]; then
+	cp -avf portscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/uidscan.txt" ]; then
-	cp -avf uidscan.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/uidscan.txt" ]; then
+	cp -avf uidscan.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/permblock.txt" ]; then
-	cp -avf permblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/permblock.txt" ]; then
+	cp -avf permblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/netblock.txt" ]; then
-	cp -avf netblock.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/netblock.txt" ]; then
+	cp -avf netblock.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/portknocking.txt" ]; then
-	cp -avf portknocking.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/portknocking.txt" ]; then
+	cp -avf portknocking.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/forkbombalert.txt" ]; then
-	cp -avf forkbombalert.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/forkbombalert.txt" ]; then
+	cp -avf forkbombalert.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/recaptcha.txt" ]; then
-	cp -avf recaptcha.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/recaptcha.txt" ]; then
+	cp -avf recaptcha.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.main.txt" ]; then
-	cp -avf apache.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.main.txt" ]; then
+	cp -avf apache.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.http.txt" ]; then
-	cp -avf apache.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.http.txt" ]; then
+	cp -avf apache.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/apache.https.txt" ]; then
-	cp -avf apache.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/apache.https.txt" ]; then
+	cp -avf apache.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.main.txt" ]; then
-	cp -avf litespeed.main.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.main.txt" ]; then
+	cp -avf litespeed.main.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.http.txt" ]; then
-	cp -avf litespeed.http.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.http.txt" ]; then
+	cp -avf litespeed.http.txt /usr/local/qhtlfirewall/tpl/.
 fi
-if [ ! -e "/usr/local/csf/tpl/litespeed.https.txt" ]; then
-	cp -avf litespeed.https.txt /usr/local/csf/tpl/.
+if [ ! -e "/usr/local/qhtlfirewall/tpl/litespeed.https.txt" ]; then
+	cp -avf litespeed.https.txt /usr/local/qhtlfirewall/tpl/.
 fi
-cp -avf x-arf.txt /usr/local/csf/tpl/.
+cp -avf x-arf.txt /usr/local/qhtlfirewall/tpl/.
 
-if [ ! -e "/usr/local/csf/bin/regex.custom.pm" ]; then
-	cp -avf regex.custom.pm /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/regex.custom.pm" ]; then
+	cp -avf regex.custom.pm /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/usr/local/csf/bin/pt_deleted_action.pl" ]; then
-	cp -avf pt_deleted_action.pl /usr/local/csf/bin/.
+if [ ! -e "/usr/local/qhtlfirewall/bin/pt_deleted_action.pl" ]; then
+	cp -avf pt_deleted_action.pl /usr/local/qhtlfirewall/bin/.
 fi
-if [ ! -e "/etc/csf/messenger" ]; then
-	cp -avf messenger /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/messenger" ]; then
+	cp -avf messenger /etc/qhtlfirewall/.
 fi
-if [ ! -e "/etc/csf/messenger/index.recaptcha.html" ]; then
-	cp -avf messenger/index.recaptcha.html /etc/csf/messenger/.
+if [ ! -e "/etc/qhtlfirewall/messenger/index.recaptcha.html" ]; then
+	cp -avf messenger/index.recaptcha.html /etc/qhtlfirewall/messenger/.
 fi
-if [ ! -e "/etc/csf/ui" ]; then
-	cp -avf ui /etc/csf/.
+if [ ! -e "/etc/qhtlfirewall/ui" ]; then
+	cp -avf ui /etc/qhtlfirewall/.
 fi
 if [ -e "/etc/cron.d/csfcron.sh" ]; then
-	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/csf-cron
+	mv -fv /etc/cron.d/csfcron.sh /etc/cron.d/qhtlfirewall-cron
 fi
-if [ ! -e "/etc/cron.d/csf-cron" ]; then
-	cp -avf csfcron.sh /etc/cron.d/csf-cron
+if [ ! -e "/etc/cron.d/qhtlfirewall-cron" ]; then
+	cp -avf qhtlfirewall.cron /etc/cron.d/qhtlfirewall-cron
 fi
 if [ -e "/etc/cron.d/lfdcron.sh" ]; then
-	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/lfd-cron
+	mv -fv /etc/cron.d/lfdcron.sh /etc/cron.d/qhtlwaterfall-cron
 fi
-if [ ! -e "/etc/cron.d/lfd-cron" ]; then
-	cp -avf lfdcron.sh /etc/cron.d/lfd-cron
+if [ ! -e "/etc/cron.d/qhtlwaterfall-cron" ]; then
+	cp -avf qhtlwaterfall.cron /etc/cron.d/qhtlwaterfall-cron
 fi
-sed -i "s%/etc/init.d/lfd restart%/usr/sbin/csf --lfd restart%" /etc/cron.d/lfd-cron
-if [ -e "/usr/local/csf/bin/servercheck.pm" ]; then
-	rm -f /usr/local/csf/bin/servercheck.pm
+if [ -e "/usr/local/qhtlfirewall/bin/servercheck.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/servercheck.pm
 fi
-if [ -e "/etc/csf/cseui.pl" ]; then
-	rm -f /etc/csf/cseui.pl
+if [ -e "/etc/qhtlfirewall/cseui.pl" ]; then
+	rm -f /etc/qhtlfirewall/cseui.pl
 fi
-if [ -e "/etc/csf/csfui.pl" ]; then
-	rm -f /etc/csf/csfui.pl
+if [ -e "/etc/qhtlfirewall/csfui.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfui.pl
 fi
-if [ -e "/etc/csf/csfuir.pl" ]; then
-	rm -f /etc/csf/csfuir.pl
+if [ -e "/etc/qhtlfirewall/csfuir.pl" ]; then
+	rm -f /etc/qhtlfirewall/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/cseui.pl" ]; then
-	rm -f /usr/local/csf/bin/cseui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/cseui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/cseui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfui.pl" ]; then
-	rm -f /usr/local/csf/bin/csfui.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfui.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfui.pl
 fi
-if [ -e "/usr/local/csf/bin/csfuir.pl" ]; then
-	rm -f /usr/local/csf/bin/csfuir.pl
+if [ -e "/usr/local/qhtlfirewall/bin/csfuir.pl" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/csfuir.pl
 fi
-if [ -e "/usr/local/csf/bin/regex.pm" ]; then
-	rm -f /usr/local/csf/bin/regex.pm
+if [ -e "/usr/local/qhtlfirewall/bin/regex.pm" ]; then
+	rm -f /usr/local/qhtlfirewall/bin/regex.pm
 fi
 
 OLDVERSION=0
-if [ -e "/etc/csf/version.txt" ]; then
-    OLDVERSION=`head -n 1 /etc/csf/version.txt`
-fi
-
-rm -f /etc/csf/csf.pl /usr/sbin/csf /etc/csf/lfd.pl /usr/sbin/lfd
-chmod 700 csf.pl lfd.pl
-cp -avf csf.pl /usr/sbin/csf
-cp -avf lfd.pl /usr/sbin/lfd
-chmod 700 /usr/sbin/csf /usr/sbin/lfd
-ln -svf /usr/sbin/csf /etc/csf/csf.pl
-ln -svf /usr/sbin/lfd /etc/csf/lfd.pl
-ln -svf /usr/local/csf/bin/csftest.pl /etc/csf/
-ln -svf /usr/local/csf/bin/pt_deleted_action.pl /etc/csf/
-ln -svf /usr/local/csf/bin/remove_apf_bfd.sh /etc/csf/
-ln -svf /usr/local/csf/bin/uninstall.sh /etc/csf/
-ln -svf /usr/local/csf/bin/regex.custom.pm /etc/csf/
-ln -svf /usr/local/csf/lib/webmin /etc/csf/
-if [ ! -e "/etc/csf/alerts" ]; then
-    ln -svf /usr/local/csf/tpl /etc/csf/alerts
-fi
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/lfd
-chcon -h system_u:object_r:bin_t:s0 /usr/sbin/csf
-
-mkdir webmin/csf/images
-mkdir ui/images
-mkdir da/images
-mkdir interworx/images
+if [ -e "/etc/qhtlfirewall/version.txt" ]; then
+	OLDVERSION=`head -n 1 /etc/qhtlfirewall/version.txt`
+fi
+
+rm -f /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /usr/sbin/csf /usr/sbin/lfd
+chmod 700 qhtlfirewall.pl qhtlwaterfall.pl
+cp -avf qhtlfirewall.pl /usr/sbin/qhtlfirewall
+cp -avf qhtlwaterfall.pl /usr/sbin/qhtlwaterfall
+chmod 700 /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlwaterfall
+chcon -h system_u:object_r:bin_t:s0 /usr/sbin/qhtlfirewall
+
+mkdir -p webmin/csf/images
+mkdir -p ui/images
+mkdir -p da/images
+mkdir -p interworx/images
 
 cp -avf csf/* webmin/csf/images/
 cp -avf csf/* ui/images/
 cp -avf csf/* da/images/
 cp -avf csf/* interworx/images/
 
-cp -avf messenger/*.php /etc/csf/messenger/
-cp -avf uninstall.vesta.sh /usr/local/csf/bin/uninstall.sh
-cp -avf csftest.pl /usr/local/csf/bin/
-cp -avf remove_apf_bfd.sh /usr/local/csf/bin/
-cp -avf readme.txt /etc/csf/
-cp -avf sanity.txt /usr/local/csf/lib/
-cp -avf csf.rbls /usr/local/csf/lib/
-cp -avf restricted.txt /usr/local/csf/lib/
-cp -avf changelog.txt /etc/csf/
-cp -avf downloadservers /etc/csf/
-cp -avf install.txt /etc/csf/
-cp -avf version.txt /etc/csf/
-cp -avf license.txt /etc/csf/
-cp -avf webmin /usr/local/csf/lib/
-cp -avf ConfigServer /usr/local/csf/lib/
-cp -avf Net /usr/local/csf/lib/
-cp -avf Geo /usr/local/csf/lib/
-cp -avf Crypt /usr/local/csf/lib/
-cp -avf HTTP /usr/local/csf/lib/
-cp -avf JSON /usr/local/csf/lib/
-cp -avf version/* /usr/local/csf/lib/
-cp -avf csf.div /usr/local/csf/lib/
-cp -avf csfajaxtail.js /usr/local/csf/lib/
-cp -avf ui/images /etc/csf/ui/.
-cp -avf profiles /usr/local/csf/
-cp -avf csf.conf /usr/local/csf/profiles/reset_to_defaults.conf
-cp -avf lfd.logrotate /etc/logrotate.d/lfd
-chcon --reference /etc/logrotate.d /etc/logrotate.d/lfd
+cp -avf messenger/*.php /etc/qhtlfirewall/messenger/
+cp -avf uninstall.vesta.sh /usr/local/qhtlfirewall/bin/uninstall.sh
+cp -avf csftest.pl /usr/local/qhtlfirewall/bin/
+cp -avf remove_apf_bfd.sh /usr/local/qhtlfirewall/bin/
+cp -avf readme.txt /etc/qhtlfirewall/
+cp -avf sanity.txt /usr/local/qhtlfirewall/lib/
+cp -avf csf.rbls /usr/local/qhtlfirewall/lib/
+cp -avf restricted.txt /usr/local/qhtlfirewall/lib/
+cp -avf changelog.txt /etc/qhtlfirewall/
+cp -avf downloadservers /etc/qhtlfirewall/
+cp -avf install.txt /etc/qhtlfirewall/
+cp -avf version.txt /etc/qhtlfirewall/
+cp -avf license.txt /etc/qhtlfirewall/
+cp -avf webmin /usr/local/qhtlfirewall/lib/
+cp -avf ConfigServer /usr/local/qhtlfirewall/lib/
+cp -avf Net /usr/local/qhtlfirewall/lib/
+cp -avf Geo /usr/local/qhtlfirewall/lib/
+cp -avf Crypt /usr/local/qhtlfirewall/lib/
+cp -avf HTTP /usr/local/qhtlfirewall/lib/
+cp -avf JSON /usr/local/qhtlfirewall/lib/
+cp -avf version/* /usr/local/qhtlfirewall/lib/
+cp -avf csf.div /usr/local/qhtlfirewall/lib/
+cp -avf csfajaxtail.js /usr/local/qhtlfirewall/lib/
+cp -avf ui/images /etc/qhtlfirewall/ui/.
+cp -avf profiles /usr/local/qhtlfirewall/
+cp -avf csf.conf /usr/local/qhtlfirewall/profiles/reset_to_defaults.conf
+cp -avf qhtlwaterfall.logrotate /etc/logrotate.d/qhtlwaterfall
 
 if [ -e "/usr/local/ispconfig/interface/web/csf/ispconfig_csf" ]; then
-    rm -Rfv /usr/local/ispconfig/interface/web/csf/
+	rm -Rfv /usr/local/ispconfig/interface/web/csf/
 fi
 
-rm -fv /etc/csf/csf.spamhaus /etc/csf/csf.dshield /etc/csf/csf.tor /etc/csf/csf.bogon
+rm -fv /etc/qhtlfirewall/csf.spamhaus /etc/qhtlfirewall/csf.dshield /etc/qhtlfirewall/csf.tor /etc/qhtlfirewall/csf.bogon
 
 mkdir -p /usr/local/man/man1/
-cp -avf csf.1.txt /usr/local/man/man1/csf.1
-cp -avf csf.help /usr/local/csf/lib/
+cp -avf qhtlfirewall.1.txt /usr/local/man/man1/qhtlfirewall.1
+cp -avf qhtlfirewall.help /usr/local/qhtlfirewall/lib/
 chmod 755 /usr/local/man/
 chmod 755 /usr/local/man/man1/
-chmod 644 /usr/local/man/man1/csf.1
-
-chmod -R 600 /etc/csf
-chmod -R 600 /var/lib/csf
-chmod -R 600 /usr/local/csf/bin
-chmod -R 600 /usr/local/csf/lib
-chmod -R 600 /usr/local/csf/tpl
-chmod -R 600 /usr/local/csf/profiles
-chmod 600 /var/log/lfd.log*
-
-chmod -v 700 /usr/local/csf/bin/*.pl /usr/local/csf/bin/*.sh /usr/local/csf/bin/*.pm
-chmod -v 700 /etc/csf/*.pl /etc/csf/*.cgi /etc/csf/*.sh /etc/csf/*.php /etc/csf/*.py
-chmod -v 700 /etc/csf/webmin/csf/index.cgi
-chmod -v 644 /etc/cron.d/lfd-cron
-chmod -v 644 /etc/cron.d/csf-cron
+chmod 644 /usr/local/man/man1/qhtlfirewall.1
+
+chmod -R 600 /etc/qhtlfirewall
+chmod -R 600 /var/lib/qhtlfirewall
+chmod -R 600 /usr/local/qhtlfirewall/bin
+chmod -R 600 /usr/local/qhtlfirewall/lib
+chmod -R 600 /usr/local/qhtlfirewall/tpl
+chmod -R 600 /usr/local/qhtlfirewall/profiles
+chmod 600 /var/log/qhtlwaterfall.log*
+
+chmod -v 700 /usr/local/qhtlfirewall/bin/*.pl /usr/local/qhtlfirewall/bin/*.sh /usr/local/qhtlfirewall/bin/*.pm
+chmod -v 700 /usr/local/qhtlfirewall/lib/webmin/csf/index.cgi
+chmod -v 644 /etc/cron.d/qhtlwaterfall-cron
+chmod -v 644 /etc/cron.d/qhtlfirewall-cron
 
 cp -avf csget.pl /etc/cron.daily/csget
 chmod 700 /etc/cron.daily/csget
@@ -442,33 +430,32 @@ chmod -v 700 auto.vesta.pl
 
 if test `cat /proc/1/comm` = "systemd"
 then
-    if [ -e /etc/init.d/lfd ]; then
+	if [ -e /etc/init.d/qhtlwaterfall ] || [ -e /etc/init.d/lfd ]; then
         if [ -f /etc/redhat-release ]; then
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-            update-rc.d -f lfd remove
-            update-rc.d -f csf remove
+			update-rc.d -f qhtlwaterfall remove
+			update-rc.d -f qhtlfirewall remove
         elif [ -f /etc/gentoo-release ]; then
-            rc-update del lfd default
-            rc-update del csf default
+			rc-update del qhtlwaterfall default
+			rc-update del qhtlfirewall default
         elif [ -f /etc/slackware-version ]; then
-            rm -vf /etc/rc.d/rc3.d/S80csf
-            rm -vf /etc/rc.d/rc4.d/S80csf
-            rm -vf /etc/rc.d/rc5.d/S80csf
-            rm -vf /etc/rc.d/rc3.d/S85lfd
-            rm -vf /etc/rc.d/rc4.d/S85lfd
-            rm -vf /etc/rc.d/rc5.d/S85lfd
+			rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+			rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+			rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
         else
-            /sbin/chkconfig csf off
-            /sbin/chkconfig lfd off
-            /sbin/chkconfig csf --del
-            /sbin/chkconfig lfd --del
+			/sbin/chkconfig qhtlfirewall off
+			/sbin/chkconfig qhtlwaterfall off
+			/sbin/chkconfig qhtlfirewall --del
+			/sbin/chkconfig qhtlwaterfall --del
         fi
-        rm -fv /etc/init.d/csf
-        rm -fv /etc/init.d/lfd
+		rm -fv /etc/init.d/qhtlfirewall /etc/init.d/qhtlwaterfall /etc/init.d/csf /etc/init.d/lfd
     fi
 
     mkdir -p /etc/systemd/system/
@@ -484,52 +471,52 @@ then
 	systemctl enable qhtlfirewall.service
 	systemctl enable qhtlwaterfall.service
 
-    systemctl disable firewalld
-    systemctl stop firewalld
-    systemctl mask firewalld
+	systemctl disable firewalld
+	systemctl stop firewalld
+	systemctl mask firewalld
 else
-    cp -avf lfd.sh /etc/init.d/lfd
-    cp -avf csf.sh /etc/init.d/csf
-    chmod -v 755 /etc/init.d/lfd
-    chmod -v 755 /etc/init.d/csf
+	cp -avf qhtlwaterfall.sh /etc/init.d/qhtlwaterfall
+	cp -avf qhtlfirewall.sh /etc/init.d/qhtlfirewall
+	chmod -v 755 /etc/init.d/qhtlwaterfall
+	chmod -v 755 /etc/init.d/qhtlfirewall
 
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+	/sbin/chkconfig qhtlwaterfall on
+	/sbin/chkconfig qhtlfirewall on
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
-        update-rc.d lfd defaults 80 20
-        update-rc.d csf defaults 20 80
+	update-rc.d -f qhtlwaterfall remove
+	update-rc.d -f qhtlfirewall remove
+	update-rc.d qhtlwaterfall defaults 80 20
+	update-rc.d qhtlfirewall defaults 20 80
     elif [ -f /etc/gentoo-release ]; then
-        rc-update add lfd default
-        rc-update add csf default
+	rc-update add qhtlwaterfall default
+	rc-update add qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        ln -svf /etc/init.d/csf /etc/rc.d/rc3.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc4.d/S80csf
-        ln -svf /etc/init.d/csf /etc/rc.d/rc5.d/S80csf
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc3.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc4.d/S85lfd
-        ln -svf /etc/init.d/lfd /etc/rc.d/rc5.d/S85lfd
-    else
-        /sbin/chkconfig lfd on
-        /sbin/chkconfig csf on
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc3.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc4.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlfirewall /etc/rc.d/rc5.d/S80qhtlfirewall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc3.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc4.d/S85qhtlwaterfall
+	ln -svf /etc/init.d/qhtlwaterfall /etc/rc.d/rc5.d/S85qhtlwaterfall
+	else
+		/sbin/chkconfig qhtlwaterfall on
+		/sbin/chkconfig qhtlfirewall on
     fi
 fi
 
-chown -Rf root:root /etc/csf /var/lib/csf /usr/local/csf
-chown -f root:root /usr/sbin/csf /usr/sbin/lfd /etc/logrotate.d/lfd /etc/cron.d/csf-cron /etc/cron.d/lfd-cron /usr/local/man/man1/csf.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/lfd /etc/init.d/csf
+chown -Rf root:root /etc/qhtlfirewall /var/lib/qhtlfirewall /usr/local/qhtlfirewall
+chown -f root:root /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall /etc/logrotate.d/qhtlwaterfall /etc/cron.d/qhtlfirewall-cron /etc/cron.d/qhtlwaterfall-cron /usr/local/man/man1/qhtlfirewall.1 /usr/lib/systemd/system/qhtlwaterfall.service /usr/lib/systemd/system/qhtlfirewall.service /etc/init.d/qhtlwaterfall /etc/init.d/qhtlfirewall
 
 mkdir -v -m 0600 /usr/local/vesta/web/list/csf/
 cp -avf vestacp/* /usr/local/vesta/web/list/csf/
 cp -avf csf /usr/local/vesta/web/list/csf/images/
 find /usr/local/vesta/web/list/csf -type d -exec chmod -v 755 {} \;
 find /usr/local/vesta/web/list/csf -type f -exec chmod -v 644 {} \;
-mv /usr/local/vesta/web/list/csf/csf.pl /usr/local/vesta/bin/
-chmod 700 /usr/local/vesta/bin/csf.pl
+mv /usr/local/vesta/web/list/csf/qhtlfirewall.pl /usr/local/vesta/bin/
+chmod 700 /usr/local/vesta/bin/qhtlfirewall.pl
 
-cd webmin ; tar -czf /usr/local/csf/csfwebmin.tgz ./*
-ln -svf /usr/local/csf/csfwebmin.tgz /etc/csf/
+cd webmin ; tar -czf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz ./*
+ln -svf /usr/local/qhtlfirewall/qhtlfirewallwebmin.tgz /etc/qhtlfirewall/
 
 echo
 echo "Installation Completed"
diff --git a/qhtlfirewall/interworx/lib/index.pl b/qhtlfirewall/interworx/lib/index.pl
index 87f1f44..29ee370 100644
--- a/qhtlfirewall/interworx/lib/index.pl
+++ b/qhtlfirewall/interworx/lib/index.pl
@@ -23,7 +23,7 @@ use File::Find;
 use Fcntl qw(:DEFAULT :flock);
 use Sys::Hostname qw(hostname);
 use IPC::Open3;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use ConfigServer::DisplayUI;
 use ConfigServer::Config;
 
@@ -32,7 +32,7 @@ our ($script, $images, $myv, %FORM, %in);
 my $config = ConfigServer::Config->loadconfig();
 my %config = $config->config;
 
-open (my $IN, "<", "/etc/csf/version.txt") or die $!;
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
 $myv = <$IN>;
 close ($IN);
 chomp $myv;
diff --git a/qhtlfirewall/interworx/lib/reseller.pl b/qhtlfirewall/interworx/lib/reseller.pl
index 367b14d..4c8a108 100644
--- a/qhtlfirewall/interworx/lib/reseller.pl
+++ b/qhtlfirewall/interworx/lib/reseller.pl
@@ -23,7 +23,7 @@ use File::Find;
 use Fcntl qw(:DEFAULT :flock);
 use Sys::Hostname qw(hostname);
 use IPC::Open3;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use ConfigServer::DisplayUI;
 use ConfigServer::DisplayResellerUI;
 use ConfigServer::Config;
@@ -36,7 +36,7 @@ my %config = $config->config;
 my $slurpreg = ConfigServer::Slurp->slurpreg;
 my $cleanreg = ConfigServer::Slurp->cleanreg;
 
-foreach my $line (slurp("/etc/csf/csf.resellers")) {
+foreach my $line (slurp("/etc/qhtlfirewall/qhtlfirewall.resellers")) {
 	$line =~ s/$cleanreg//g;
 	my ($user,$alert,$privs) = split(/\:/,$line);
 	$privs =~ s/\s//g;
@@ -60,7 +60,7 @@ if ($ENV{REMOTE_USER} ne "" and $rprivs{$ENV{REMOTE_USER}}{USE}) {
 	exit();
 }
 
-open (my $IN, "<", "/etc/csf/version.txt") or die $!;
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
 $myv = <$IN>;
 close ($IN);
 chomp $myv;
diff --git a/qhtlfirewall/migratedata.sh b/qhtlfirewall/migratedata.sh
index 67208b9..eb49573 100644
--- a/qhtlfirewall/migratedata.sh
+++ b/qhtlfirewall/migratedata.sh
@@ -21,7 +21,7 @@
 umask 0177
 
 touch /etc/csf/csf.disable
-/etc/init.d/lfd stop
+/etc/init.d/qhtlwaterfall stop
 
 # temp data:
 
@@ -72,7 +72,7 @@ cp -avf /etc/csf/csf.tempwatch /var/lib/csf/
 cp -avf /etc/csf/Geo/GeoIP.dat /var/lib/csf/Geo/
 cp -avf /etc/csf/Geo/GeoLiteCity.dat /var/lib/csf/Geo/
 cp -avf /etc/csf/lfd.enable /var/lib/csf/
-cp -avf /etc/csf/lfd.restart /var/lib/csf/
+cp -avf /etc/csf/qhtlwaterfall.restart /var/lib/csf/
 cp -avf /etc/csf/lfd.start /var/lib/csf/
 cp -avf /etc/csf/lock/ /var/lib/csf/
 cp -avf /etc/csf/nocheck /var/lib/csf/
@@ -130,7 +130,7 @@ rm -fv /etc/csf/csf.tempwatch
 rm -fv /etc/csf/Geo/GeoIP.dat
 rm -fv /etc/csf/Geo/GeoLiteCity.dat
 rm -fv /etc/csf/lfd.enable
-rm -fv /etc/csf/lfd.restart
+rm -fv /etc/csf/qhtlwaterfall.restart
 rm -fv /etc/csf/lfd.start
 rm -Rfv /etc/csf/lock/
 rm -fv /etc/csf/nocheck
diff --git a/qhtlfirewall/perf.sh b/qhtlfirewall/perf.sh
index 41d522e..1f5feed 100644
--- a/qhtlfirewall/perf.sh
+++ b/qhtlfirewall/perf.sh
@@ -1,9 +1,9 @@
 #!/bin/bash
-cd /etc/csf
+cd /etc/qhtlfirewall
 rm -Rf /home/webumake/public_html/nytpro*
-/usr/local/cpanel/3rdparty/bin/perl -d:NYTProf /etc/csf/csf.pl -r
+/usr/local/cpanel/3rdparty/bin/perl -d:NYTProf /usr/sbin/qhtlfirewall -r
 /usr/local/cpanel/3rdparty/perl/522/bin/nytprofhtml --open
 /bin/cp -avf nytprof /home/webumake/public_html/.
 chmod -R 755 /home/webumake/public_html/nytprof
 
-# browse to http://www.webumake.net/nytprof/etc-csf-csf-pl-1-line.html
+# browse to http://www.webumake.net/nytprof/qhtlfirewall-1-line.html
diff --git a/qhtlfirewall/qhtlfirewall.1.txt b/qhtlfirewall/qhtlfirewall.1.txt
new file mode 100644
index 0000000..67c24b4
--- /dev/null
+++ b/qhtlfirewall/qhtlfirewall.1.txt
@@ -0,0 +1,284 @@
+.TH qhtlfirewall 1
+.SH NAME
+qhtlfirewall \- QHTL Firewall
+.SH SYNOPSIS
+.B qhtlfirewall [OPTIONS]
+.SH DESCRIPTION
+This manual documents the qhtlfirewall command line options for the QHTL Firewall. See /etc/qhtlfirewall/qhtlfirewall.conf and /etc/qhtlfirewall/readme.txt for more detailed information on how to use and configure this application.
+.SH OPTIONS
+.TP
+.B
+-h,  --help
+Show this message
+.TP
+.B
+-l,  --status
+List/Show the IPv4 iptables configuration
+.TP
+.B
+-l6, --status6
+List/Show the IPv6 ip6tables configuration
+.TP
+.B
+-s,  --start
+Start the firewall rules
+.TP
+.B
+-f,  --stop
+Flush/Stop firewall rules (Note: qhtlwaterfall may restart qhtlfirewall)
+.TP
+.B
+-r,  --restart
+Restart firewall rules (qhtlfirewall)
+.TP
+.B
+-q,  --startq
+Quick restart (qhtlfirewall restarted by qhtlwaterfall)
+.TP
+.B
+-sf, --startf
+Force CLI restart regardless of QHTLWATERFALLSTART setting
+.TP
+.B
+-ra, --restartall
+Restart firewall rules (qhtlfirewall) and then restart qhtlwaterfall daemon. Both qhtlfirewall and then qhtlwaterfall should be restarted after making any changes to the configuration files
+.TP
+.B
+--qhtlwaterfall [\fIstop\fP|\fIstart\fP|\fIrestart\fP|\fIstatus\fP]
+Actions to take with the qhtlwaterfall daemon
+.TP
+.B
+-a,  --add \fIip\fP [\fIcomment\fP]
+Allow an IP and add to /etc/qhtlfirewall/qhtlfirewall.allow
+.TP
+.B
+-ar, --addrm \fIip\fP
+Remove an IP from /etc/qhtlfirewall/qhtlfirewall.allow and delete rule
+.TP
+.B
+-d,  --deny \fIip\fP [\fIcomment\fP]
+Deny an IP and add to /etc/qhtlfirewall/qhtlfirewall.deny
+.TP
+.B
+-dr, --denyrm \fIip\fP
+Unblock an IP and remove from /etc/qhtlfirewall/qhtlfirewall.deny
+.TP
+.B
+-df, --denyf
+Remove and unblock all entries in /etc/qhtlfirewall/qhtlfirewall.deny
+.TP
+.B
+-g,  --grep \fIip\fP
+Search the iptables and ip6tables rules for a match (e.g. IP, CIDR, Port Number)
+.TP
+.B
+-i,  --iplookup \fIip\fP
+Lookup IP address geographical information using CC_LOOKUPS setting in /etc/qhtlfirewall/qhtlfirewall.conf
+.TP
+.B
+-t,  --temp
+Displays the current list of temporary allow and deny IP entries with their TTL and comment
+.TP
+.B
+-tr, --temprm \fIip\fP
+Remove an IP from the temporary IP ban or allow list
+.TP
+.B
+-trd, --temprmd \fIip\fP
+Remove an IP from the temporary IP ban list only
+.TP
+.B
+-tra, --temprma \fIip\fP
+Remove an IP from the temporary IP allow list only
+.TP
+.B
+-td, --tempdeny \fIip\fP \fIttl\fP [-p \fIport\fP] [-d \fIdirection\fP] [\fIcomment\fP]
+Add an IP to the temp IP ban list. ttl is how long to blocks for (default:seconds, can use one suffix of h/m/d). Optional port. Optional direction of block can be one of: in, out or inout (default:in)
+.TP
+.B
+-ta, --tempallow \fIip\fP \fIttl\fP [-p \fIport\fP] [-d \fIdirection\fP] [\fIcomment\fP]
+Add an IP to the temp IP allow list (default:inout)
+.TP
+.B
+-tf, --tempf
+Flush all IPs from the temporary IP entries
+.TP
+.B
+-cp, --cping
+PING all members in a qhtlwaterfall Cluster
+.TP
+.B
+-cg, --cgrep \fIip\fP
+Requests the --grep output for IP from each member in a qhtlwaterfall Cluster
+.TP
+.B
+-cd, --cdeny \fIip\fP [\fIcomment\fP]
+Deny an IP in a Cluster and add to each remote /etc/qhtlfirewall/qhtlfirewall.deny
+.TP
+.B
+-ctd, --ctempdeny \fIip\fP \fIttl\fP [-p \fIport\fP] [-d \fIdirection\fP] [\fIcomment\fP]
+Add an IP in a Cluster to the temp IP ban list (default:in)
+.TP
+.B
+-cr, --crm \fIip\fP
+Unblock an IP in a Cluster and remove from each remote /etc/qhtlfirewall/qhtlfirewall.deny and temporary list
+.TP
+.B
+-ca, --callow \fIip\fP [\fIcomment\fP]
+Allow an IP in a Cluster and add to each remote /etc/qhtlfirewall/qhtlfirewall.allow
+.TP
+.B
+-cta, --ctempallow \fIip\fP \fIttl\fP [-p \fIport\fP] [-d \fIdirection\fP] [\fIcomment\fP]
+Add an IP in a Cluster to the temp IP allow list (default:in)
+.TP
+.B
+-car, --carm \fIip\fP
+Remove allowed IP in a Cluster and remove from each remote /etc/qhtlfirewall/qhtlfirewall.allow and temporary list
+.TP
+.B
+-ci, --cignore \fIip\fP [\fIcomment\fP]
+Ignore an IP in a Cluster and add to each remote /etc/qhtlfirewall/qhtlfirewall.ignore. Note: This will result in qhtlwaterfall being restarted
+.TP
+.B
+-cir, --cirm \fIip\fP
+Remove ignored IP in a Cluster and remove from each remote /etc/qhtlfirewall/qhtlfirewall.ignore. Note: This will result in qhtlwaterfall being restarted
+.TP
+.B
+-cc, --cconfig [\fIname\fP] [\fIvalue\fP]
+Change configuration option [name] to [value] in a Cluster
+.TP
+.B
+-cf, --cfile [\fIfile\fP]
+Send [file] in a Cluster to /etc/qhtlfirewall/
+.TP
+.B
+-crs, --crestart
+Cluster restart qhtlfirewall and qhtlwaterfall
+.TP
+.B
+--trace [\fIadd\fP|\fIremove\fP] \fIip\fP
+Log SYN packets for an IP across iptables chains. Note, this can create a LOT of logging information in /var/log/messages so should only be used for a short period of time. This option requires the iptables TRACE module and access to the raw PREROUTING chain to function
+.TP
+.B
+-m,  --mail [\fIemail\fP]
+Display Server Check in HTML or email to [email] if present
+.TP
+.B
+--rbl [\fIemail\fP]
+Process and display RBL Check in HTML or email to [email] if present
+.TP
+.B
+-lr, --logrun
+Initiate Log Scanner report via qhtlwaterfall
+.TP
+.B
+-p, --ports
+View ports on the server that have a running process behind them listening for external connections
+.TP
+.B
+--graphs [\fIgraph type\fP] [\fIdirectory\fP]
+Generate System Statistics html pages and images for a given graph type into a given directory. See ST_SYSTEM for requirements
+.TP
+.B
+--profile [\fIcommand\fP] [\fIprofile\fP|\fIbackup\fP] [\fIprofile\fP|\fIbackup\fP]
+Configuration profile functions for /etc/qhtlfirewall/qhtlfirewall.conf
+.br
+You can create your own profiles using the examples provided in /usr/local/qhtlfirewall/profiles/
+.br
+The profile reset_to_defaults.conf is a special case and will always be the latest default qhtlfirewall.conf
+.IP
+.B
+list
+.br
+Lists available profiles and backups
+.IP
+.B
+apply [\fIprofile\fP]
+.br
+Modify qhtlfirewall.conf with Configuration Profile
+.IP
+.B
+backup "\fIname\fP"
+.br
+Create Configuration Backup with optional "\fIname\fP" stored in /var/lib/qhtlfirewall/backup/
+.IP
+.B
+restore [\fIbackup\fP]
+.br
+Restore a Configuration Backup
+.IP
+.B
+keep [\fInum\fP]
+.br
+Remove old Configuration Backups and keep the latest [\fInum\fP]
+.IP
+.B
+diff [\fIprofile\fP|\fIbackup\fP] [\fIprofile\fP|\fIbackup\fP]
+.br
+Report differences between Configuration Profiles or Configuration Backups, only specify one [\fIprofile\fP|\fIbackup\fP] to compare to the current Configuration
+.TP
+.B
+--mregen
+MESSENGERV2 /etc/apache2/conf.d/qhtlfirewall_messenger.conf regeneration. This will also gracefully restart httpd
+.TP
+.B
+--cloudflare [\fIcommand\fP]
+Commands for interacting with the CloudFlare firewall. See /etc/qhtlfirewall/readme.txt and CF_ENABLE for more detailed information
+
+Note: target can be one of: An IP address; 2 letter Country Code; IP range CIDR. Only Enterprise customers can block a Country Code, but all can allow and challenge. IP range CIDR is limited to /16 and /24
+.IP
+.B
+list [\fIall\fP|\fIblock\fP|\fIchallenge\fP|\fIwhitelist\fP] [\fIuser1\fP,\fIuser2\fP,\fIdomain1\fP...]
+.br
+List specified type of CloudFlare Firewall rules for comma separated list of users/domains
+.IP
+.B
+add [\fIblock\fP|\fIchallenge\fP|\fIwhitelist\fP] \fItarget\fP [\fIuser1\fP,\fIuser2\fP,\fIdomain1\fP...]
+.br
+Add CloudFlare Firewall rule action for target for comma separated list of users/domains only
+.IP
+.B
+del \fItarget\fP [\fIuser1\fP,\fIuser2\fP,\fIdomain1\fP...]
+.br
+Delete CloudFlare Firewall rule for target for comma separated list of users/domains only
+.IP
+.B
+tempadd [\fIallow\fP|\fIdeny\fP] \fIip\fP [\fIuser1\fP,\fIuser2\fP,\fIdomain1\fP...]
+.br
+Add a temporary block for CF_TEMP seconds to both qhtlfirewall and the CloudFlare Firewall rule for ip for comma separated list of users/domains as well as any user set to "any"
+.TP
+.B
+-c,  --check
+Check for updates to qhtlfirewall but do not upgrade
+.TP
+.B
+-u,  --update
+Check for updates to qhtlfirewall and upgrade if available
+.TP
+.B
+-uf
+Force an update of qhtlfirewall whether and upgrade is required or not
+.TP
+.B
+-x,  --disable
+Disable qhtlfirewall and qhtlwaterfall completely
+.TP
+.B
+-e,  --enable
+Enable qhtlfirewall and qhtlwaterfall if previously disabled
+.TP
+.B
+-v,  --version
+Show qhtlfirewall version
+.SH FILES
+.I /etc/qhtlfirewall/qhtlfirewall.conf
+.RS
+The system wide configuration file
+.RE
+.I /etc/qhtlfirewall/readme.txt
+.RS
+Detailed information about qhtlfirewall and qhtlwaterfall
+.SH BUGS
+Report bugs on the forums at https://example.com/qhtl
+.SH AUTHOR
+(c)2006-2025, QHTL Team
diff --git a/qhtlfirewall/qhtlfirewall.help b/qhtlfirewall/qhtlfirewall.help
new file mode 100644
index 0000000..3cfb438
--- /dev/null
+++ b/qhtlfirewall/qhtlfirewall.help
@@ -0,0 +1,5 @@
+qhtlfirewall: QHTL Firewall CLI
+
+Usage: qhtlfirewall [options]
+
+Run "qhtlfirewall --help" to see the full set of commands or check the man page: man qhtlfirewall
diff --git a/qhtlfirewall/qhtlfirewall.pl b/qhtlfirewall/qhtlfirewall.pl
index 8490184..cb48d70 100644
--- a/qhtlfirewall/qhtlfirewall.pl
+++ b/qhtlfirewall/qhtlfirewall.pl
@@ -20,7 +20,7 @@
 ## no critic (RequireUseWarnings, ProhibitExplicitReturnUndef, ProhibitMixedBooleanOperators, RequireBriefOpen)
 # start main
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use File::Basename;
 use IO::Handle;
@@ -71,23 +71,23 @@ $faststart = 0;
 &process_input;
 &load_config;
 
-$urlget = ConfigServer::URLGet->new($config{URLGET}, "csf/$version", $config{URLPROXY});
+$urlget = ConfigServer::URLGet->new($config{URLGET}, "qhtlfirewall/$version", $config{URLPROXY});
 unless (defined $urlget) {
 	if (-e $config{CURL} or -e $config{WGET}) {
 		$config{URLGET} = 3;
-		$urlget = ConfigServer::URLGet->new($config{URLGET}, "csf/$version", $config{URLPROXY});
+		$urlget = ConfigServer::URLGet->new($config{URLGET}, "qhtlfirewall/$version", $config{URLPROXY});
 		print "*WARNING* URLGET set to use LWP but perl module is not installed, fallback to using CURL/WGET\n";
 		$warning .= "*WARNING* URLGET set to use LWP but perl module is not installed, fallback to using CURL/WGET\n";
 	} else {
 		$config{URLGET} = 1;
-		$urlget = ConfigServer::URLGet->new($config{URLGET}, "csf/$version", $config{URLPROXY});
+		$urlget = ConfigServer::URLGet->new($config{URLGET}, "qhtlfirewall/$version", $config{URLPROXY});
 		print "*WARNING* URLGET set to use LWP but perl module is not installed, reverting to HTTP::Tiny\n";
 		$warning .= "*WARNING* URLGET set to use LWP but perl module is not installed, reverting to HTTP::Tiny\n";
 	}
 }
 
-if ((-e "/etc/csf/csf.disable") and ($input{command} ne "--enable") and ($input{command} ne "-e")) {
-	print "csf and lfd have been disabled, use 'csf -e' to enable\n";
+if ((-e "/etc/qhtlfirewall/qhtlfirewall.disable") and ($input{command} ne "--enable") and ($input{command} ne "-e")) {
+	print "qhtlfirewall and qhtlwaterfall have been disabled, use 'qhtlfirewall -e' to enable\n";
 	my $ok = 0;
 	foreach my $opt ("--version","-v","--check","-c","--ports","-p","--help","-h","--update","-u","-uf","--flush","-f","--profile","") {
 		if ($input{command} eq $opt) {
@@ -100,20 +100,20 @@ if ((-e "/etc/csf/csf.disable") and ($input{command} ne "--enable") and ($input{
 unless (-e $config{IPTABLES}) {&error(__LINE__,"$config{IPTABLES} $config{IPTABLESWAIT} (iptables binary location) does not exist!")}
 if ($config{IPV6} and !(-e $config{IP6TABLES})) {&error(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} (ip6tables binary location) does not exist!")}
 
-if ((-e "/etc/csf/csf.error") and ($input{command} ne "--startf") and ($input{command} ne "-sf") and ($input{command} ne "-q") and ($input{command} ne "--startq") and ($input{command} ne "--start") and ($input{command} ne "-s") and ($input{command} ne "--restart") and ($input{command} ne "-r") and ($input{command} ne "--enable") and ($input{command} ne "-e")) {
-	open (my $IN, "<", "/etc/csf/csf.error");
+if ((-e "/etc/qhtlfirewall/qhtlfirewall.error") and ($input{command} ne "--startf") and ($input{command} ne "-sf") and ($input{command} ne "-q") and ($input{command} ne "--startq") and ($input{command} ne "--start") and ($input{command} ne "-s") and ($input{command} ne "--restart") and ($input{command} ne "-r") and ($input{command} ne "--enable") and ($input{command} ne "-e")) {
+	open (my $IN, "<", "/etc/qhtlfirewall/qhtlfirewall.error");
 	flock ($IN, LOCK_SH);
 	my $error = <$IN>;
 	close ($IN);
 	chomp $error;
-	print "You have an unresolved error when starting csf:\n$error\n\nYou need to restart csf successfully to remove this warning, or delete /etc/csf/csf.error\n";
+	print "You have an unresolved error when starting qhtlfirewall:\n$error\n\nYou need to restart qhtlfirewall successfully to remove this warning, or delete /etc/qhtlfirewall/qhtlfirewall.error\n";
 	exit 1;
 }
 
 unless ($input{command} =~ /^--(stop|initdown|initup)$/) {
-	if (-e "/var/lib/csf/csf.4.saved") {unlink "/var/lib/csf/csf.4.saved"}
-	if (-e "/var/lib/csf/csf.4.ipsets") {unlink "/var/lib/csf/csf.4.ipsets"}
-	if (-e "/var/lib/csf/csf.6.saved") {unlink "/var/lib/csf/csf.6.saved"}
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.4.saved") {unlink "/var/lib/qhtlfirewall/qhtlfirewall.4.saved"}
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.4.ipsets") {unlink "/var/lib/qhtlfirewall/qhtlfirewall.4.ipsets"}
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.6.saved") {unlink "/var/lib/qhtlfirewall/qhtlfirewall.6.saved"}
 }
 
 if (($input{command} eq "--status") or ($input{command} eq "-l")) {&dostatus}
@@ -173,9 +173,9 @@ else {&dohelp}
 if ($config{TESTING}) {print "*WARNING* TESTING mode is enabled - do not forget to disable it in the configuration\n"}
 
 if ($config{AUTO_UPDATES}) {
-	unless (-e "/etc/cron.d/csf_update") {&autoupdates}
+	unless (-e "/etc/cron.d/qhtlfirewall_update") {&autoupdates}
 }
-elsif (-e "/etc/cron.d/csf_update") {unlink "/etc/cron.d/csf_update"}
+elsif (-e "/etc/cron.d/qhtlfirewall_update") {unlink "/etc/cron.d/qhtlfirewall_update"}
 
 if (($input{command} eq "--start") or ($input{command} eq "-s") or ($input{command} eq "--restart") or ($input{command} eq "-r") or ($input{command} eq "--restartall") or ($input{command} eq "-ra")) {
 	if ($warning) {print $warning}
@@ -183,7 +183,7 @@ if (($input{command} eq "--start") or ($input{command} eq "-s") or ($input{comma
 		my ($insane,$range,$default) = sanity($key,$config{$key});
 		if ($insane) {print "*WARNING* $key sanity check. $key = $config{$key}. Recommended range: $range (Default: $default)\n"}
 	}
-	unless ($config{RESTRICT_SYSLOG}) {print "\n*WARNING* RESTRICT_SYSLOG is disabled. See SECURITY WARNING in /etc/csf/csf.conf.\n"}
+	unless ($config{RESTRICT_SYSLOG}) {print "\n*WARNING* RESTRICT_SYSLOG is disabled. See SECURITY WARNING in /etc/qhtlfirewall/qhtlfirewall.conf.\n"}
 }
 
 exit 0;
@@ -194,7 +194,7 @@ exit 0;
 sub csflock {
 	my $lock = shift;
 	if ($lock eq "lock") {
-		sysopen ($CSFLOCKFILE, "/var/lib/csf/csf.lock", O_RDWR | O_CREAT) or die ("Error: Unable to open csf lock file: $!");
+	sysopen ($CSFLOCKFILE, "/var/lib/qhtlfirewall/qhtlfirewall.lock", O_RDWR | O_CREAT) or die ("Error: Unable to open qhtlfirewall lock file: $!");
 		flock ($CSFLOCKFILE, LOCK_EX | LOCK_NB) or die "Error: csf is being restarted, try again in a moment: $!";
 	} else {
 		close ($CSFLOCKFILE);
@@ -264,7 +264,7 @@ sub load_config {
 		$statemodule6new = "";
 	}
 
-	my @entries = slurp("/etc/csf/csf.blocklists");
+	my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.blocklists");
 	foreach my $line (@entries) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -286,7 +286,7 @@ sub load_config {
 			$blocklists{$name}{url} = $url;
 		}
 	}
-	if (-e "/etc/cxs/cxs.reputation" and -e "/usr/local/csf/lib/ConfigServer/cxs.pm") {
+	if (-e "/etc/cxs/cxs.reputation" and -e "/usr/local/qhtlfirewall/lib/ConfigServer/cxs.pm") {
 		require ConfigServer::cxs;
 		import ConfigServer::cxs;
 		$cxsreputation = 1;
@@ -319,17 +319,17 @@ sub load_config {
 	foreach my $bin (@binaries) {
 		if ($bin eq "SENDMAIL" and $config{LF_ALERT_SMTP}) {next}
 		unless (-e $config{$bin} and -x $config{$bin}) {
-			$warning .= "*WARNING* Binary location for [$bin] [$config{$bin}] in /etc/csf/csf.conf is either incorrect, is not installed or is not executable\n";
+			$warning .= "*WARNING* Binary location for [$bin] [$config{$bin}] in /etc/qhtlfirewall/qhtlfirewall.conf is either incorrect, is not installed or is not executable\n";
 			$hit = 1;
 		}
 	}
 	my $iphit = 0;
 	if (-e $config{IP} or -e $config{IFCONFIG}) {$iphit = 1}
 	unless ($iphit) {
-		$warning .= "*WARNING* Binary location for either [IP] [$config{IP}] or [IFCONFIG] [$config{IFCONFIG}] in /etc/csf/csf.conf must be set correctly, installed and executable\n";
+		$warning .= "*WARNING* Binary location for either [IP] [$config{IP}] or [IFCONFIG] [$config{IFCONFIG}] in /etc/qhtlfirewall/qhtlfirewall.conf must be set correctly, installed and executable\n";
 		$hit = 1;
 	}
-	if ($hit) {$warning .= "*WARNING* Missing or incorrect binary locations will break csf and lfd functionality\n"}
+	if ($hit) {$warning .= "*WARNING* Missing or incorrect binary locations will break qhtlfirewall and qhtlwaterfall functionality\n"}
 	return;
 }
 # end load_config
@@ -397,7 +397,7 @@ sub dostatus6 {
 			&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} -v -t nat -L -n --line-numbers");
 		}
 	} else {
-		print "csf: IPV6 firewall not enabled\n";
+		print "qhtlfirewall: IPV6 firewall not enabled\n";
 	}
 	return;
 }
@@ -412,7 +412,7 @@ if ($config{INTERWORX}) {$generic = " (InterWorx)"}
 if ($config{CYBERPANEL}) {$generic = " (CyberPanel)"}
 if ($config{CWP}) {$generic = " (CentOS Web Panel)"}
 if ($config{VESTA}) {$generic = " (VestaCP)"}
-	print "csf: v$version$generic\n";
+	print "qhtlfirewall: v$version$generic\n";
 	return;
 }
 # end doversion
@@ -424,7 +424,7 @@ sub dolfd {
 	elsif ($lfd eq "stop") {ConfigServer::Service::stoplfd()}
 	elsif ($lfd eq "restart") {ConfigServer::Service::restartlfd()}
 	elsif ($lfd eq "status") {ConfigServer::Service::statuslfd()}
-	else {print "csf: usage: csf --lfd [stop|start|restart|status]\n"}
+	else {print "qhtlfirewall: usage: qhtlfirewall --qhtlwaterfall [stop|start|restart|status]\n"}
 	return;
 }
 # end dolfd
@@ -445,12 +445,12 @@ sub doinitup {
 	&csflock("lock");
 	if ($config{FASTSTART}) {
 		&modprobe;
-		if (-e "/var/lib/csf/csf.4.saved") {
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.4.saved") {
 			if ($config{LF_IPSET}) {
 				if (-x $config{IPSET}) {
 					print "(restoring ipsets) ";
 
-					open (my $IN, "<", "/var/lib/csf/csf.4.ipsets");
+					open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.4.ipsets");
 					flock ($IN, LOCK_SH);
 					my @data = <$IN>;
 					close ($IN);
@@ -463,12 +463,12 @@ sub doinitup {
 					waitpid ($cmdpid, 0);
 					chomp @results;
 
-					unlink "/var/lib/csf/csf.4.ipsets";
+					unlink "/var/lib/qhtlfirewall/qhtlfirewall.4.ipsets";
 				}
 			}
 			print "(restoring iptables) ";
 
-			open (my $IN, "<", "/var/lib/csf/csf.4.saved");
+			open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.4.saved");
 			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			close ($IN);
@@ -481,17 +481,17 @@ sub doinitup {
 			waitpid ($cmdpid, 0);
 			chomp @results;
 
-			unlink "/var/lib/csf/csf.4.saved";
+			unlink "/var/lib/qhtlfirewall/qhtlfirewall.4.saved";
 		} else {
 			&dostop(1);
 			&dostart;
 			exit 0;
 		}
 		if ($config{IPV6}) {
-			if (-e "/var/lib/csf/csf.6.saved") {
+			if (-e "/var/lib/qhtlfirewall/qhtlfirewall.6.saved") {
 				print "(restoring ip6tables) ";
 
-				open (my $IN, "<", "/var/lib/csf/csf.6.saved");
+				open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.6.saved");
 				flock ($IN, LOCK_SH);
 				my @data = <$IN>;
 				close ($IN);
@@ -504,7 +504,7 @@ sub doinitup {
 				waitpid ($cmdpid, 0);
 				chomp @results;
 
-				unlink "/var/lib/csf/csf.6.saved";
+				unlink "/var/lib/qhtlfirewall/qhtlfirewall.6.saved";
 			} else {
 				&dostop(1);
 				&dostart;
@@ -532,7 +532,7 @@ sub doinitdown {
 			my @results = <$childout>;
 			waitpid ($cmdpid, 0);
 			chomp @results;
-			open (my $OUT, ">", "/var/lib/csf/csf.4.saved");
+			open (my $OUT, ">", "/var/lib/qhtlfirewall/qhtlfirewall.4.saved");
 			flock ($OUT, LOCK_EX);
 			print $OUT join("\n",@results)."\n";
 			close ($OUT);
@@ -547,7 +547,7 @@ sub doinitdown {
 					my @results = <$childout>;
 					waitpid ($cmdpid, 0);
 					chomp @results;
-					open (my $OUT, ">", "/var/lib/csf/csf.4.ipsets");
+					open (my $OUT, ">", "/var/lib/qhtlfirewall/qhtlfirewall.4.ipsets");
 					flock ($OUT, LOCK_EX);
 					print $OUT join("\n",@results)."\n";
 					close ($OUT);
@@ -563,7 +563,7 @@ sub doinitdown {
 			my @results = <$childout>;
 			waitpid ($cmdpid, 0);
 			chomp @results;
-			open (my $OUT, ">", "/var/lib/csf/csf.6.saved");
+			open (my $OUT, ">", "/var/lib/qhtlfirewall/qhtlfirewall.6.saved");
 			flock ($OUT, LOCK_EX);
 			print $OUT join("\n",@results)."\n";
 			close ($OUT);
@@ -604,11 +604,11 @@ sub doclustertempdeny {
 
 	my $iptype = checkip(\$ip);
 	if ($iptype == 6 and !$config{IPV6}) {
-		print "failed: [$ip] is valid IPv6 but IPV6 is not enabled in csf.conf\n";
+		print "failed: [$ip] is valid IPv6 but IPV6 is not enabled in qhtlfirewall.conf\n";
 	}
 
 	unless ($iptype) {
-		print "csf: [$ip] is not a valid PUBLIC IP\n";
+		print "qhtlfirewall: [$ip] is not a valid PUBLIC IP\n";
 		return;
 	}
 
@@ -699,11 +699,11 @@ sub doclustertempallow {
 
 	my $iptype = checkip(\$ip);
 	if ($iptype == 6 and !$config{IPV6}) {
-		print "failed: [$ip] is valid IPv6 but IPV6 is not enabled in csf.conf\n";
+		print "failed: [$ip] is valid IPv6 but IPV6 is not enabled in qhtlfirewall.conf\n";
 	}
 
 	unless ($iptype) {
-		print "csf: [$ip] is not a valid PUBLIC IP\n";
+		print "qhtlfirewall: [$ip] is not a valid PUBLIC IP\n";
 		return;
 	}
 
@@ -805,7 +805,7 @@ sub docfile {
 
 		&clustersend($send);
 	} else {
-		print "csf: Error [$name] does not exist\n";
+		print "qhtlfirewall: Error [$name] does not exist\n";
 	}
 	return;
 }
@@ -867,10 +867,10 @@ sub clustersend {
 ###############################################################################
 # lfdstart
 sub lfdstart {
-	open (my $FH, ">", "/var/lib/csf/csf.restart") or die "Failed to create csf.restart - $!";
+	open (my $FH, ">", "/var/lib/qhtlfirewall/qhtlfirewall.restart") or die "Failed to create qhtlfirewall.restart - $!";
 	flock ($FH, LOCK_EX);
 	close ($FH);
-	print "lfd will restart csf within the next $config{LF_PARSE} seconds\n";
+	print "qhtlwaterfall will restart qhtlfirewall within the next $config{LF_PARSE} seconds\n";
 	return;
 }
 # lfdstart
@@ -934,13 +934,13 @@ sub dostart {
 		waitpid ($cmdpid, 0);
 		chomp @reply;
 		if ($reply[0] eq "active" or $reply[0] eq "activating") {
-			&error(__LINE__,"*Error* firewalld found to be running. You must stop and disable firewalld when using csf");
+			&error(__LINE__,"*Error* firewalld found to be running. You must stop and disable firewalld when using qhtlfirewall");
 			exit 1;
 		}
 	}
 
 	if ($config{TESTING}) {&crontab("add")} else {&crontab("remove")}
-	if (-e "/etc/csf/csf.error") {unlink ("/etc/csf/csf.error")}
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.error") {unlink ("/etc/qhtlfirewall/qhtlfirewall.error")}
 
 	&getethdev;
 	&modprobe;
@@ -965,10 +965,10 @@ sub dostart {
 	my $path = "PATH=\$PATH:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin";
 	my $csfpre;
 	my $csfpost;
-	if (-e "/usr/local/csf/bin/csfpre.sh") {$csfpre = "/usr/local/csf/bin/csfpre.sh"}
-	elsif (-e "/etc/csf/csfpre.sh") {$csfpre = "/etc/csf/csfpre.sh"}
-	if (-e "/usr/local/csf/bin/csfpost.sh") {$csfpost = "/usr/local/csf/bin/csfpost.sh"}
-	elsif (-e "/etc/csf/csfpost.sh") {$csfpost = "/etc/csf/csfpost.sh"}
+	if (-e "/usr/local/qhtlfirewall/bin/qhtlfirewallpre.sh") {$csfpre = "/usr/local/qhtlfirewall/bin/qhtlfirewallpre.sh"}
+	elsif (-e "/etc/qhtlfirewall/qhtlfirewallpre.sh") {$csfpre = "/etc/qhtlfirewall/qhtlfirewallpre.sh"}
+	if (-e "/usr/local/qhtlfirewall/bin/qhtlfirewallpost.sh") {$csfpost = "/usr/local/qhtlfirewall/bin/qhtlfirewallpost.sh"}
+	elsif (-e "/etc/qhtlfirewall/qhtlfirewallpost.sh") {$csfpost = "/etc/qhtlfirewall/qhtlfirewallpost.sh"}
 
 	if ($csfpre ne "") {
 		chmod (0700,$csfpre);
@@ -1458,7 +1458,7 @@ sub doadd {
 	}
 
 	if ($checkip == 6 and !$config{IPV6}) {
-		print "add failed: [$ip] is valid IPv6 but IPV6 is not enabled in csf.conf\n";
+		print "add failed: [$ip] is valid IPv6 but IPV6 is not enabled in qhtlfirewall.conf\n";
 		return;
 	}
 
@@ -1468,7 +1468,7 @@ sub doadd {
 	}
 
 	my $hit;
-	my @deny = slurp("/etc/csf/csf.deny");
+	my @deny = slurp("/etc/qhtlfirewall/qhtlfirewall.deny");
 	foreach my $line (@deny) {
         $line =~ s/$cleanreg//g;
 		if ($line eq "") {next}
@@ -1487,7 +1487,7 @@ sub doadd {
 	}
 
 	my $allowmatches;
-	my @allow = slurp("/etc/csf/csf.allow");
+	my @allow = slurp("/etc/qhtlfirewall/qhtlfirewall.allow");
 	foreach my $line (@allow) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -1507,8 +1507,8 @@ sub doadd {
 	}
 
 	my $ipstring = quotemeta($ip);
-	sysopen (my $ALLOW, "/etc/csf/csf.allow", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/csf/csf.allow: $!");
-	flock ($ALLOW, LOCK_EX) or &error(__LINE__,"Could not lock /etc/csf/csf.allow: $!");
+	sysopen (my $ALLOW, "/etc/qhtlfirewall/qhtlfirewall.allow", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/qhtlfirewall/qhtlfirewall.allow: $!");
+	flock ($ALLOW, LOCK_EX) or &error(__LINE__,"Could not lock /etc/qhtlfirewall/qhtlfirewall.allow: $!");
 	my $text = join("", <$ALLOW>);
 	@allow = split(/$slurpreg/,$text);
 	chomp @allow;
@@ -1516,15 +1516,15 @@ sub doadd {
 		if ($comment eq "") {$comment = "Manually allowed: ".iplookup($ip)}
 		print $ALLOW "$ip \# $comment - ".localtime(time)."\n";
 		if ($config{TESTING}) {
-			print "Adding $ip to csf.allow only while in TESTING mode (not iptables ACCEPT)\n";
+			print "Adding $ip to qhtlfirewall.allow only while in TESTING mode (not iptables ACCEPT)\n";
 		} else {
-			print "Adding $ip to csf.allow and iptables ACCEPT...\n";
+			print "Adding $ip to qhtlfirewall.allow and iptables ACCEPT...\n";
 			&linefilter($ip, "allow");
 		}
 	} else {
-		print "add failed: $ip is in already in the allow file /etc/csf/csf.allow\n";
+		print "add failed: $ip is in already in the allow file /etc/qhtlfirewall/qhtlfirewall.allow\n";
 	}
-	close ($ALLOW) or &error(__LINE__,"Could not close /etc/csf/csf.allow: $!");
+	close ($ALLOW) or &error(__LINE__,"Could not close /etc/qhtlfirewall/qhtlfirewall.allow: $!");
 	return;
 }
 # end doadd
@@ -1542,7 +1542,7 @@ sub dodeny {
 	}
 
 	if ($checkip == 6 and !$config{IPV6}) {
-		print "deny failed: [$ip] is valid IPv6 but IPV6 is not enabled in csf.conf\n";
+		print "deny failed: [$ip] is valid IPv6 but IPV6 is not enabled in qhtlfirewall.conf\n";
 		return;
 	}
 
@@ -1551,7 +1551,7 @@ sub dodeny {
 		return;
 	}
 
-	my @allow = slurp("/etc/csf/csf.allow");
+	my @allow = slurp("/etc/qhtlfirewall/qhtlfirewall.allow");
 	foreach my $line (@allow) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -1565,7 +1565,7 @@ sub dodeny {
 		my ($ipd,$commentd) = split (/\s/,$line,2);
 		checkip(\$ipd);
 		if ($ipd eq $ip) {
-			print "deny failed: $ip is in the allow file /etc/csf/csf.allow\n";
+			print "deny failed: $ip is in the allow file /etc/qhtlfirewall/qhtlfirewall.allow\n";
 			return;
 		}
 		elsif ($ipd =~ /(.*\/\d+)/) {
@@ -1574,14 +1574,14 @@ sub dodeny {
 				my $cidr = Net::CIDR::Lite->new;
 				eval {local $SIG{__DIE__} = undef; $cidr->add($cidrhit)};
 				if ($cidr->find($ip)) {
-					print "deny failed: $ip is in the allow file /etc/csf/csf.allow\n";
+					print "deny failed: $ip is in the allow file /etc/qhtlfirewall/qhtlfirewall.allow\n";
 					return;
 				}
 			}
 		}
 	}
 
-	my @ignore = slurp("/etc/csf/csf.ignore");
+	my @ignore = slurp("/etc/qhtlfirewall/qhtlfirewall.ignore");
 	foreach my $line (@ignore) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -1595,7 +1595,7 @@ sub dodeny {
 		my ($ipd,$commentd) = split (/\s/,$line,2);
 		checkip(\$ipd);
 		if ($ipd eq $ip) {
-			print "deny failed: $ip is in the ignore file /etc/csf/csf.ignore\n";
+			print "deny failed: $ip is in the ignore file /etc/qhtlfirewall/qhtlfirewall.ignore\n";
 			return;
 		}
 		elsif ($ipd =~ /(.*\/\d+)/) {
@@ -1604,7 +1604,7 @@ sub dodeny {
 				my $cidr = Net::CIDR::Lite->new;
 				eval {local $SIG{__DIE__} = undef; $cidr->add($cidrhit)};
 				if ($cidr->find($ip)) {
-					print "deny failed: $ip is in the ignore file /etc/csf/csf.ignore\n";
+					print "deny failed: $ip is in the ignore file /etc/qhtlfirewall/qhtlfirewall.ignore\n";
 					return;
 				}
 			}
@@ -1612,7 +1612,7 @@ sub dodeny {
 	}
 
 	my $denymatches;
-	my @deny = slurp("/etc/csf/csf.deny");
+	my @deny = slurp("/etc/qhtlfirewall/qhtlfirewall.deny");
 	foreach my $line (@deny) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -1631,8 +1631,8 @@ sub dodeny {
 		}
 	}
 
-	sysopen (my $DENY, "/etc/csf/csf.deny", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/csf/csf.deny: $!");
-	flock ($DENY, LOCK_EX) or &error(__LINE__,"Could not lock /etc/csf/csf.deny: $!");
+	sysopen (my $DENY, "/etc/qhtlfirewall/qhtlfirewall.deny", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/qhtlfirewall/qhtlfirewall.deny: $!");
+	flock ($DENY, LOCK_EX) or &error(__LINE__,"Could not lock /etc/qhtlfirewall/qhtlfirewall.deny: $!");
 	my $text = join("", <$DENY>);
 	@deny = split(/$slurpreg/,$text);
 	chomp @deny;
@@ -1660,13 +1660,13 @@ sub dodeny {
 				if ($hit) {next}
 				print $DENY $line."\n";
 			}
-			print "csf: DENY_IP_LIMIT ($config{DENY_IP_LIMIT}), the following IP's were removed from /etc/csf/csf.deny:\n";
+			print "qhtlfirewall: DENY_IP_LIMIT ($config{DENY_IP_LIMIT}), the following IP's were removed from /etc/qhtlfirewall/qhtlfirewall.deny:\n";
 			for (my $x = 0; $x < ($ipcount - $config{DENY_IP_LIMIT})+1;$x++) {
 				print "$denyips[$x]\n";
 				my ($kip,undef) = split (/\s/,$denyips[$x],2);
 				&linefilter($kip, "deny", "", 1);
 
-#				sysopen (my $TEMPIP, "/var/lib/csf/csf.tempip", O_RDWR | O_CREAT);
+#				sysopen (my $TEMPIP, "/var/lib/qhtlfirewall/qhtlfirewall.tempip", O_RDWR | O_CREAT);
 #				flock ($TEMPIP, LOCK_EX);
 #				my @data = <$TEMPIP>;
 #				chomp @data;
@@ -1687,15 +1687,15 @@ sub dodeny {
 		print $DENY "$ip \# $comment - ".localtime(time)."\n";
 
 		if ($config{TESTING}) {
-			print "Adding $ip to csf.deny only while in TESTING mode (not iptables DROP)\n";
+			print "Adding $ip to qhtlfirewall.deny only while in TESTING mode (not iptables DROP)\n";
 		} else {
-			print "Adding $ip to csf.deny and iptables DROP...\n";
+			print "Adding $ip to qhtlfirewall.deny and iptables DROP...\n";
 			&linefilter($ip, "deny");
 		}
 	} else {
-		print "deny failed: $ip is in already in the deny file /etc/csf/csf.deny $denymatches times\n";
+		print "deny failed: $ip is in already in the deny file /etc/qhtlfirewall/qhtlfirewall.deny $denymatches times\n";
 	}
-	close ($DENY) or &error(__LINE__,"Could not close /etc/csf/csf.deny: $!");
+	close ($DENY) or &error(__LINE__,"Could not close /etc/qhtlfirewall/qhtlfirewall.deny: $!");
 	return;
 }
 # end dodeny
@@ -1713,8 +1713,8 @@ sub dokill {
 
 	&getethdev;
 
-	sysopen (my $DENY, "/etc/csf/csf.deny", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/csf/csf.deny: $!");
-	flock ($DENY, LOCK_EX) or &error(__LINE__,"Could not lock /etc/csf/csf.deny: $!");
+	sysopen (my $DENY, "/etc/qhtlfirewall/qhtlfirewall.deny", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/qhtlfirewall/qhtlfirewall.deny: $!");
+	flock ($DENY, LOCK_EX) or &error(__LINE__,"Could not lock /etc/qhtlfirewall/qhtlfirewall.deny: $!");
 	my $text = join("", <$DENY>);
 	my @deny = split(/$slurpreg/,$text);
 	chomp @deny;
@@ -1732,7 +1732,7 @@ sub dokill {
 		checkip(\$ipd);
 		if (uc $ip eq uc $ipmatch) {
 			if ($commentd =~ /do not delete/i) {
-				print "csf: $ip set as \"do not delete\" - not removed\n";
+				print "qhtlfirewall: $ip set as \"do not delete\" - not removed\n";
 				$hit = -1;
 			} else {
 				print "Removing rule...\n";
@@ -1743,10 +1743,10 @@ sub dokill {
 		}
 		print $DENY $line."\n";
 	}
-	close ($DENY) or &error(__LINE__,"Could not close /etc/csf/csf.deny: $!");
+	close ($DENY) or &error(__LINE__,"Could not close /etc/qhtlfirewall/qhtlfirewall.deny: $!");
 
 	if ($hit and ($config{LF_PERMBLOCK} or $config{LF_NETBLOCK})) {
-		sysopen (my $TEMPIP, "/var/lib/csf/csf.tempip", O_RDWR | O_CREAT);
+		sysopen (my $TEMPIP, "/var/lib/qhtlfirewall/qhtlfirewall.tempip", O_RDWR | O_CREAT);
 		flock ($TEMPIP, LOCK_EX);
 		my @data = <$TEMPIP>;
 		chomp @data;
@@ -1761,7 +1761,7 @@ sub dokill {
 	}
 	elsif ($hit == -1) {}
 	elsif (!$hit) {
-		print "csf: $ip not found in csf.deny\n";
+		print "qhtlfirewall: $ip not found in qhtlfirewall.deny\n";
 	}
 	return;
 }
@@ -1772,8 +1772,8 @@ sub dokillall {
 
 	&getethdev;
 
-	sysopen (my $DENY, "/etc/csf/csf.deny", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/csf/csf.deny: $!");
-	flock ($DENY, LOCK_EX) or &error(__LINE__,"Could not lock /etc/csf/csf.deny: $!");
+	sysopen (my $DENY, "/etc/qhtlfirewall/qhtlfirewall.deny", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/qhtlfirewall/qhtlfirewall.deny: $!");
+	flock ($DENY, LOCK_EX) or &error(__LINE__,"Could not lock /etc/qhtlfirewall/qhtlfirewall.deny: $!");
 	my $text = join("", <$DENY>);
 	my @deny = split(/$slurpreg/,$text);
 	chomp @deny;
@@ -1787,15 +1787,15 @@ sub dokillall {
 		}
 		elsif ($line =~ /do not delete/i) {
 			print $DENY $line."\n";
-			print "csf: skipped line: $line\n";
+			print "qhtlfirewall: skipped line: $line\n";
 		}
 		else {
 			my ($ipd,$commentd) = split (/\s/,$line,2);
 			&linefilter($ipd, "deny", "", 1);
 		}
 	}
-	close ($DENY) or &error(__LINE__,"Could not close /etc/csf/csf.deny: $!");
-	print "csf: all entries removed from csf.deny\n";
+	close ($DENY) or &error(__LINE__,"Could not close /etc/qhtlfirewall/qhtlfirewall.deny: $!");
+	print "qhtlfirewall: all entries removed from qhtlfirewall.deny\n";
 	return;
 }
 # end dokillall
@@ -1811,8 +1811,8 @@ sub doakill {
 
 	&getethdev;
 
-	sysopen (my $ALLOW, "/etc/csf/csf.allow", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/csf/csf.allow: $!");
-	flock ($ALLOW, LOCK_EX) or &error(__LINE__,"Could not lock /etc/csf/csf.allow: $!");
+	sysopen (my $ALLOW, "/etc/qhtlfirewall/qhtlfirewall.allow", O_RDWR | O_CREAT) or &error(__LINE__,"Could not open /etc/qhtlfirewall/qhtlfirewall.allow: $!");
+	flock ($ALLOW, LOCK_EX) or &error(__LINE__,"Could not lock /etc/qhtlfirewall/qhtlfirewall.allow: $!");
 	my $text = join("", <$ALLOW>);
 	my @allow = split(/$slurpreg/,$text);
 	chomp @allow;
@@ -1831,9 +1831,9 @@ sub doakill {
 		}
 		print $ALLOW $line."\n";
 	}
-	close ($ALLOW) or &error(__LINE__,"Could not close /etc/csf/csf.allow: $!");
+	close ($ALLOW) or &error(__LINE__,"Could not close /etc/qhtlfirewall/qhtlfirewall.allow: $!");
 	unless ($hit) {
-		print "csf: $ip not found in csf.allow\n";
+		print "qhtlfirewall: $ip not found in qhtlfirewall.allow\n";
 	}
 	return;
 }
@@ -1844,8 +1844,8 @@ sub dohelp {
 	my $generic = " (cPanel)";
 	if ($config{GENERIC}) {$generic = " (generic)"}
 	if ($config{DIRECTADMIN}) {$generic = " (DirectAdmin)"}
-	print "csf: v$version$generic\n";
-	open (my $IN, "<", "/usr/local/csf/lib/csf.help");
+	print "qhtlfirewall: v$version$generic\n";
+	open (my $IN, "<", "/usr/local/qhtlfirewall/lib/qhtlfirewall.help");
 	flock ($IN, LOCK_SH);
 	print <$IN>;
 	close ($IN);
@@ -1929,7 +1929,7 @@ sub doportfilters {
 	if ($config{DROP_LOGGING}) {$dropin = "LOGDROPIN"}
 	if ($config{DROP_LOGGING}) {$dropout = "LOGDROPOUT"}
 
-	my @entries = slurp("/etc/csf/csf.sips");
+	my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.sips");
 	foreach my $line (@entries) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -1967,9 +1967,9 @@ sub doportfilters {
 				unless ($config{LF_BLOCKINONLY}) {&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A GDENYOUT -m set --match-set chain_6_GDENY dst -j $pktout")}
 			}
 		}
-		if (-e "/var/lib/csf/csf.gdeny") {
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.gdeny") {
 			if ($config{FASTSTART}) {$faststart = 1}
-			foreach my $line (slurp("/var/lib/csf/csf.gdeny")) {
+			foreach my $line (slurp("/var/lib/qhtlfirewall/qhtlfirewall.gdeny")) {
 				$line =~ s/$cleanreg//g;
 				if ($line =~ /^(\s|\#|$)/) {next}
 				my ($ip,$comment) = split (/\s/,$line,2);
@@ -1985,7 +1985,7 @@ sub doportfilters {
 		}
 	}
 
-	my @deny = slurp("/etc/csf/csf.deny");
+	my @deny = slurp("/etc/qhtlfirewall/qhtlfirewall.deny");
 	foreach my $line (@deny) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -2014,15 +2014,15 @@ sub doportfilters {
 		my ($ip,$comment) = split (/\s/,$line,2);
 		&linefilter($ip, "deny");
 	}
-	if ($config{FASTSTART}) {&faststart("csf.deny")}
+	if ($config{FASTSTART}) {&faststart("qhtlfirewall.deny")}
 
-	if (! -z "/var/lib/csf/csf.tempban") {
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
 		my $dropin = $config{DROP};
 		my $dropout = $config{DROP_OUT};
 		if ($config{DROP_IP_LOGGING}) {$dropin = "LOGDROPIN"}
 		if ($config{DROP_OUT_LOGGING}) {$dropout = "LOGDROPOUT"}
 
-		sysopen (my $TEMPBAN, "/var/lib/csf/csf.tempban", O_RDWR | O_CREAT);
+		sysopen (my $TEMPBAN, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR | O_CREAT);
 		flock ($TEMPBAN, LOCK_EX);
 		my @data = <$TEMPBAN>;
 		chomp @data;
@@ -2086,8 +2086,8 @@ sub doportfilters {
 		close ($TEMPBAN);
 	}
 
-	if (! -z "/var/lib/csf/csf.tempallow") {
-		sysopen (my $TEMPALLOW, "/var/lib/csf/csf.tempallow", O_RDWR | O_CREAT);
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
+		sysopen (my $TEMPALLOW, "/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR | O_CREAT);
 		flock ($TEMPALLOW, LOCK_EX);
 		my @data = <$TEMPALLOW>;
 		chomp @data;
@@ -2158,9 +2158,9 @@ sub doportfilters {
 				&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A GALLOWOUT -m set --match-set chain_6_GALLOW dst -j $accept");
 			}
 		}
-		if (-e "/var/lib/csf/csf.gallow") {
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.gallow") {
 			if ($config{FASTSTART}) {$faststart = 1}
-			foreach my $line (slurp("/var/lib/csf/csf.gallow")) {
+			foreach my $line (slurp("/var/lib/qhtlfirewall/qhtlfirewall.gallow")) {
 				$line =~ s/$cleanreg//g;
 				if ($line =~ /^(\s|\#|$)/) {next}
 				my ($ip,$comment) = split (/\s/,$line,2);
@@ -2188,10 +2188,10 @@ sub doportfilters {
 					&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A CC_ALLOW -m set --match-set cc_6_$cc src -j $accept");
 				}
 			}
-			if (-e "/var/lib/csf/zone/$cc.zone") {
+			if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2205,7 +2205,7 @@ sub doportfilters {
 					&ipsetrestore("cc_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2221,10 +2221,10 @@ sub doportfilters {
 					if ($config{FASTSTART}) {&faststart("CC_ALLOW [$cc]")}
 				}
 			}
-			if ($config{CC6_LOOKUPS} and -e "/var/lib/csf/zone/$cc.zone6") {
+			if ($config{CC6_LOOKUPS} and -e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2233,7 +2233,7 @@ sub doportfilters {
 					&ipsetrestore("cc_6_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2262,8 +2262,8 @@ sub doportfilters {
 				&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A ALLOWDYNOUT -m set --match-set chain_6_ALLOWDYN dst -j $accept");
 			}
 		}
-		if (-e "/var/lib/csf/csf.tempdyn") {
-			foreach my $line (slurp("/var/lib/csf/csf.tempdyn")) {
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempdyn") {
+			foreach my $line (slurp("/var/lib/qhtlfirewall/qhtlfirewall.tempdyn")) {
 				$line =~ s/$cleanreg//g;
 				if ($line =~ /^(\s|\#|$)/) {next}
 				my ($ip,$comment) = split (/\s/,$line,2);
@@ -2288,9 +2288,9 @@ sub doportfilters {
 				&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A GDYNOUT -m set --match-set chain_6_GDYN dst -j $accept");
 			}
 		}
-		if (-e "/var/lib/csf/csf.tempgdyn") {
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempgdyn") {
 			if ($config{FASTSTART}) {$faststart = 1}
-			foreach my $line (slurp("/var/lib/csf/csf.tempgdyn")) {
+			foreach my $line (slurp("/var/lib/qhtlfirewall/qhtlfirewall.tempgdyn")) {
 				$line =~ s/$cleanreg//g;
 				if ($line =~ /^(\s|\#|$)/) {next}
 				my ($ip,$comment) = split (/\s/,$line,2);
@@ -2306,7 +2306,7 @@ sub doportfilters {
 		}
 	}
 
-	my @allow = slurp("/etc/csf/csf.allow");
+	my @allow = slurp("/etc/qhtlfirewall/qhtlfirewall.allow");
 	foreach my $line (@allow) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -2331,7 +2331,7 @@ sub doportfilters {
 		my ($ip,$comment) = split (/\s/,$line,2);
 		&linefilter($ip, "allow");
 	}
-	if ($config{FASTSTART}) {&faststart("csf.allow")}
+	if ($config{FASTSTART}) {&faststart("qhtlfirewall.allow")}
 
 	foreach my $name (keys %blocklists) {
 		my $drop = $config{DROP};
@@ -2344,11 +2344,11 @@ sub doportfilters {
 				&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A $name -m set --match-set bl_6_$name src -j $drop");
 			}
 		}
-		if (-e "/var/lib/csf/csf.block.$name") {
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.block.$name") {
 			if ($config{LF_IPSET}) {
 				undef @ipset;
 				my @ipset6;
-				foreach my $line (slurp("/var/lib/csf/csf.block.$name")) {
+				foreach my $line (slurp("/var/lib/qhtlfirewall/qhtlfirewall.block.$name")) {
 					$line =~ s/$cleanreg//g;
 					if ($line =~ /^(\s|\#|$)/) {next}
 					my ($ip,$comment) = split (/\s/,$line,2);
@@ -2367,7 +2367,7 @@ sub doportfilters {
 				}
 			} else {
 				if ($config{FASTSTART}) {$faststart = 1}
-				foreach my $line (slurp("/var/lib/csf/csf.block.$name")) {
+				foreach my $line (slurp("/var/lib/qhtlfirewall/qhtlfirewall.block.$name")) {
 					$line =~ s/$cleanreg//g;
 					if ($line =~ /^(\s|\#|$)/) {next}
 					my ($ip,$comment) = split (/\s/,$line,2);
@@ -2403,18 +2403,18 @@ sub doportfilters {
 
 	$config{CC_ALLOW_SMTPAUTH} =~ s/\s//g;
 	if ($config{SMTPAUTH_RESTRICT}) {
-		if ($verbose) {print "csf: Generating /etc/exim.smtpauth\n"}
+		if ($verbose) {print "qhtlfirewall: Generating /etc/exim.smtpauth\n"}
 		sysopen (my $SMTPAUTH, "/etc/exim.smtpauth", O_WRONLY | O_CREAT);
 		flock ($SMTPAUTH, LOCK_EX);
 		seek ($SMTPAUTH, 0, 0);
 		truncate ($SMTPAUTH, 0);
 		print $SMTPAUTH "# DO NOT EDIT THIS FILE\n#\n";
-		print $SMTPAUTH "# Modify /etc/csf/csf.smtpauth and then restart csf and then lfd\n\n";
+		print $SMTPAUTH "# Modify /etc/qhtlfirewall/qhtlfirewall.smtpauth and then restart qhtlfirewall and then qhtlwaterfall\n\n";
 		print $SMTPAUTH "127.0.0.0/8\n";
 		print $SMTPAUTH "\"::1\"\n";
 		print $SMTPAUTH "\"::1/128\"\n";
-		if (-e "/etc/csf/csf.smtpauth") {
-			my @entries = slurp("/etc/csf/csf.smtpauth");
+		if (-e "/etc/qhtlfirewall/qhtlfirewall.smtpauth") {
+			my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.smtpauth");
 			foreach my $line (@entries) {
 				if ($line =~ /^Include\s*(.*)$/) {
 					my @incfile = slurp($1);
@@ -2433,9 +2433,9 @@ sub doportfilters {
 		}
 		foreach my $cc (split(/\,/,$config{CC_ALLOW_SMTPAUTH})) {
 			$cc = lc $cc;
-			if (-e "/var/lib/csf/zone/$cc.zone") {
+			if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 				print $SMTPAUTH "\n# IPv4 addresses for [".uc($cc)."]:\n";
-				foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+				foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 					$line =~ s/$cleanreg//g;
 					if ($line =~ /^(\s|\#|$)/) {next}
 					my ($ip,undef) = split (/\s/,$line,2);
@@ -2449,9 +2449,9 @@ sub doportfilters {
 					elsif ($status == 6) {print $SMTPAUTH "\"$ip\"\n"}
 				}
 			}
-			if ($config{CC6_LOOKUPS} and -e "/var/lib/csf/zone/$cc.zone6") {
+			if ($config{CC6_LOOKUPS} and -e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 				print $SMTPAUTH "\n# IPv6 addresses for [".uc($cc)."]:\n";
-				foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+				foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 					$line =~ s/$cleanreg//g;
 					if ($line =~ /^(\s|\#|$)/) {next}
 					my ($ip,undef) = split (/\s/,$line,2);
@@ -2479,10 +2479,10 @@ sub doportfilters {
 					&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -I CC_DENY -m set --match-set cc_6_$cc src -j $drop");
 				}
 			}
-			if (-e "/var/lib/csf/zone/$cc.zone") {
+			if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2496,7 +2496,7 @@ sub doportfilters {
 					&ipsetrestore("cc_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2512,10 +2512,10 @@ sub doportfilters {
 					if ($config{FASTSTART}) {&faststart("CC_DENY [$cc]")}
 				}
 			}
-			if ($config{CC6_LOOKUPS} and -e "/var/lib/csf/zone/$cc.zone6") {
+			if ($config{CC6_LOOKUPS} and -e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2524,7 +2524,7 @@ sub doportfilters {
 					&ipsetrestore("cc_6_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2557,10 +2557,10 @@ sub doportfilters {
 					&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A CC_ALLOWF -m set --match-set cc_6_$cc src -j RETURN");
 				}
 			}
-			if (-e "/var/lib/csf/zone/$cc.zone") {
+			if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2577,7 +2577,7 @@ sub doportfilters {
 					&ipsetrestore("cc_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2594,10 +2594,10 @@ sub doportfilters {
 					if ($config{FASTSTART}) {&faststart("CC_ALLOW_FILTER [$cc]")}
 				}
 			}
-			if ($config{CC6_LOOKUPS} and -e "/var/lib/csf/zone/$cc.zone6") {
+			if ($config{CC6_LOOKUPS} and -e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2609,7 +2609,7 @@ sub doportfilters {
 					&ipsetrestore("cc_6_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2686,10 +2686,10 @@ sub doportfilters {
 					&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A CC_ALLOWP -m set --match-set cc_6_$cc src -j CC_ALLOWPORTS");
 				}
 			}
-			if (-e "/var/lib/csf/zone/$cc.zone") {
+			if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2703,7 +2703,7 @@ sub doportfilters {
 					&ipsetrestore("cc_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2720,10 +2720,10 @@ sub doportfilters {
 					if ($config{FASTSTART}) {&faststart("CC_ALLOW_PORTS [$cc]")}
 				}
 			}
-			if ($config{CC6_LOOKUPS} and -e "/var/lib/csf/zone/$cc.zone6") {
+			if ($config{CC6_LOOKUPS} and -e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2732,7 +2732,7 @@ sub doportfilters {
 					&ipsetrestore("cc_6_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2787,10 +2787,10 @@ sub doportfilters {
 					&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -I CC_DENYP -m set --match-set cc_6_$cc src -j CC_DENYPORTS");
 				}
 			}
-			if (-e "/var/lib/csf/zone/$cc.zone") {
+			if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2804,7 +2804,7 @@ sub doportfilters {
 					&ipsetrestore("cc_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2821,10 +2821,10 @@ sub doportfilters {
 					if ($config{FASTSTART}) {&faststart("CC_DENY_PORTS [$cc]")}
 				}
 			}
-			if ($config{CC6_LOOKUPS} and -e "/var/lib/csf/zone/$cc.zone6") {
+			if ($config{CC6_LOOKUPS} and -e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 				if ($config{LF_IPSET}) {
 					undef @ipset;
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2833,7 +2833,7 @@ sub doportfilters {
 					&ipsetrestore("cc_6_$cc");
 				} else {
 					if ($config{FASTSTART}) {$faststart = 1}
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -2889,7 +2889,7 @@ sub doportfilters {
 		}
 		foreach my $portflood (split(/\,/,$config{PORTFLOOD})) {
 			my ($port,$proto,$count,$seconds) = split(/\;/,$portflood);
-			if ((($port < 0) or ($port > 65535)) or ($proto !~ /icmp|tcp|udp/) or ($seconds !~ /\d+/)) {&error(__LINE__,"csf: Incorrect PORTFLOOD setting: [$portflood]")}
+			if ((($port < 0) or ($port > 65535)) or ($proto !~ /icmp|tcp|udp/) or ($seconds !~ /\d+/)) {&error(__LINE__,"qhtlfirewall: Incorrect PORTFLOOD setting: [$portflood]")}
 			if (($count < 1) or ($count > $maxrecent)) {
 				print "WARNING: count in PORTFLOOD setting must be between 1 and $maxrecent: [$portflood]\n";
 			} else {
@@ -2911,7 +2911,7 @@ sub doportfilters {
 	if ($config{CONNLIMIT}) {
 		foreach my $connlimit (split(/\,/,$config{CONNLIMIT})) {
 			my ($port,$limit) = split(/\;/,$connlimit);
-			if (($port < 0) or ($port > 65535) or ($limit < 1) or ($limit !~ /\d+/)) {&error(__LINE__,"csf: Incorrect CONNLIMIT setting: [$connlimit]")}
+			if (($port < 0) or ($port > 65535) or ($limit < 1) or ($limit !~ /\d+/)) {&error(__LINE__,"qhtlfirewall: Incorrect CONNLIMIT setting: [$connlimit]")}
 			&syscommand(__LINE__,"$config{IPTABLES} $config{IPTABLESWAIT} $verbose -A INPUT $ethdevin -p tcp --syn --dport $port -m connlimit --connlimit-above $limit -j CONNLIMIT");
 			if ($config{CONNLIMIT6}) {
 				&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -A INPUT $ethdevin -p tcp --syn --dport $port -m connlimit --connlimit-above $limit -j CONNLIMIT");
@@ -3053,7 +3053,7 @@ sub doportfilters {
 			my @steps = split(/\;/,$knocks);
 			my $nsteps = @steps;
 			if ($nsteps < 3) {
-				print "csf: Error - not enough Port Knocks for port $port [$knocks]\n";
+				print "qhtlfirewall: Error - not enough Port Knocks for port $port [$knocks]\n";
 				next;
 			}
 			for (my $step = 1; $step < $nsteps+1; $step++) {
@@ -3218,9 +3218,9 @@ sub doportfilters {
 ##		&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose  -A OUTPUT $eth6devout -p icmpv6 --icmpv6-type redirect -m hl --hl-eq 255 -j $accept");
 #	}
 
-	if (-e "/etc/csf/csf.redirect") {
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.redirect") {
 		my $dnat = 0;
-		my @entries = slurp("/etc/csf/csf.redirect");
+		my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.redirect");
 		foreach my $line (@entries) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -3233,11 +3233,11 @@ sub doportfilters {
 			if ($line =~ /^\s*\#|Include/) {next}
 			my ($redirect,$comment) = split (/\s/,$line,2);
 			my ($ipx,$porta,$ipy,$portb,$proto) = split (/\|/,$redirect);
-			unless ($proto eq "tcp" or $proto eq "udp") {&error(__LINE__,"csf: Incorrect csf.redirect  setting ([$proto]): [$line]")}
-			unless ($ipx eq "*" or checkip(\$ipx)) {&error(__LINE__,"csf: Incorrect csf.redirect  setting ([$ipx]): [$line]")}
-			unless ($porta eq "*" or $porta > 0 or $porta < 65536) {&error(__LINE__,"csf: Incorrect csf.redirect  setting ([$porta]): [$line]")}
-			unless ($ipy eq "*" or checkip(\$ipy)) {&error(__LINE__,"csf: Incorrect csf.redirect  setting ([$ipy]): [$line]")}
-			unless ($portb eq "*" or $portb > 0 or $portb < 65536) {&error(__LINE__,"csf: Incorrect csf.redirect  setting ([$portb]): [$line]")}
+			unless ($proto eq "tcp" or $proto eq "udp") {&error(__LINE__,"qhtlfirewall: Incorrect qhtlfirewall.redirect setting ([$proto]): [$line]")}
+			unless ($ipx eq "*" or checkip(\$ipx)) {&error(__LINE__,"qhtlfirewall: Incorrect qhtlfirewall.redirect setting ([$ipx]): [$line]")}
+			unless ($porta eq "*" or $porta > 0 or $porta < 65536) {&error(__LINE__,"qhtlfirewall: Incorrect qhtlfirewall.redirect setting ([$porta]): [$line]")}
+			unless ($ipy eq "*" or checkip(\$ipy)) {&error(__LINE__,"qhtlfirewall: Incorrect qhtlfirewall.redirect setting ([$ipy]): [$line]")}
+			unless ($portb eq "*" or $portb > 0 or $portb < 65536) {&error(__LINE__,"qhtlfirewall: Incorrect qhtlfirewall.redirect setting ([$portb]): [$line]")}
 			if ($ipy eq "*") {
 				if ($ipx eq "*") {&syscommand(__LINE__,"$config{IPTABLES} $config{IPTABLESWAIT} $verbose -t nat -A PREROUTING $ethdevin -p $proto --dport $porta -j REDIRECT --to-ports $portb")}
 				else {&syscommand(__LINE__,"$config{IPTABLES} $config{IPTABLESWAIT} $verbose -t nat -A PREROUTING $ethdevin -p $proto -d $ipx --dport $porta -j REDIRECT --to-ports $portb")}
@@ -3259,7 +3259,7 @@ sub doportfilters {
 					&syscommand(__LINE__,"$config{IPTABLES} $config{IPTABLESWAIT} $verbose -t nat -A POSTROUTING $ethdevout -p $proto -d $ipy -j SNAT --to-source $ipx");
 					&syscommand(__LINE__,"$config{IPTABLES} $config{IPTABLESWAIT} $verbose -A FORWARD $ethdevin -p $proto -d $ipy --dport $portb  $statemodulenew -j ACCEPT");
 				}
-				else {&error(__LINE__,"csf: Invalid csf.redirect format [$line]")}
+				else {&error(__LINE__,"qhtlfirewall: Invalid qhtlfirewall.redirect format [$line]")}
 			}
 		}
 		if ($dnat and $config{LF_SPI}) {
@@ -3273,7 +3273,7 @@ sub doportfilters {
 ###############################################################################
 # start dodisable
 sub dodisable {
-	open (my $OUT, ">", "/etc/csf/csf.disable");
+	open (my $OUT, ">", "/etc/qhtlfirewall/qhtlfirewall.disable");
 	flock ($OUT, LOCK_EX);
 	close ($OUT);
 	unless ($config{GENERIC}) {
@@ -3307,18 +3307,18 @@ sub dodisable {
 	ConfigServer::Service::stoplfd();
 	&dostop(0);
 
-	print "csf and lfd have been disabled\n";
+	print "qhtlfirewall and qhtlwaterfall have been disabled\n";
 	return;
 }
 # end dodisable
 ###############################################################################
 # start doenable
 sub doenable {
-	unless (-e "/etc/csf/csf.disable") {
-		print "csf and lfd are not disabled!\n";
+	unless (-e "/etc/qhtlfirewall/qhtlfirewall.disable") {
+		print "qhtlfirewall and qhtlwaterfall are not disabled!\n";
 		exit 0;
 	}
-	unlink ("/etc/csf/csf.disable");
+	unlink ("/etc/qhtlfirewall/qhtlfirewall.disable");
 	&dostart;
 	ConfigServer::Service::startlfd();
 	unless ($config{GENERIC}) {
@@ -3354,7 +3354,7 @@ sub doenable {
 		close ($CONF) or &error(__LINE__,"Could not close /usr/local/directadmin/data/admin/services.status: $!");
 	}
 
-	print "csf and lfd have been enabled\n";
+	print "qhtlfirewall and qhtlwaterfall have been enabled\n";
 	return;
 }
 # end doenable
@@ -3366,7 +3366,7 @@ sub crontab {
 	my $hit = 0;
 	my @newcrontab;
 	foreach my $line (@crontab) {
-		if ($line =~ /csf(\.pl)? -f/) {
+		if ($line =~ /qhtlfirewall(\.pl)? -f/) {
 			$hit = 1;
 			if ($act eq "add") {
 				push @newcrontab, $line;
@@ -3376,7 +3376,7 @@ sub crontab {
 		}
 	}
 	if (($act eq "add") and !($hit)) {
-		push @newcrontab, "*/$config{TESTING_INTERVAL} * * * * root /usr/sbin/csf -f > /dev/null 2>&1";
+		push @newcrontab, "*/$config{TESTING_INTERVAL} * * * * root /usr/sbin/qhtlfirewall -f > /dev/null 2>&1";
 	}
 
 	if (($act eq "remove") and !($hit)) {
@@ -3445,7 +3445,7 @@ sub error {
 	}
 
 	print "Error: $error, at line $line\n";
-	open (my $OUT,">", "/etc/csf/csf.error");
+	open (my $OUT,">", "/etc/qhtlfirewall/qhtlfirewall.error");
 	flock ($OUT, LOCK_EX);
 	print $OUT "Error: $error, at line $line in /usr/sbin/csf\n";
 	close ($OUT);
@@ -3456,7 +3456,7 @@ sub error {
 ###############################################################################
 # start version
 sub version {
-	open (my $IN, "<", "/etc/csf/version.txt") or die "Unable to open version.txt: $!";
+	open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die "Unable to open version.txt: $!";
 	flock ($IN, LOCK_SH);
 	my $myv = <$IN>;
 	close ($IN);
@@ -3745,11 +3745,11 @@ sub autoupdates {
 	my $minutes = int (rand(60));
 
 	unless (-d "/etc/cron.d") {mkdir "/etc/cron.d"}
-	open (my $OUT,">", "/etc/cron.d/csf_update") or &error(__LINE__,"Could not create /etc/cron.d/csf_update: $!");
-	flock ($OUT, LOCK_EX) or &error(__LINE__,"Could not lock /etc/cron.d/csf_update: $!");
+	open (my $OUT,">", "/etc/cron.d/qhtlfirewall_update") or &error(__LINE__,"Could not create /etc/cron.d/qhtlfirewall_update: $!");
+	flock ($OUT, LOCK_EX) or &error(__LINE__,"Could not lock /etc/cron.d/qhtlfirewall_update: $!");
 	print $OUT <<END;
 SHELL=/bin/sh
-$minutes $hour * * * root /usr/sbin/csf -u
+$minutes $hour * * * root /usr/sbin/qhtlfirewall -u
 END
 	close ($OUT);
 	return;
@@ -3774,29 +3774,29 @@ sub doupdate {
 		if (($actv > $version) or $force) {
 			local $| = 1;
 
-			unless ($force) {print "Upgrading csf from v$version to $actv...\n"}
-			if (-e "/usr/src/csf.tgz") {unlink ("/usr/src/csf.tgz") or die $!}
-			print "Retrieving new csf package...\n";
+			unless ($force) {print "Upgrading qhtlfirewall from v$version to $actv...\n"}
+			if (-e "/usr/src/qhtlfirewall.tgz") {unlink ("/usr/src/qhtlfirewall.tgz") or die $!}
+			print "Retrieving new qhtlfirewall package...\n";
 
-			my $url = "https://$config{DOWNLOADSERVER}/csf.tgz";
-			if ($config{URLGET} == 1) {$url = "http://$config{DOWNLOADSERVER}/csf.tgz";}
-			my ($status, $text) = $urlget->urlget($url,"/usr/src/csf.tgz");
+			my $url = "https://$config{DOWNLOADSERVER}/qhtlfirewall.tgz";
+			if ($config{URLGET} == 1) {$url = "http://$config{DOWNLOADSERVER}/qhtlfirewall.tgz";}
+			my ($status, $text) = $urlget->urlget($url,"/usr/src/qhtlfirewall.tgz");
 
-			if (! -z "/usr/src/csf/csf.tgz") {
-				print "\nUnpacking new csf package...\n";
-				system ("cd /usr/src ; tar -xzf csf.tgz ; cd csf ; sh install.sh");
+			if (! -z "/usr/src/qhtlfirewall/qhtlfirewall.tgz") {
+				print "\nUnpacking new qhtlfirewall package...\n";
+				system ("cd /usr/src ; tar -xzf qhtlfirewall.tgz ; cd qhtlfirewall ; sh install.sh");
 				print "\nTidying up...\n";
-				system ("rm -Rfv /usr/src/csf*");
-				print "\nRestarting csf and lfd...\n";
-				system ("/usr/sbin/csf -r");
+				system ("rm -Rfv /usr/src/qhtlfirewall*");
+				print "\nRestarting qhtlfirewall and qhtlwaterfall...\n";
+				system ("/usr/sbin/qhtlfirewall -r");
 				ConfigServer::Service::restartlfd();
-				print "\n...All done.\n\nChangelog: https://$config{DOWNLOADSERVER}/csf/changelog.txt\n";
+				print "\n...All done.\n\nChangelog: https://$config{DOWNLOADSERVER}/qhtlfirewall/changelog.txt\n";
 			}
 		} else {
-			if (-t STDOUT) {print "csf is already at the latest version: v$version\n"} ##no critic
+			if (-t STDOUT) {print "qhtlfirewall is already at the latest version: v$version\n"} ##no critic
 		}
 	} else {
-		print "Unable to verify the latest version of csf at this time\n";
+		print "Unable to verify the latest version of qhtlfirewall at this time\n";
 	}
 	return;
 }
@@ -3804,8 +3804,8 @@ sub doupdate {
 ###############################################################################
 # start docheck
 sub docheck {
-	my $url = "https://$config{DOWNLOADSERVER}/csf/version.txt";
-	if ($config{URLGET} == 1) {$url = "http://$config{DOWNLOADSERVER}/csf/version.txt";}
+	my $url = "https://$config{DOWNLOADSERVER}/qhtlfirewall/version.txt";
+	if ($config{URLGET} == 1) {$url = "http://$config{DOWNLOADSERVER}/qhtlfirewall/version.txt";}
 	my ($status, $text) = $urlget->urlget($url);
 	if ($status) {print "Oops: $text\n"; exit 1}
 
@@ -3814,12 +3814,12 @@ sub docheck {
 
 	if (($actv ne "") and ($actv =~ /^[\d\.]*$/)) {
 		if ($actv > $version) {
-			print "A newer version of csf is available - Current:v$version New:v$actv\n";
+			print "A newer version of qhtlfirewall is available - Current:v$version New:v$actv\n";
 		} else {
-			print "csf is already at the latest version: v$version\n";
+			print "qhtlfirewall is already at the latest version: v$version\n";
 		}
 	} else {
-		print "Unable to verify the latest version of csf at this time\n";
+		print "Unable to verify the latest version of qhtlfirewall at this time\n";
 	}
 	return;
 }
@@ -3939,17 +3939,17 @@ $table, $chain, $rest
 
 			if ($chain =~ /^bl_(\w+)$/) {
 				$cc = $1;
-				$option = "$cc file:/etc/csf/csf.blocklists";
+				$option = "$cc file:/etc/qhtlfirewall/qhtlfirewall.blocklists";
 			}
 			if ($chain =~ /^bl_6_(\w+)$/) {
 				$cc = $1;
-				$option = "$cc file:/etc/csf/csf.blocklists";
+				$option = "$cc file:/etc/qhtlfirewall/qhtlfirewall.blocklists";
 			}
 
 			if ($chain =~ /^chain_(\w+)$/) {
 				$cc = $1;
-				if ($cc eq "DENY") {$option = " File:/etc/csf/csf.deny"}
-				if ($cc eq "ALLOW") {$option = " File:/etc/csf/csf.allow"}
+				if ($cc eq "DENY") {$option = " File:/etc/qhtlfirewall/qhtlfirewall.deny"}
+				if ($cc eq "ALLOW") {$option = " File:/etc/qhtlfirewall/qhtlfirewall.allow"}
 				if ($cc eq "GDENY") {$option = "GLOBAL_DENY"}
 				if ($cc eq "GALLOW") {$option = "GLOBAL_ALLOW"}
 				if ($cc eq "ALLOWDYN") {$option = "DYNDNS"}
@@ -3957,8 +3957,8 @@ $table, $chain, $rest
 			}
 			if ($chain =~ /^chain_6_(\w+)$/) {
 				$cc = $1;
-				if ($cc eq "DENY") {$option = " File:/etc/csf/csf.deny"}
-				if ($cc eq "ALLOW") {$option = " File:/etc/csf/csf.allow"}
+				if ($cc eq "DENY") {$option = " File:/etc/qhtlfirewall/qhtlfirewall.deny"}
+				if ($cc eq "ALLOW") {$option = " File:/etc/qhtlfirewall/qhtlfirewall.allow"}
 				if ($cc eq "GDENY") {$option = "GLOBAL_DENY"}
 				if ($cc eq "GALLOW") {$option = "GLOBAL_ALLOW"}
 				if ($cc eq "ALLOWDYN") {$option = "DYNDNS"}
@@ -4049,7 +4049,7 @@ $table, $chain, $rest
 		}
 	}
 
-	open (my $IN, "<", "/var/lib/csf/csf.tempallow");
+	open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempallow");
 	flock ($IN, LOCK_SH);
 	my @tempallow = <$IN>;
 	close ($IN);
@@ -4071,7 +4071,7 @@ $table, $chain, $rest
 			}
 		}
 	}
-	my @allow = slurp("/etc/csf/csf.allow");
+	my @allow = slurp("/etc/qhtlfirewall/qhtlfirewall.allow");
 	foreach my $line (@allow) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -4098,7 +4098,7 @@ $table, $chain, $rest
 			}
 		}
 	}
-	open (my $TEMPBAN, "<", "/var/lib/csf/csf.tempban");
+	open (my $TEMPBAN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempban");
 	flock ($TEMPBAN, LOCK_SH);
 	my @tempdeny = <$TEMPBAN>;
 	close ($TEMPBAN);
@@ -4120,7 +4120,7 @@ $table, $chain, $rest
 			}
 		}
 	}
-	my @deny = slurp("/etc/csf/csf.deny");
+	my @deny = slurp("/etc/qhtlfirewall/qhtlfirewall.deny");
 	foreach my $line (@deny) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -4159,10 +4159,10 @@ sub dotempban {
 $deny, $ip,                                   $ports,  $inout,$time,$message
 .
 	local $~ = "TEMPBAN";
-	if ((! -z "/var/lib/csf/csf.tempban") or (! -z "/var/lib/csf/csf.tempallow")) {
+	if ((! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") or (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow")) {
 		print "\nA/D   IP address                               Port   Dir   Time To Live     Comment\n";
-		if (! -z "/var/lib/csf/csf.tempban") {
-			sysopen (my $IN, "/var/lib/csf/csf.tempban", O_RDWR);
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
+			sysopen (my $IN, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR);
 			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			chomp @data;
@@ -4190,8 +4190,8 @@ $deny, $ip,                                   $ports,  $inout,$time,$message
 				foreach (split(/,/,$ports)) {write}
 			}
 		}
-		if (! -z "/var/lib/csf/csf.tempallow") {
-			sysopen (my $IN, "/var/lib/csf/csf.tempallow", O_RDWR);
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
+			sysopen (my $IN, "/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR);
 			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			chomp @data;
@@ -4220,7 +4220,7 @@ $deny, $ip,                                   $ports,  $inout,$time,$message
 			}
 		}
 	} else {
-		print "csf: There are no temporary IP entries\n";
+		print "qhtlfirewall: There are no temporary IP entries\n";
 	}
 	return;
 }
@@ -4243,11 +4243,11 @@ sub dotempdeny {
 
 	my $iptype = checkip(\$ip);
 	if ($iptype == 6 and !$config{IPV6}) {
-		print "failed: [$ip] is valid IPv6 but IPV6 is not enabled in csf.conf\n";
+		print "failed: [$ip] is valid IPv6 but IPV6 is not enabled in qhtlfirewall.conf\n";
 	}
 
 	unless ($iptype) {
-		print "csf: [$ip] is not a valid PUBLIC IP\n";
+		print "qhtlfirewall: [$ip] is not a valid PUBLIC IP\n";
 		return;
 	}
 
@@ -4274,7 +4274,7 @@ sub dotempdeny {
 	$comment =~ s/^\s*|\s*$//g;
 	if ($comment eq "") {$comment = "Manually added: ".iplookup($ip)}
 
-	my @deny = slurp("/etc/csf/csf.deny");
+	my @deny = slurp("/etc/qhtlfirewall/qhtlfirewall.deny");
 	foreach my $line (@deny) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -4283,16 +4283,16 @@ sub dotempdeny {
 	}
 	my $ipstring = quotemeta($ip);
 	if (grep {$_ =~ /^$ipstring\b/} @deny) {
-		print "csf: $ip is already permanently blocked\n";
+		print "qhtlfirewall: $ip is already permanently blocked\n";
 		exit 0;
 	}
-	open (my $IN, "<", "/var/lib/csf/csf.tempban");
+	open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempban");
 	flock ($IN, LOCK_SH);
 	@deny = <$IN>;
 	close ($IN);
 	chomp @deny;
 	if (grep {$_ =~ /\b$ip\|$port\|\b/} @deny) {
-		print "csf: $ip is already temporarily blocked\n";
+		print "qhtlfirewall: $ip is already temporarily blocked\n";
 		exit 0;
 	}
 
@@ -4350,7 +4350,7 @@ sub dotempdeny {
 
 	if ($config{CF_ENABLE} and $cftemp) {$comment .= " (CF_ENABLE)"}
 
-	sysopen (my $OUT, "/var/lib/csf/csf.tempban", O_WRONLY | O_APPEND | O_CREAT) or &error(__LINE__,"Error: Can't append out file: $!");
+	sysopen (my $OUT, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_WRONLY | O_APPEND | O_CREAT) or &error(__LINE__,"Error: Can't append out file: $!");
 	flock ($OUT, LOCK_EX);
 	print $OUT time."|$ip|$port|$inout|$timeout|$comment\n";
 	close ($OUT);
@@ -4359,7 +4359,7 @@ sub dotempdeny {
 	if ($inout eq "in") {$inout = "inbound"}
 	if ($inout eq "out") {$inout = "outbound"}
 	if ($inout eq "inout") {$inout = "in and outbound"}
-	print "csf: $ip blocked on port $port for $timeout seconds $inout\n";
+	print "qhtlfirewall: $ip blocked on port $port for $timeout seconds $inout\n";
 	return;
 }
 # end dotempdeny
@@ -4381,11 +4381,11 @@ sub dotempallow {
 
 	my $iptype = checkip(\$ip);
 	if ($iptype == 6 and !$config{IPV6}) {
-		print "failed: [$ip] is valid IPv6 but IPV6 is not enabled in csf.conf\n";
+		print "failed: [$ip] is valid IPv6 but IPV6 is not enabled in qhtlfirewall.conf\n";
 	}
 
 	unless ($iptype) {
-		print "csf: [$ip] is not a valid PUBLIC IP\n";
+		print "qhtlfirewall: [$ip] is not a valid PUBLIC IP\n";
 		return;
 	}
 	if ($timeout =~ /\D/) {
@@ -4405,7 +4405,7 @@ sub dotempallow {
 	$comment =~ s/^\s*|\s*$//g;
 	if ($comment eq "") {$comment = "Manually added: ".iplookup($ip)}
 
-	my @allow = slurp("/etc/csf/csf.allow");
+	my @allow = slurp("/etc/qhtlfirewall/qhtlfirewall.allow");
 	foreach my $line (@allow) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -4413,16 +4413,16 @@ sub dotempallow {
 		}
 	}
 	if (grep {$_ =~ /^$ip\b/} @allow) {
-		print "csf: $ip is already permanently allowed\n";
+		print "qhtlfirewall: $ip is already permanently allowed\n";
 		exit 0;
 	}
-	open (my $IN, "<", "/var/lib/csf/csf.tempallow");
+	open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempallow");
 	flock ($IN, LOCK_SH);
 	@allow = <$IN>;
 	close ($IN);
 	chomp @allow;
 	if (grep {$_ =~ /\b$ip\|$port\|\b/} @allow) {
-		print "csf: $ip is already temporarily allowed\n";
+		print "qhtlfirewall: $ip is already temporarily allowed\n";
 		exit 0;
 	}
 
@@ -4474,7 +4474,7 @@ sub dotempallow {
 
 	if ($config{CF_ENABLE} and $cftemp) {$comment .= " (CF_ENABLE)"}
 
-	sysopen (my $OUT, "/var/lib/csf/csf.tempallow", O_WRONLY | O_APPEND | O_CREAT) or &error(__LINE__,"Error: Can't append out file: $!");
+	sysopen (my $OUT, "/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_WRONLY | O_APPEND | O_CREAT) or &error(__LINE__,"Error: Can't append out file: $!");
 	flock ($OUT, LOCK_EX);
 	print $OUT time."|$ip|$port|$inout|$timeout|$comment\n";
 	close ($OUT);
@@ -4483,7 +4483,7 @@ sub dotempallow {
 	if ($inout eq "in") {$inout = "inbound"}
 	if ($inout eq "out") {$inout = "outbound"}
 	if ($inout eq "inout") {$inout = "in and outbound"}
-	print "csf: $ip allowed on port $port for $timeout seconds $inout\n";
+	print "qhtlfirewall: $ip allowed on port $port for $timeout seconds $inout\n";
 	return;
 }
 # end dotempallow
@@ -4493,7 +4493,7 @@ sub dotemprm {
 	my $ip = $input{argument};
 
 	if ($ip eq "") {
-		print "csf: No IP specified\n";
+		print "qhtlfirewall: No IP specified\n";
 		return;
 	}
 
@@ -4503,13 +4503,13 @@ sub dotemprm {
 	}
 
 	unless ($iptype) {
-		print "csf: [$ip] is not a valid PUBLIC IP\n";
+		print "qhtlfirewall: [$ip] is not a valid PUBLIC IP\n";
 		return;
 	}
 	&getethdev;
-	if (! -z "/var/lib/csf/csf.tempban") {
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
 		my $unblock = 0;
-		sysopen (my $TEMPBAN, "/var/lib/csf/csf.tempban", O_RDWR | O_CREAT);
+		sysopen (my $TEMPBAN, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR | O_CREAT);
 		flock ($TEMPBAN, LOCK_EX);
 		my @data = <$TEMPBAN>;
 		chomp @data;
@@ -4568,7 +4568,7 @@ sub dotemprm {
 					}
 				}
 				if ($config{CF_ENABLE} and $message =~ /\(CF_ENABLE\)/) {ConfigServer::CloudFlare::action("remove",$ip,$config{CF_BLOCK})}
-				print "csf: $ip temporary block removed\n";
+				print "qhtlfirewall: $ip temporary block removed\n";
 				$unblock = 1;
 			} else {
 				push @newdata, $line;
@@ -4579,14 +4579,14 @@ sub dotemprm {
 		foreach my $line (@newdata) {print $TEMPBAN "$line\n"}
 		close ($TEMPBAN);
 		unless ($unblock) {
-			print "csf: $ip not found in temporary bans\n";
+			print "qhtlfirewall: $ip not found in temporary bans\n";
 		}
 	} else {
-		print "csf: There are no temporary IP bans\n";
+		print "qhtlfirewall: There are no temporary IP bans\n";
 	}
-	if (! -z "/var/lib/csf/csf.tempallow") {
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
 		my $unblock = 0;
-		sysopen (my $TEMPALLOW, "/var/lib/csf/csf.tempallow", O_RDWR | O_CREAT);
+		sysopen (my $TEMPALLOW, "/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR | O_CREAT);
 		flock ($TEMPALLOW, LOCK_EX);
 		my @data = <$TEMPALLOW>;
 		chomp @data;
@@ -4636,7 +4636,7 @@ sub dotemprm {
 					}
 				}
 				if ($config{CF_ENABLE} and $message =~ /\(CF_ENABLE\)/) {ConfigServer::CloudFlare::action("remove",$ip,"whitelist")}
-				print "csf: $ip temporary allow removed\n";
+				print "qhtlfirewall: $ip temporary allow removed\n";
 				$unblock = 1;
 			} else {
 				push @newdata, $line;
@@ -4647,10 +4647,10 @@ sub dotemprm {
 		foreach my $line (@newdata) {print $TEMPALLOW "$line\n"}
 		close ($TEMPALLOW);
 		unless ($unblock) {
-			print "csf: $ip not found in temporary allows\n";
+			print "qhtlfirewall: $ip not found in temporary allows\n";
 		}
 	} else {
-		print "csf: There are no temporary IP allows\n";
+		print "qhtlfirewall: There are no temporary IP allows\n";
 	}
 	return;
 }
@@ -4661,7 +4661,7 @@ sub dotemprmd {
 	my $ip = $input{argument};
 
 	if ($ip eq "") {
-		print "csf: No IP specified\n";
+		print "qhtlfirewall: No IP specified\n";
 		return;
 	}
 
@@ -4671,13 +4671,13 @@ sub dotemprmd {
 	}
 
 	unless ($iptype) {
-		print "csf: [$ip] is not a valid PUBLIC IP\n";
+		print "qhtlfirewall: [$ip] is not a valid PUBLIC IP\n";
 		return;
 	}
 	&getethdev;
-	if (! -z "/var/lib/csf/csf.tempban") {
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
 		my $unblock = 0;
-		sysopen (my $TEMPBAN, "/var/lib/csf/csf.tempban", O_RDWR | O_CREAT);
+		sysopen (my $TEMPBAN, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR | O_CREAT);
 		flock ($TEMPBAN, LOCK_EX);
 		my @data = <$TEMPBAN>;
 		chomp @data;
@@ -4736,7 +4736,7 @@ sub dotemprmd {
 					}
 				}
 				if ($config{CF_ENABLE} and $message =~ /\(CF_ENABLE\)/) {ConfigServer::CloudFlare::action("remove",$ip,$config{CF_BLOCK})}
-				print "csf: $ip temporary block removed\n";
+				print "qhtlfirewall: $ip temporary block removed\n";
 				$unblock = 1;
 			} else {
 				push @newdata, $line;
@@ -4747,10 +4747,10 @@ sub dotemprmd {
 		foreach my $line (@newdata) {print $TEMPBAN "$line\n"}
 		close ($TEMPBAN);
 		unless ($unblock) {
-			print "csf: $ip not found in temporary bans\n";
+			print "qhtlfirewall: $ip not found in temporary bans\n";
 		}
 	} else {
-		print "csf: There are no temporary IP bans\n";
+		print "qhtlfirewall: There are no temporary IP bans\n";
 	}
 
 	return;
@@ -4762,7 +4762,7 @@ sub dotemprma {
 	my $ip = $input{argument};
 
 	if ($ip eq "") {
-		print "csf: No IP specified\n";
+		print "qhtlfirewall: No IP specified\n";
 		return;
 	}
 
@@ -4772,13 +4772,13 @@ sub dotemprma {
 	}
 
 	unless ($iptype) {
-		print "csf: [$ip] is not a valid PUBLIC IP\n";
+		print "qhtlfirewall: [$ip] is not a valid PUBLIC IP\n";
 		return;
 	}
 	&getethdev;
-	if (! -z "/var/lib/csf/csf.tempallow") {
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
 		my $unblock = 0;
-		sysopen (my $TEMPALLOW, "/var/lib/csf/csf.tempallow", O_RDWR | O_CREAT);
+		sysopen (my $TEMPALLOW, "/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR | O_CREAT);
 		flock ($TEMPALLOW, LOCK_EX);
 		my @data = <$TEMPALLOW>;
 		chomp @data;
@@ -4828,7 +4828,7 @@ sub dotemprma {
 					}
 				}
 				if ($config{CF_ENABLE} and $message =~ /\(CF_ENABLE\)/) {ConfigServer::CloudFlare::action("remove",$ip,"whitelist")}
-				print "csf: $ip temporary allow removed\n";
+				print "qhtlfirewall: $ip temporary allow removed\n";
 				$unblock = 1;
 			} else {
 				push @newdata, $line;
@@ -4839,10 +4839,10 @@ sub dotemprma {
 		foreach my $line (@newdata) {print $TEMPALLOW "$line\n"}
 		close ($TEMPALLOW);
 		unless ($unblock) {
-			print "csf: $ip not found in temporary allows\n";
+			print "qhtlfirewall: $ip not found in temporary allows\n";
 		}
 	} else {
-		print "csf: There are no temporary IP allows\n";
+		print "qhtlfirewall: There are no temporary IP allows\n";
 	}
 	return;
 }
@@ -4851,8 +4851,8 @@ sub dotemprma {
 # start dotempf
 sub dotempf {
 	&getethdev;
-	if (! -z "/var/lib/csf/csf.tempban") {
-		sysopen (my $TEMPBAN, "/var/lib/csf/csf.tempban", O_RDWR | O_CREAT);
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
+		sysopen (my $TEMPBAN, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR | O_CREAT);
 		flock ($TEMPBAN, LOCK_EX);
 		my @data = <$TEMPBAN>;
 		chomp @data;
@@ -4912,16 +4912,16 @@ sub dotempf {
 				}
 			}
 			if ($config{CF_ENABLE} and $message =~ /\(CF_ENABLE\)/) {ConfigServer::CloudFlare::action("remove",$ip,$config{CF_BLOCK})}
-			print "csf: $ip temporary block removed\n";
+			print "qhtlfirewall: $ip temporary block removed\n";
 		}
 		seek ($TEMPBAN, 0, 0);
 		truncate ($TEMPBAN, 0);
 		close ($TEMPBAN);
 	} else {
-		print "csf: There are no temporary IP bans\n";
+		print "qhtlfirewall: There are no temporary IP bans\n";
 	}
-	if (! -z "/var/lib/csf/csf.tempallow") {
-		sysopen (my $TEMPALLOW, "/var/lib/csf/csf.tempallow", O_RDWR | O_CREAT);
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
+		sysopen (my $TEMPALLOW, "/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR | O_CREAT);
 		flock ($TEMPALLOW, LOCK_EX);
 		my @data = <$TEMPALLOW>;
 		chomp @data;
@@ -4972,13 +4972,13 @@ sub dotempf {
 				}
 			}
 			if ($config{CF_ENABLE} and $message =~ /\(CF_ENABLE\)/) {ConfigServer::CloudFlare::action("remove",$ip,"whitelist")}
-			print "csf: $ip temporary allow removed\n";
+			print "qhtlfirewall: $ip temporary allow removed\n";
 		}
 		seek ($TEMPALLOW, 0, 0);
 		truncate ($TEMPALLOW, 0);
 		close ($TEMPALLOW);
 	} else {
-		print "csf: There are no temporary IP allows\n";
+		print "qhtlfirewall: There are no temporary IP allows\n";
 	}
 	return;
 }
@@ -4986,7 +4986,7 @@ sub dotempf {
 ###############################################################################
 # start dowatch
 sub dowatch {
-	print "csf: --watch, -w is no longer supported. Use --trace instead\n";
+	print "qhtlfirewall: --watch, -w is no longer supported. Use --trace instead\n";
 	return;
 }
 # end dowatch
@@ -4997,13 +4997,13 @@ sub dotrace {
 	my $ip = $ARGV[2];
 
 	if ($ip eq "") {
-		print "csf: No IP specified\n";
+		print "qhtlfirewall: No IP specified\n";
 		return;
 	}
 
 	my $checkip = checkip(\$ip);
 	unless ($checkip) {
-		print "csf: [$ip] is not a valid PUBLIC IP\n";
+		print "qhtlfirewall: [$ip] is not a valid PUBLIC IP\n";
 		return;
 	}
 
@@ -5013,7 +5013,7 @@ sub dotrace {
 		} else {
 			&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -t raw -I PREROUTING -p tcp --syn --source $ip -j TRACE");
 		}
-		print "csf: Added trace for $ip\n";
+		print "qhtlfirewall: Added trace for $ip\n";
 	}
 	elsif ($cmd eq "remove") {
 		if ($checkip == 4) {
@@ -5021,10 +5021,10 @@ sub dotrace {
 		} else {
 			&syscommand(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} $verbose -t raw -D PREROUTING -p tcp --syn --source $ip -j TRACE");
 		}
-		print "csf: Removed trace for $ip\n";
+		print "qhtlfirewall: Removed trace for $ip\n";
 	}
 	else {
-		print "csf: Error, use [add|remove] [ip]\n";
+		print "qhtlfirewall: Error, use [add|remove] [ip]\n";
 	}
 
 	return;
@@ -5034,7 +5034,7 @@ sub dotrace {
 # start dologrun
 sub dologrun {
 	if ($config{LOGSCANNER}) {
-		open (my $OUT, ">", "/var/lib/csf/csf.logrun") or &error(__LINE__,"Could not create /var/lib/csf/csf.logrun: $!");
+		open (my $OUT, ">", "/var/lib/qhtlfirewall/qhtlfirewall.logrun") or &error(__LINE__,"Could not create /var/lib/qhtlfirewall/qhtlfirewall.logrun: $!");
 		flock ($OUT, LOCK_EX);
 		close ($OUT);
 	} else {
@@ -5220,8 +5220,8 @@ sub doprofile {
 	$profile2 =~ s/\W/_/g;
 
 	if ($cmd eq "list") {
-		my @profiles = sort glob("/usr/local/csf/profiles/*");
-		my @backups = reverse glob("/var/lib/csf/backup/*");
+		my @profiles = sort glob("/usr/local/qhtlfirewall/profiles/*");
+		my @backups = reverse glob("/var/lib/qhtlfirewall/backup/*");
 		print "\n";
 		print "Configuration Profiles\n";
 		print "======================\n";
@@ -5244,24 +5244,24 @@ sub doprofile {
 	elsif ($cmd eq "backup") {
 		unless ($profile1) {$profile1 = "backup"}
 		print "Creating backup...\n";
-		system("/bin/cp","-avf","/etc/csf/csf.conf","/var/lib/csf/backup/${stamp}_${profile1}");
+		system("/bin/cp","-avf","/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/${stamp}_${profile1}");
 	}
 	elsif ($cmd eq "restore") {
-		if (-e "/var/lib/csf/backup/$profile1") {
+		if (-e "/var/lib/qhtlfirewall/backup/$profile1") {
 			print "Restoring backup...\n";
-			system("/bin/cp","-avf","/var/lib/csf/backup/${profile1}","/etc/csf/csf.conf");
+			system("/bin/cp","-avf","/var/lib/qhtlfirewall/backup/${profile1}","/etc/qhtlfirewall/qhtlfirewall.conf");
 			print "You should now restart csf and then lfd\n";
 		} else {
-			print "File [$profile1] not found in /var/lib/csf/backup/\n";
+			print "File [$profile1] not found in /var/lib/qhtlfirewall/backup/\n";
 		}
 	}
 	elsif ($cmd eq "apply") {
-		if (-e "/usr/local/csf/profiles/${profile1}.conf") {
+		if (-e "/usr/local/qhtlfirewall/profiles/${profile1}.conf") {
 			my %apply;
 			print "Creating backup...\n";
-			system("/bin/cp","-avf","/etc/csf/csf.conf","/var/lib/csf/backup/${stamp}_pre_${profile1}");
+			system("/bin/cp","-avf","/etc/qhtlfirewall/qhtlfirewall.conf","/var/lib/qhtlfirewall/backup/${stamp}_pre_${profile1}");
 			print "Applying profile...\n";
-			open (my $IN, "<", "/usr/local/csf/profiles/${profile1}.conf") or die $!;
+			open (my $IN, "<", "/usr/local/qhtlfirewall/profiles/${profile1}.conf") or die $!;
 			flock ($IN, LOCK_SH) or die $!;
 			my @applyconfig = <$IN>;
 			close ($IN);
@@ -5275,13 +5275,13 @@ sub doprofile {
 				$apply{$name} = $value;
 			}
 
-			sysopen (my $CONF, "/etc/csf/csf.conf", O_RDWR | O_CREAT) or die "Unable to open file: $!";
+			sysopen (my $CONF, "/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT) or die "Unable to open file: $!";
 			flock ($CONF, LOCK_SH);
 			my @confdata = <$CONF>;
 			close ($CONF);
 			chomp @confdata;
 
-			sysopen (my $OUT, "/etc/csf/csf.conf", O_WRONLY | O_CREAT) or die "Unable to open file: $!";
+			sysopen (my $OUT, "/etc/qhtlfirewall/qhtlfirewall.conf", O_WRONLY | O_CREAT) or die "Unable to open file: $!";
 			flock ($OUT, LOCK_EX);
 			seek ($OUT, 0, 0);
 			truncate ($OUT, 0);
@@ -5305,7 +5305,7 @@ sub doprofile {
 	}
 	elsif ($cmd eq "keep") {
 		if ($profile1 =~ /^\d+$/) {
-			my @backups = reverse glob("/var/lib/csf/backup/*");
+			my @backups = reverse glob("/var/lib/qhtlfirewall/backup/*");
 			for ($profile1..(@backups -1)) {
 				system("/bin/rm","-fv",$backups[$_]);
 			}
@@ -5314,13 +5314,13 @@ sub doprofile {
 		}
 	} 
 	elsif ($cmd eq "diff") {
-		my $firstfile = "/var/lib/csf/backup/$profile1";
-		my $secondfile = "/var/lib/csf/backup/$profile2";
-		if (-e "/usr/local/csf/profiles/${profile1}.conf") {
-			$firstfile = "/usr/local/csf/profiles/${profile1}.conf";
+		my $firstfile = "/var/lib/qhtlfirewall/backup/$profile1";
+		my $secondfile = "/var/lib/qhtlfirewall/backup/$profile2";
+		if (-e "/usr/local/qhtlfirewall/profiles/${profile1}.conf") {
+			$firstfile = "/usr/local/qhtlfirewall/profiles/${profile1}.conf";
 		}
-		if (-e "/usr/local/csf/profiles/${profile2}.conf") {
-			$secondfile = "/usr/local/csf/profiles/${profile2}.conf";
+		if (-e "/usr/local/qhtlfirewall/profiles/${profile2}.conf") {
+			$secondfile = "/usr/local/qhtlfirewall/profiles/${profile2}.conf";
 		}
 		if (-e $firstfile) {
 			if (-e $secondfile or $profile2 eq "" or $profile2 eq "current") {
@@ -5342,7 +5342,7 @@ sub doprofile {
 				my $PROFILE;
 				if ($profile2 eq "" or $profile2 eq "current") {
 					$profile2 = "current";
-					open ($PROFILE, "<", "/etc/csf/csf.conf") or die $!;
+					open ($PROFILE, "<", "/etc/qhtlfirewall/qhtlfirewall.conf") or die $!;
 				} else {
 					open ($PROFILE, "<", $secondfile) or die $!;
 				}
@@ -5363,10 +5363,10 @@ sub doprofile {
 					}
 				}
 			} else {
-				print "File [$profile2] not found in /var/lib/csf/backup/\n";
+				print "File [$profile2] not found in /var/lib/qhtlfirewall/backup/\n";
 			}
 		} else {
-			print "File [$profile1] not found in /var/lib/csf/backup/\n";
+			print "File [$profile1] not found in /var/lib/qhtlfirewall/backup/\n";
 		}
 	} 
 	else {
@@ -5721,7 +5721,7 @@ sub iptableslock {
 	my $lock = shift;
 	my $iptablesx = shift;
 	if ($lock eq "lock") {
-		sysopen ($IPTABLESLOCK, "/var/lib/csf/lock/command.lock", O_RDWR | O_CREAT);
+		sysopen ($IPTABLESLOCK, "/var/lib/qhtlfirewall/lock/command.lock", O_RDWR | O_CREAT);
 		flock ($IPTABLESLOCK, LOCK_EX);
 		autoflush $IPTABLESLOCK 1;
 		seek ($IPTABLESLOCK, 0, 0);
@@ -5783,7 +5783,7 @@ sub modprobe {
 sub faststart {
 	my $text = shift;
 	if (@faststart4) {
-		if ($verbose) {print "csf: FASTSTART loading $text (IPv4)\n"}
+		if ($verbose) {print "qhtlfirewall: FASTSTART loading $text (IPv4)\n"}
 		my $status;
 		if ($config{VPS}) {$status = &fastvps(scalar @faststart4)}
 		if ($status) {&error(__LINE__,$status)}
@@ -5805,7 +5805,7 @@ sub faststart {
 		&iptableslock("unlock",1);
 	}
 	if (@faststart4nat) {
-		if ($verbose) {print "csf: FASTSTART loading $text (IPv4 nat)\n"}
+		if ($verbose) {print "qhtlfirewall: FASTSTART loading $text (IPv4 nat)\n"}
 		my $status;
 		if ($config{VPS}) {$status = &fastvps(scalar @faststart4nat)}
 		if ($status) {&error(__LINE__,$status)}
@@ -5827,7 +5827,7 @@ sub faststart {
 		&iptableslock("unlock",1);
 	}
 	if (@faststart6 and $config{IPV6}) {
-		if ($verbose) {print "csf: FASTSTART loading $text (IPv6)\n"}
+		if ($verbose) {print "qhtlfirewall: FASTSTART loading $text (IPv6)\n"}
 		my $status;
 		if ($config{VPS}) {$status = &fastvps(scalar @faststart6)}
 		if ($status) {&error(__LINE__,$status)}
@@ -5849,7 +5849,7 @@ sub faststart {
 		&iptableslock("unlock",1);
 	}
 	if (@faststart6nat and $config{IPV6}) {
-		if ($verbose) {print "csf: FASTSTART loading $text (IPv6 nat)\n"}
+		if ($verbose) {print "qhtlfirewall: FASTSTART loading $text (IPv6 nat)\n"}
 		my $status;
 		if ($config{VPS}) {$status = &fastvps(scalar @faststart6nat)}
 		if ($status) {&error(__LINE__,$status)}
@@ -5871,7 +5871,7 @@ sub faststart {
 		&iptableslock("unlock",1);
 	}
 	if (@faststartipset) {
-		if ($verbose) {print "csf: FASTSTART loading $text (IPSET)\n"}
+		if ($verbose) {print "qhtlfirewall: FASTSTART loading $text (IPSET)\n"}
 		my ($childin, $childout);
 		my $cmdpid = open3($childin, $childout, $childout, $config{IPSET},"restore");
 		print $childin join("\n",@faststartipset)."\n";
@@ -5919,7 +5919,7 @@ sub ipsetcreate {
 	$SIG{PIPE} = 'IGNORE';
 	my $family = "inet";
 	if ($set =~ /_6/) {$family = "inet6"}
-	if ($verbose) {print "csf: IPSET creating set $set\n"}
+	if ($verbose) {print "qhtlfirewall: IPSET creating set $set\n"}
 	my ($childin, $childout);
 	my $cmdpid = open3($childin, $childout, $childout, $config{IPSET},"create","-exist",$set,"hash:net","family",$family,"hashsize",$config{LF_IPSET_HASHSIZE},"maxelem",$config{LF_IPSET_MAXELEM});
 	close $childin;
@@ -5938,7 +5938,7 @@ sub ipsetcreate {
 sub ipsetrestore {
 	my $set = shift;
 	$SIG{PIPE} = 'IGNORE';
-	if ($verbose) {print "csf: IPSET loading set $set with ".scalar(@ipset)." entries\n"}
+	if ($verbose) {print "qhtlfirewall: IPSET loading set $set with ".scalar(@ipset)." entries\n"}
 	my ($childin, $childout);
 	my $cmdpid = open3($childin, $childout, $childout, $config{IPSET},"restore");
 	print $childin join("\n",@ipset)."\n";
@@ -5968,7 +5968,7 @@ sub ipsetadd {
 		push @faststartipset, "add -exist $set $ip";
 		return;
 	}
-	if ($verbose) {print "csf: IPSET adding [$ip] to set [$set]\n"}
+	if ($verbose) {print "qhtlfirewall: IPSET adding [$ip] to set [$set]\n"}
 	my ($childin, $childout);
 	my $cmdpid = open3($childin, $childout, $childout, $config{IPSET},"add","-exist",$set,$ip);
 	close $childin;
@@ -5992,7 +5992,7 @@ sub ipsetdel {
 	if ($set =~ /^(\w+)(IN|OUT)$/) {$set = $1}
 	if ($set =~ /^bl(_6)?_NEW(\w+)$/) {$set = "bl".$1."_".$2}
 	if ($set eq "" or $ip eq "") {return}
-	if ($verbose) {print "csf: IPSET deleting [$ip] from set [$set]\n"}
+	if ($verbose) {print "qhtlfirewall: IPSET deleting [$ip] from set [$set]\n"}
 	my ($childin, $childout);
 	my $cmdpid = open3($childin, $childout, $childout, $config{IPSET},"del",$set,$ip);
 	close $childin;
diff --git a/qhtlfirewall/qhtlfirewall.service b/qhtlfirewall/qhtlfirewall.service
index ff0aeb3..33c4d55 100644
--- a/qhtlfirewall/qhtlfirewall.service
+++ b/qhtlfirewall/qhtlfirewall.service
@@ -4,8 +4,8 @@ After=network.target
 Before=qhtlwaterfall.service
 
 [Service]
-ExecStart=/usr/sbin/csf --initup
-ExecStop=/usr/sbin/csf --initdown ; /usr/sbin/csf --stop
+ExecStart=/usr/sbin/qhtlfirewall --initup
+ExecStop=/usr/sbin/qhtlfirewall --initdown ; /usr/sbin/qhtlfirewall --stop
 RemainAfterExit=yes
 Type=oneshot
 
diff --git a/qhtlfirewall/qhtlwaterfall.pl b/qhtlfirewall/qhtlwaterfall.pl
index cc71b62..6b4f9a1 100644
--- a/qhtlfirewall/qhtlwaterfall.pl
+++ b/qhtlfirewall/qhtlwaterfall.pl
@@ -20,7 +20,7 @@
 ## no critic (RequireUseWarnings, ProhibitExplicitReturnUndef, ProhibitMixedBooleanOperators, RequireBriefOpen, RequireLocalizedPunctuationVars)
 # start main
 use strict;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use Fcntl qw(:DEFAULT :flock);
 use IO::Handle;
 use IPC::Open3;
@@ -72,15 +72,15 @@ our (@cccidrs, @cidrs, @faststart4, @faststart4nat, @faststart6,
      @faststart6nat, @faststartipset, @gcidrs, @ipset, @lfbuf, @lffd, @lfino,
 	 @lfsize, @logignore, @matchfile, @rdns, @suspicious);
 
-$pidfile = "/var/run/lfd.pid";
+$pidfile = "/run/qhtlwaterfall.pid";
 
-if (-e "/etc/csf/csf.disable") {
-	print "csf and lfd have been disabled\n";
+if (-e "/etc/qhtlfirewall/qhtlfirewall.disable") {
+	print "qhtlfirewall and qhtlwaterfall have been disabled\n";
 	exit 1;
 }
 
-if (-e "/etc/csf/csf.error") {
-	print "\nError: You have an unresolved error when starting csf. You need to restart csf successfully before starting lfd (see /etc/csf/csf.error)\n";
+if (-e "/etc/qhtlfirewall/qhtlfirewall.error") {
+    print "\nError: You have an unresolved error when starting qhtlfirewall. You need to restart qhtlfirewall successfully before starting qhtlwaterfall (see /etc/qhtlfirewall/qhtlfirewall.error)\n";
 	exit 1;
 }
 
@@ -92,8 +92,8 @@ $ipv6reg = $config->ipv6reg;
 $slurpreg = ConfigServer::Slurp->slurpreg;
 $cleanreg = ConfigServer::Slurp->cleanreg;
 
-unless ($config{LF_DAEMON}) {&cleanup(__LINE__,"*Error* LF_DAEMON not enabled in /etc/csf/csf.conf")}
-if ($config{TESTING}) {&cleanup(__LINE__,"*Error* lfd will not run with TESTING enabled in /etc/csf/csf.conf")}
+unless ($config{LF_DAEMON}) {&cleanup(__LINE__,"*Error* LF_DAEMON not enabled in /etc/qhtlfirewall/qhtlfirewall.conf")}
+if ($config{TESTING}) {&cleanup(__LINE__,"*Error* qhtlwaterfall will not run with TESTING enabled in /etc/qhtlfirewall/qhtlfirewall.conf")}
 
 if ($config{UI}) {
 	require ConfigServer::DisplayUI;
@@ -140,7 +140,7 @@ if ($config{CF_ENABLE}) {
 	require ConfigServer::CloudFlare;
 	import ConfigServer::CloudFlare;
 }
-if (-e "/etc/cxs/cxs.reputation" and -e "/usr/local/csf/lib/ConfigServer/cxs.pm") {
+if (-e "/etc/cxs/cxs.reputation" and -e "/usr/local/qhtlfirewall/lib/ConfigServer/cxs.pm") {
 	require ConfigServer::cxs;
 	import ConfigServer::cxs;
 	$cxsreputation = 1;
@@ -156,7 +156,7 @@ if ($pid = fork)  {
 	die "*Error* Unable to fork: $!";
 }
 
-chdir("/etc/csf");
+chdir("/etc/qhtlfirewall");
 
 close(STDIN);
 close(STDOUT);
@@ -171,7 +171,7 @@ $| = 1;
 select $oldfh; ##no critic
 
 if ($config{DEBUG}) {
-	open (STDERR, ">>", "/var/log/lfd.log");
+	open (STDERR, ">>", "/var/log/qhtlwaterfall.log");
 }
 
 if (-e "/proc/sys/kernel/hostname") {
@@ -187,8 +187,8 @@ $hostshort = (split(/\./,$hostname))[0];
 $clock_ticks = sysconf( &POSIX::_SC_CLK_TCK ) || 100;
 $tz = strftime("%z", localtime);
 
-sysopen ($PIDFILE, $pidfile, O_RDWR | O_CREAT) or &childcleanup(__LINE__,"*Error* unable to create lfd PID file [$pidfile] $!");
-flock ($PIDFILE, LOCK_EX | LOCK_NB) or &childcleanup(__LINE__,"*Error* attempt to start lfd when it is already running");
+sysopen ($PIDFILE, $pidfile, O_RDWR | O_CREAT) or &childcleanup(__LINE__,"*Error* unable to create qhtlwaterfall PID file [$pidfile] $!");
+flock ($PIDFILE, LOCK_EX | LOCK_NB) or &childcleanup(__LINE__,"*Error* attempt to start qhtlwaterfall when it is already running");
 autoflush $PIDFILE 1;
 seek ($PIDFILE, 0, 0);
 truncate ($PIDFILE, 0);
@@ -196,7 +196,7 @@ print $PIDFILE "$pid\n";
 $pidino = (stat($pidfile))[1];
 $masterpid = $pid;
 
-$0 = "lfd - starting";
+$0 = "qhtlwaterfall - starting";
 
 $SIG{INT} = \&cleanup;
 $SIG{TERM} = \&cleanup;
@@ -218,16 +218,16 @@ $faststart = 0;
 
 eval {
 	local $SIG{__DIE__} = undef;
-	$urlget = ConfigServer::URLGet->new($config{URLGET}, "csf/$version", $config{URLPROXY});
+	$urlget = ConfigServer::URLGet->new($config{URLGET}, "qhtlfirewall/$version", $config{URLPROXY});
 };
 unless (defined $urlget) {
 	if (-e $config{CURL} or -e $config{WGET}) {
 		$config{URLGET} = 3;
-		$urlget = ConfigServer::URLGet->new($config{URLGET}, "csf/$version", $config{URLPROXY});
+		$urlget = ConfigServer::URLGet->new($config{URLGET}, "qhtlfirewall/$version", $config{URLPROXY});
 		logfile("*WARNING* URLGET set to use LWP but perl module is not installed, fallback to using CURL/WGET");
 	} else {
 		$config{URLGET} = 1;
-		$urlget = ConfigServer::URLGet->new($config{URLGET}, "csf/$version", $config{URLPROXY});
+		$urlget = ConfigServer::URLGet->new($config{URLGET}, "qhtlfirewall/$version", $config{URLPROXY});
 		logfile("*WARNING* URLGET set to use LWP but perl module is not installed, CURL and WGET not installed - reverting to HTTP::Tiny");
 	}
 }
@@ -247,19 +247,19 @@ if (-e "/usr/local/cpanel/version") {
 	}
 }
 
-if (-e "/var/lib/csf/csf.tempconf") {unlink ("/var/lib/csf/csf.tempconf")}
-if (-e "/var/lib/csf/lfd.enable") {unlink "/var/lib/csf/lfd.enable"}
-if (-e "/var/lib/csf/lfd.start") {unlink "/var/lib/csf/lfd.start"}
-if (-e "/var/lib/csf/lfd.restart") {unlink "/var/lib/csf/lfd.restart"}
-if (-e "/var/lib/csf/csf.4.saved") {unlink "/var/lib/csf/csf.4.saved"}
-if (-e "/var/lib/csf/csf.4.ipsets") {unlink "/var/lib/csf/csf.4.ipsets"}
-if (-e "/var/lib/csf/csf.6.saved") {unlink "/var/lib/csf/csf.6.saved"}
-if (-e "/var/lib/csf/csf.dnscache") {unlink "/var/lib/csf/csf.dnscache"}
-if (-e "/var/lib/csf/csf.gignore") {unlink "/var/lib/csf/csf.gignore"}
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempconf") {unlink ("/var/lib/qhtlfirewall/qhtlfirewall.tempconf")}
+if (-e "/var/lib/qhtlfirewall/qhtlwaterfall.enable") {unlink "/var/lib/qhtlfirewall/qhtlwaterfall.enable"}
+if (-e "/var/lib/qhtlfirewall/qhtlwaterfall.start") {unlink "/var/lib/qhtlfirewall/qhtlwaterfall.start"}
+if (-e "/var/lib/qhtlfirewall/qhtlwaterfall.restart") {unlink "/var/lib/qhtlfirewall/qhtlwaterfall.restart"}
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.4.saved") {unlink "/var/lib/qhtlfirewall/qhtlfirewall.4.saved"}
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.4.ipsets") {unlink "/var/lib/qhtlfirewall/qhtlfirewall.4.ipsets"}
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.6.saved") {unlink "/var/lib/qhtlfirewall/qhtlfirewall.6.saved"}
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.dnscache") {unlink "/var/lib/qhtlfirewall/qhtlfirewall.dnscache"}
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.gignore") {unlink "/var/lib/qhtlfirewall/qhtlfirewall.gignore"}
 
 &getethdev;
 
-open (my $IN, "<", "/etc/csf/version.txt") or &cleanup(__LINE__,"Unable to open version.txt: $!");
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or &cleanup(__LINE__,"Unable to open version.txt: $!");
 flock ($IN, LOCK_SH);
 $version = <$IN>;
 close ($IN);
@@ -271,7 +271,7 @@ if ($config{INTERWORX}) {$generic = " (InterWorx)"}
 if ($config{CYBERPANEL}) {$generic = " (CyberPanel)"}
 if ($config{CWP}) {$generic = " (CentOS Web Panel)"}
 if ($config{VESTA}) {$generic = " (VestaCP)"}
-logfile("daemon started on $hostname - csf v$version$generic");
+logfile("daemon started on $hostname - qhtlwaterfall v$version$generic");
 if ($config{DEBUG} >= 1) {logfile("Clock Ticks: $clock_ticks")}
 if ($config{DEBUG} >= 1) {logfile("debug: **** DEBUG LEVEL $config{DEBUG} ENABLED ****")}
 
@@ -315,8 +315,8 @@ if ($config{SYSLOG} or $config{SYSLOG_CHECK}) {
 	}
 }
 
-if (-e "/etc/csf/csf.blocklists") {
-	my @entries = slurp("/etc/csf/csf.blocklists");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.blocklists") {
+	my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.blocklists");
 	foreach my $line (@entries) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -359,8 +359,8 @@ if ($cxsreputation and -e "/etc/cxs/cxs.blocklists") {
 	}
 }
 
-if (-e "/etc/csf/csf.ignore") {
-	my @ignore = slurp("/etc/csf/csf.ignore");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.ignore") {
+	my @ignore = slurp("/etc/qhtlfirewall/qhtlfirewall.ignore");
 	foreach my $line (@ignore) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -376,7 +376,7 @@ if (-e "/etc/csf/csf.ignore") {
 		if (checkip(\$first)) {
 			if ($iscidr) {push @cidrs,$first} else {$ignoreips{$ip} = 1}
 		}
-		elsif ($ip ne "127.0.0.1") {logfile("Invalid entry in csf.ignore: [$first]")}
+	elsif ($ip ne "127.0.0.1") {logfile("Invalid entry in qhtlfirewall.ignore: [$first]")}
 	}
 	foreach my $entry (@cidrs) {
 		if (checkip(\$entry) == 6) {
@@ -384,11 +384,11 @@ if (-e "/etc/csf/csf.ignore") {
 		} else {
 			eval {local $SIG{__DIE__} = undef; $cidr->add($entry)};
 		}
-		if ($@) {logfile("Invalid entry in csf.ignore: $entry")}
+	if ($@) {logfile("Invalid entry in qhtlfirewall.ignore: $entry")}
 	}
 }
-if (-e "/etc/csf/csf.rignore") {
-	my @entries = slurp("/etc/csf/csf.rignore");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.rignore") {
+	my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.rignore");
 	foreach my $line (@entries) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -405,8 +405,8 @@ if (-e "/etc/csf/csf.rignore") {
 		}
 	}
 }
-if ($config{IGNORE_ALLOW} and -e "/etc/csf/csf.allow") {
-	my @ignore = slurp("/etc/csf/csf.allow");
+if ($config{IGNORE_ALLOW} and -e "/etc/qhtlfirewall/qhtlfirewall.allow") {
+	my @ignore = slurp("/etc/qhtlfirewall/qhtlfirewall.allow");
 	foreach my $line (@ignore) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -429,7 +429,7 @@ if ($config{IGNORE_ALLOW} and -e "/etc/csf/csf.allow") {
 		} else {
 			eval {local $SIG{__DIE__} = undef; $cidr->add($entry)};
 		}
-		if ($@) {logfile("Invalid CIDR in csf.allow: $entry")}
+	if ($@) {logfile("Invalid CIDR in qhtlfirewall.allow: $entry")}
 	}
 }
 
@@ -497,7 +497,7 @@ if (-e "/usr/local/cpanel/version" and -e "/etc/cpanel/ea4/is_ea4" and -e "/etc/
 }
 
 if ($config{LOGSCANNER}) {
-	my @entries = slurp("/etc/csf/csf.logfiles");
+	my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.logfiles");
 	foreach my $line (@entries) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -522,7 +522,7 @@ if ($config{LOGSCANNER}) {
 			}
 		}
 	}
-	my @entries2 = slurp("/etc/csf/csf.logignore");
+	my @entries2 = slurp("/etc/qhtlfirewall/qhtlfirewall.logignore");
 	foreach my $line (@entries2) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -534,7 +534,7 @@ if ($config{LOGSCANNER}) {
 		if ($line eq "") {next}
 		if ($line =~ /^\s*\#|Include/) {next}
 		if (&testregex($line)) {push @logignore, $line}
-		else {logfile("*Error* Invalid regex [$line] in csf.logignore")}
+	else {logfile("*Error* Invalid regex [$line] in qhtlfirewall.logignore")}
 	}
 	logfile("Log Scanner...");
 }
@@ -554,13 +554,13 @@ if ($config{WATCH_MODE}) {
 	logfile("WATCH_MODE enabled...");
 }
 
-if (-e "/var/lib/csf/csf.restart") {
-	unlink "/var/lib/csf/csf.restart";
+if (-e "/var/lib/qhtlfirewall/qhtlfirewall.restart") {
+	unlink "/var/lib/qhtlfirewall/qhtlfirewall.restart";
 	&csfrestart;
 }
 
 if ($config{LF_CSF}) {
-	if (-e "/var/lib/csf/cpanel.new") {unlink "/var/lib/csf/cpanel.new"}
+	if (-e "/var/lib/qhtlfirewall/cpanel.new") {unlink "/var/lib/qhtlfirewall/cpanel.new"}
 	logfile("CSF Tracking...");
 	&csfcheck;
 	$csftimeout = 0;
@@ -580,7 +580,7 @@ if ($config{PT_LOAD}) {
 	$loadtimeout = 0;
 }
 
-if ($config{CF_ENABLE} and -e "/etc/csf/csf.cloudflare") {
+if ($config{CF_ENABLE} and -e "/etc/qhtlfirewall/qhtlfirewall.cloudflare") {
 	logfile("CloudFlare Firewall...");
 	$cfblocks{LF_MODSEC} = 1;
 	$cfblocks{LF_CXS} = 1;
@@ -590,11 +590,11 @@ if ($config{CF_ENABLE} and -e "/etc/csf/csf.cloudflare") {
 }
 
 if ($config{MESSENGER}) {
-	unless (-e "/var/log/lfd_messenger.log") {
-		open (my $OUT, ">", "/var/log/lfd_messenger.log");
+	unless (-e "/var/log/qhtlwaterfall_messenger.log") {
+		open (my $OUT, ">", "/var/log/qhtlwaterfall_messenger.log");
 		close ($OUT);
 	}
-	system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}","/var/log/lfd_messenger.log");
+	system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}","/var/log/qhtlwaterfall_messenger.log");
 
 	if (!$config{MESSENGERV2}) {
 		&messengerstop(2);
@@ -740,7 +740,7 @@ if (scalar(keys %blocklists) > 0) {
 
 if ($config{CC_LOOKUPS}) {
 	if ($config{CC_LOOKUPS} != 4 and $config{MM_LICENSE_KEY} eq "" and $config{CC_SRC} eq "1") {
-		logfile("*ERROR*: Country Code Lookups setting MM_LICENSE_KEY must be set in /etc/csf/csf.conf to continue updating the MaxMind databases");
+	logfile("*ERROR*: Country Code Lookups setting MM_LICENSE_KEY must be set in /etc/qhtlfirewall/qhtlfirewall.conf to continue updating the MaxMind databases");
 	}
 	logfile("Country Code Lookups...");
 	&countrycodelookups;
@@ -749,7 +749,7 @@ if ($config{CC_LOOKUPS}) {
 
 if ($config{CC_DENY} or $config{CC_ALLOW} or $config{CC_ALLOW_FILTER} or $config{CC_ALLOW_PORTS} or $config{CC_DENY_PORTS} or $config{CC_ALLOW_SMTPAUTH}) {
 	if ($config{MM_LICENSE_KEY} eq "" and $config{CC_SRC} eq "1") {
-		logfile("*ERROR*: Country Code Filters setting MM_LICENSE_KEY must be set in /etc/csf/csf.conf to continue updating the MaxMind databases");
+	logfile("*ERROR*: Country Code Filters setting MM_LICENSE_KEY must be set in /etc/qhtlfirewall/qhtlfirewall.conf to continue updating the MaxMind databases");
 	}
 	logfile("Country Code Filters...");
 	&countrycode;
@@ -776,9 +776,9 @@ if ($config{LF_INTEGRITY}) {
 }
 
 if ($config{LF_EXPLOIT}) {
-	if (-e "/var/lib/csf/csf.tempexploit") {unlink ("/var/lib/csf/csf.tempexploit")}
-	if (-e "/etc/csf/csf.suignore") {
-		my @entries = slurp("/etc/csf/csf.suignore");
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempexploit") {unlink ("/var/lib/qhtlfirewall/qhtlfirewall.tempexploit")}
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.suignore") {
+		my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.suignore");
 		foreach my $line (@entries) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -802,12 +802,12 @@ if ($config{LF_EXPLOIT}) {
 }
 if ($config{X_ARF}) {
 	if (-e $config{HOST}) {$abuseip = 1}
-	else {logfile("Binary location of HOST is incorrect in csf.conf")}
+	else {logfile("Binary location of HOST is incorrect in qhtlfirewall.conf")}
 }
 
 if ($config{LF_DIRWATCH}) {
-	if (-e "/etc/csf/csf.fignore") {
-		my @entries = slurp("/etc/csf/csf.fignore");
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.fignore") {
+		my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.fignore");
 		foreach my $line (@entries) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -820,7 +820,7 @@ if ($config{LF_DIRWATCH}) {
 			if ($line =~ /^\s*\#|Include/) {next}
 			if ($line =~ /\*|\\/) {
 				if (&testregex($line)) {push @matchfile, $line}
-				else {logfile("*Error* Invalid regex [$line] in csf.fignore")}
+				else {logfile("*Error* Invalid regex [$line] in qhtlfirewall.fignore")}
 			}
 			elsif ($line =~ /^user:(.*)/) {
 				$skipuser{$1} = 1;
@@ -830,16 +830,16 @@ if ($config{LF_DIRWATCH}) {
 			}
 		}
 	}
-	if (-e "/var/lib/csf/csf.tempfiles") {unlink ("/var/lib/csf/csf.tempfiles")}
-	if (-e "/var/lib/csf/csf.dwdisable") {unlink ("/var/lib/csf/csf.dwdisable")}
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempfiles") {unlink ("/var/lib/qhtlfirewall/qhtlfirewall.tempfiles")}
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.dwdisable") {unlink ("/var/lib/qhtlfirewall/qhtlfirewall.dwdisable")}
 	logfile("Directory Watching...");
 	$dirwatchtimeout = 0;
 }
 
 if ($config{LF_DIRWATCH_FILE}) {
-	if (-e "/etc/csf/csf.dirwatch") {
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.dirwatch") {
 		logfile("Directory File Watching...");
-		my @entries = slurp("/etc/csf/csf.dirwatch");
+		my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.dirwatch");
 		foreach my $line (@entries) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -863,8 +863,8 @@ if ($config{LF_DIRWATCH_FILE}) {
 
 if ($config{LF_SCRIPT_ALERT}) {
 	logfile("Email Script Tracking...");
-	if (-e "/etc/csf/csf.signore") {
-		my @entries = slurp("/etc/csf/csf.signore");
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.signore") {
+		my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.signore");
 		foreach my $line (@entries) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -899,8 +899,8 @@ if ($config{LF_MODSECIPDB_ALERT}) {
 if ($config{RT_RELAY_ALERT} or $config{RT_AUTHRELAY_ALERT} or $config{RT_POPRELAY_ALERT} or $config{RT_LOCALRELAY_ALERT} or $config{RT_LOCALHOSTRELAY_ALERT}) {
 	logfile("Email Relay Tracking...");
 	if ($config{RT_LOCALRELAY_ALERT}) {
-		if (-e "/etc/csf/csf.mignore") {
-			my @entries = slurp("/etc/csf/csf.mignore");
+		if (-e "/etc/qhtlfirewall/qhtlfirewall.mignore") {
+			my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.mignore");
 			foreach my $line (@entries) {
 				if ($line =~ /^Include\s*(.*)$/) {
 					my @incfile = slurp($1);
@@ -926,7 +926,7 @@ if ($config{LF_NETBLOCK}) {
 }
 
 if ($config{LF_PERMBLOCK} or $config{LF_NETBLOCK}) {
-	sysopen (my $TEMPIP, "/var/lib/csf/csf.tempip", O_RDWR | O_CREAT);
+	sysopen (my $TEMPIP, "/var/lib/qhtlfirewall/qhtlfirewall.tempip", O_RDWR | O_CREAT);
 	flock ($TEMPIP, LOCK_EX);
 	my @data = <$TEMPIP>;
 	chomp @data;
@@ -946,12 +946,12 @@ if ($config{LF_PERMBLOCK} or $config{LF_NETBLOCK}) {
 if ($config{ST_SYSTEM}) {
 	logfile("System Statistics...");
 	my $time = time;
-	sysopen (my $SYSSTATNEW,"/var/lib/csf/stats/system.new", O_RDWR | O_CREAT);
+	sysopen (my $SYSSTATNEW,"/var/lib/qhtlfirewall/stats/system.new", O_RDWR | O_CREAT);
 	flock ($SYSSTATNEW, LOCK_EX);
 	seek ($SYSSTATNEW, 0, 0);
 	truncate ($SYSSTATNEW, 0);
 
-	sysopen (my $SYSSTAT,"/var/lib/csf/stats/system", O_RDWR | O_CREAT);
+	sysopen (my $SYSSTAT,"/var/lib/qhtlfirewall/stats/system", O_RDWR | O_CREAT);
 	flock ($SYSSTAT, LOCK_EX);
 	while (my $line = <$SYSSTAT>) {
 		chomp $line;
@@ -961,7 +961,7 @@ if ($config{ST_SYSTEM}) {
 	}
 	close ($SYSSTAT);
 	close ($SYSSTATNEW);
-	rename "/var/lib/csf/stats/system.new", "/var/lib/csf/stats/system";
+	rename "/var/lib/qhtlfirewall/stats/system.new", "/var/lib/qhtlfirewall/stats/system";
 	&systemstats;
 }
 if ($config{PS_INTERVAL}) {
@@ -979,7 +979,7 @@ if ($config{UID_INTERVAL}) {
 		$config{UID_INTERVAL} = 60;
 	}
 	$uidtimeout = 0;
-	my @entries = slurp("/etc/csf/csf.uidignore");
+	my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.uidignore");
 	foreach my $line (@entries) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -1009,8 +1009,8 @@ if ($config{CT_LIMIT}) {
 }
 
 if ($config{PT_LIMIT}) {
-	if (-e "/etc/csf/csf.pignore") {
-		my @entries = slurp("/etc/csf/csf.pignore");
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.pignore") {
+		my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.pignore");
 		foreach my $line (@entries) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -1031,12 +1031,12 @@ if ($config{PT_LIMIT}) {
 			}
 			elsif ($item =~ /^(pcmd|pexe|puser)$/) {
 				if (&testregex($rule)) {$pskip{$item}{$rule} = 1}
-				else {logfile("*Error* Invalid regex [$line] in csf.pignore")}
+				else {logfile("*Error* Invalid regex [$line] in qhtlfirewall.pignore")}
 			}
 		}
 	}
-	if (-e "/var/lib/csf/csf.temppids") {unlink ("/var/lib/csf/csf.temppids")}
-	if (-e "/var/lib/csf/csf.tempusers") {unlink ("/var/lib/csf/csf.tempusers")}
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.temppids") {unlink ("/var/lib/qhtlfirewall/qhtlfirewall.temppids")}
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempusers") {unlink ("/var/lib/qhtlfirewall/qhtlfirewall.tempusers")}
 	logfile("Process Tracking...");
 	&processtracking;
 	$pttimeout = 0;
@@ -1164,7 +1164,7 @@ $scripttimeout = 0;
 my $duration = 0;
 my $maintimer = 0;
 while (1)  {
-	$0 = "lfd - processing";
+	$0 = "qhtlwaterfall - processing";
 	$maintimer = time;
 
 	seek ($PIDFILE, 0, 0);
@@ -1174,23 +1174,23 @@ while (1)  {
 		&cleanup(__LINE__,"*Error* pid mismatch or missing");
 	}
 
-	if (-e "/etc/csf/csf.error") {
-		&cleanup(__LINE__,"*Error* You have an unresolved error when starting csf. You need to restart csf successfully before restarting lfd (see /etc/csf/csf.error). *lfd stopped*");
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.error") {
+		&cleanup(__LINE__,"*Error* You have an unresolved error when starting qhtlfirewall. You need to restart qhtlfirewall successfully before restarting qhtlwaterfall (see /etc/qhtlfirewall/qhtlfirewall.error). *qhtlwaterfall stopped*");
 	}
-	my $perms = sprintf "%04o", (stat("/etc/csf"))[2] & oct("07777");
+	my $perms = sprintf "%04o", (stat("/etc/qhtlfirewall"))[2] & oct("07777");
 	if ($perms != "0600") {
-		chmod (0600,"/etc/csf");
-		logfile("*Permissions* on /etc/csf reset to 0600 [currently: $perms]");
+		chmod (0600,"/etc/qhtlfirewall");
+		logfile("*Permissions* on /etc/qhtlfirewall reset to 0600 [currently: $perms]");
 	}
-	$perms = sprintf "%04o", (stat("/var/lib/csf"))[2] & oct("07777");
+	$perms = sprintf "%04o", (stat("/var/lib/qhtlfirewall"))[2] & oct("07777");
 	if ($perms != "0600") {
-		chmod (0600,"/var/lib/csf");
-		logfile("*Permissions* on /var/lib/csf reset to 0600 [currently: $perms]");
+		chmod (0600,"/var/lib/qhtlfirewall");
+		logfile("*Permissions* on /var/lib/qhtlfirewall reset to 0600 [currently: $perms]");
 	}
-	$perms = sprintf "%04o", (stat("/usr/local/csf"))[2] & oct("07777");
+	$perms = sprintf "%04o", (stat("/usr/local/qhtlfirewall"))[2] & oct("07777");
 	if ($perms != "0600") {
-		chmod (0600,"/usr/local/csf");
-		logfile("*Permissions* on /usr/local/csf reset to 0600 [currently: $perms]");
+		chmod (0600,"/usr/local/qhtlfirewall");
+		logfile("*Permissions* on /usr/local/qhtlfirewall reset to 0600 [currently: $perms]");
 	}
 
 	$locktimeout+=$duration;
@@ -1211,20 +1211,20 @@ while (1)  {
 		}
 		if ($config{DEBUG} >= 2) {logfile("debug: Forks:[$forkcnt]")}
 		if ($forkcnt > 200) {
-			logfile("*Error* Excessive number of children ($forkcnt), restarting lfd...");
+			logfile("*Error* Excessive number of children ($forkcnt), restarting qhtlwaterfall...");
 			&lfdrestart;
 			exit;
 		}
 	}
 
-	if (-e "/var/lib/csf/lfd.restart") {
-		unlink "/var/lib/csf/lfd.restart";
+	if (-e "/var/lib/qhtlfirewall/qhtlwaterfall.restart") {
+		unlink "/var/lib/qhtlfirewall/qhtlwaterfall.restart";
 		&lfdrestart;
 		exit;
 	}
 
-	if (-e "/var/lib/csf/csf.restart") {
-		unlink "/var/lib/csf/csf.restart";
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.restart") {
+		unlink "/var/lib/qhtlfirewall/qhtlfirewall.restart";
 		&csfrestart;
 	}
 
@@ -1328,8 +1328,8 @@ while (1)  {
 		}
 	}
 
-	if (-e "/var/lib/csf/csf.tempconf") {
-		open (my $IN, "<", "/var/lib/csf/csf.tempconf");
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempconf") {
+		open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempconf");
 		flock ($IN, LOCK_SH);
 		while (my $line = <$IN>) {
 			chomp $line;
@@ -1340,21 +1340,21 @@ while (1)  {
 			if ($value =~ /\"(.*)\"/) {
 				$value = $1;
 			} else {
-				&cleanup(__LINE__,"*Error* Invalid configuration line in csf.tempconf");
+				&cleanup(__LINE__,"*Error* Invalid configuration line in qhtlfirewall.tempconf");
 			}
 			$config{$name} = $value;
 		}
 		close ($IN);
 	}
 
-	if ($config{GLOBAL_IGNORE} and -e "/var/lib/csf/csf.gignore") {
+	if ($config{GLOBAL_IGNORE} and -e "/var/lib/qhtlfirewall/qhtlfirewall.gignore") {
 		undef @gcidrs;
 		undef %gignoreips;
 		undef $gcidr;
 		undef $gcidr6;
 		$gcidr = Net::CIDR::Lite->new;
 		$gcidr6 = Net::CIDR::Lite->new;
-		open (my $IN, "<", "/var/lib/csf/csf.gignore");
+	open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.gignore");
 		flock ($IN, LOCK_SH);
 		while (my $line = <$IN>) {
 			chomp $line;
@@ -1377,11 +1377,11 @@ while (1)  {
 			elsif ($ip ne "127.0.0.1") {logfile("Invalid entry in GLOBAL_IGNORE: [$ip]")}
 		}
 		close ($IN);
-		unlink "/var/lib/csf/csf.gignore";
+	unlink "/var/lib/qhtlfirewall/qhtlfirewall.gignore";
 	}
 
 	$count = 0;
-	$0 = "lfd - scanning log files";
+	$0 = "qhtlwaterfall - scanning log files";
 	undef %relayip;
 	if ($config{RELAYHOSTS}) {
 		open (my $IN, "<", "/etc/relayhosts");
@@ -1393,7 +1393,7 @@ while (1)  {
 		close ($IN);
 	}
 	if ($config{DYNDNS} and $config{DYNDNS_IGNORE}) {
-		open (my $IN, "<", "/var/lib/csf/csf.tempdyn");
+	open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempdyn");
 		flock ($IN, LOCK_SH);
 		while (my $ip = <$IN>) {
 			chomp $ip;
@@ -1402,7 +1402,7 @@ while (1)  {
 		close ($IN);
 	}
 	if ($config{GLOBAL_DYNDNS} and $config{GLOBAL_DYNDNS_IGNORE}) {
-		open (my $IN, "<", "/var/lib/csf/csf.tempgdyn");
+	open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempgdyn");
 		flock ($IN, LOCK_SH);
 		while (my $ip = <$IN>) {
 			chomp $ip;
@@ -1447,7 +1447,7 @@ while (1)  {
 		if ($config{DEBUG} >= 3) {$timer = &timer("stop",$lgfile,$timer)}
 	}
 
-	$0 = "lfd - processing";
+	$0 = "qhtlwaterfall - processing";
 	if ($config{CT_LIMIT}) {
 		$cttimeout+=$duration;
 		if ($cttimeout >= $config{CT_INTERVAL}) {
@@ -1508,16 +1508,16 @@ while (1)  {
 		my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
 		my $lastrun;
 
-		if (-e "/var/lib/csf/csf.lastlogrun") {
-			my @data = slurp("/var/lib/csf/csf.lastlogrun");
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.lastlogrun") {
+			my @data = slurp("/var/lib/qhtlfirewall/qhtlfirewall.lastlogrun");
 			$loginterval = $lastrun = $data[0];
 		}
 		if ($loginterval eq "") {
 			if ($config{LOGSCANNER_INTERVAL} eq "hourly") {$loginterval = $hour}
 			if ($config{LOGSCANNER_INTERVAL} eq "daily") {$loginterval = $mday}
 		}
-		if (-e "/var/lib/csf/csf.logrun") {
-			unlink "/var/lib/csf/csf.logrun";
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.logrun") {
+			unlink "/var/lib/qhtlfirewall/qhtlfirewall.logrun";
 			&logscanner($hour);
 		}
 		elsif ($config{LOGSCANNER_INTERVAL} eq "hourly" and $loginterval ne $hour) {
@@ -1531,7 +1531,7 @@ while (1)  {
 
 		if ($lastrun ne $loginterval) {
 			$lastrun = $loginterval;
-			sysopen (my $LOGRUN, "/var/lib/csf/csf.lastlogrun", O_WRONLY | O_CREAT | O_TRUNC);
+			sysopen (my $LOGRUN, "/var/lib/qhtlfirewall/qhtlfirewall.lastlogrun", O_WRONLY | O_CREAT | O_TRUNC);
 			flock ($LOGRUN, LOCK_EX);
 			print $LOGRUN $loginterval;
 			close ($LOGRUN);
@@ -1572,7 +1572,7 @@ while (1)  {
 
 	if ($config{LF_DIRWATCH}) {
 		$dirwatchtimeout+=$duration;
-		if (not -e "/var/lib/csf/csf.dwdisable") {
+		if (not -e "/var/lib/qhtlfirewall/qhtlfirewall.dwdisable") {
 			if ($dirwatchtimeout >= $config{LF_DIRWATCH}) {
 				$dirwatchtimeout = 0;
 				&dirwatch;
@@ -1605,11 +1605,11 @@ while (1)  {
 	}
 
 	if ($config{MESSENGER}) {
-		unless (-e "/var/log/lfd_messenger.log") {
-			open (my $OUT, ">", "/var/log/lfd_messenger.log");
+		unless (-e "/var/log/qhtlwaterfall_messenger.log") {
+			open (my $OUT, ">", "/var/log/qhtlwaterfall_messenger.log");
 			close ($OUT);
 		}
-		system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}","/var/log/lfd_messenger.log");
+		system("chown","$config{MESSENGER_USER}:$config{MESSENGER_USER}","/var/log/qhtlwaterfall_messenger.log");
 		foreach my $key (keys %messengerips) {
 			if ($messengerips{$key} > 1 and $config{"MESSENGER_${key}_IN"} ne "") {
 				unless (kill(0,$messengerips{$key})) {
@@ -1664,8 +1664,8 @@ while (1)  {
 	}
 
 	if ($config{INTERWORX}) {
-		if (slurp("/etc/csf/apf_stub.pl") ne slurp("/etc/apf/apf")) {
-			&syscommand(__LINE__,"cp -af /etc/csf/apf_stub.pl /etc/apf/apf");
+		if (slurp("/etc/qhtlfirewall/apf_stub.pl") ne slurp("/etc/apf/apf")) {
+			&syscommand(__LINE__,"cp -af /etc/qhtlfirewall/apf_stub.pl /etc/apf/apf");
 			&syscommand(__LINE__,"chmod 750 /etc/apf/apf");
 			logfile ("InterWorx: Reapplied apf stub");
 		}
@@ -1673,7 +1673,7 @@ while (1)  {
 
 	&ipunblock;
 
-	$0 = "lfd - sleeping";
+	$0 = "qhtlwaterfall - sleeping";
 	sleep ($config{LF_PARSE});
 
 	$duration = time - $maintimer;
@@ -2115,16 +2115,16 @@ sub dochecks {
 			}
 		}
 		if ($hit) {
-			unless (-e "/var/lib/csf/csf.logmax") {
-				sysopen (my $LOGTEMP,"/var/lib/csf/csf.logtemp", O_RDWR | O_CREAT);
+			unless (-e "/var/lib/qhtlfirewall/qhtlfirewall.logmax") {
+				sysopen (my $LOGTEMP,"/var/lib/qhtlfirewall/qhtlfirewall.logtemp", O_RDWR | O_CREAT);
 				flock ($LOGTEMP, LOCK_EX);
 				my @data = <$LOGTEMP>;
 				close ($LOGTEMP);
 				if (@data > $config{LOGSCANNER_LINES}) {
-					open (my $OUT,">","/var/lib/csf/csf.logmax");
+					open (my $OUT,">","/var/lib/qhtlfirewall/qhtlfirewall.logmax");
 					close ($OUT);
 				} else {
-					sysopen (my $LOGTEMP,"/var/lib/csf/csf.logtemp", O_WRONLY | O_APPEND | O_CREAT);
+					sysopen (my $LOGTEMP,"/var/lib/qhtlfirewall/qhtlfirewall.logtemp", O_WRONLY | O_APPEND | O_CREAT);
 					flock ($LOGTEMP, LOCK_EX);
 					print $LOGTEMP "$lgfile|$line\n";
 					close ($LOGTEMP);
@@ -2153,7 +2153,7 @@ sub dochecks {
 			}
 			if ($ips{$ip} or $ipscidr->find($ip) or $ipscidr6->find($ip)) {$check = "LOCALHOSTRELAY"}
 			if ($config{ST_SYSTEM}) {
-				sysopen (my $EMAIL, "/var/lib/csf/stats/email", O_RDWR | O_CREAT);
+				sysopen (my $EMAIL, "/var/lib/qhtlfirewall/stats/email", O_RDWR | O_CREAT);
 				flock ($EMAIL, LOCK_EX);
 				my $stats = <$EMAIL>;
 				chomp $stats;
@@ -2239,7 +2239,7 @@ sub getlogfile {
 		my $text = "*Error* Log line flooding/looping in $logfile. Reopening log file";
 		logfile("$text");
 		if ($config{LOGFLOOD_ALERT}) {
-			my @alert = slurp("/usr/local/csf/tpl/logfloodalert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/logfloodalert.txt");
 			my @message;
 			foreach my $line (@alert) {
 				$line =~ s/\[text\]/$text/ig;
@@ -2320,25 +2320,25 @@ sub lockhang {
 			local $SIG{__DIE__} = undef;
 			local $SIG{'ALRM'} = sub {die};
 			alarm(10);
-			sysopen (my $COMMANDLOCK, "/var/lib/csf/lock/command.lock", O_RDWR | O_CREAT) or logfile("open: $!");
+			sysopen (my $COMMANDLOCK, "/var/lib/qhtlfirewall/lock/command.lock", O_RDWR | O_CREAT) or logfile("open: $!");
 			flock ($COMMANDLOCK, LOCK_EX) or logfile("lock: $!");
 			close ($COMMANDLOCK);
 			alarm(0);
 		};
 		alarm(0);
 		if ($@) {
-			sysopen (my $COMMANDLOCK, "/var/lib/csf/lock/command.lock", O_RDWR | O_CREAT);
+			sysopen (my $COMMANDLOCK, "/var/lib/qhtlfirewall/lock/command.lock", O_RDWR | O_CREAT);
 			flock ($COMMANDLOCK, LOCK_SH);
 			my $pid = <$COMMANDLOCK>;
 			chomp $pid;
 			close ($COMMANDLOCK);
 			if ($pid == $$) {
-				logfile("*Hanging Lock* by main lfd process found for /var/lib/csf/lock/command.lock - restarting lfd");
-				open (my $LFDOUT, ">", "/var/lib/csf/lfd.restart");
+				logfile("*Hanging Lock* by main lfd process found for /var/lib/qhtlfirewall/lock/command.lock - restarting qhtlwaterfall");
+				open (my $LFDOUT, ">", "/var/lib/qhtlfirewall/qhtlwaterfall.restart");
 				close ($LFDOUT);
 			} else {
 				kill (9, $pid);
-				logfile("*Hanging Lock* by $pid found for /var/lib/csf/lock/command.lock - terminated");
+				logfile("*Hanging Lock* by $pid found for /var/lib/qhtlfirewall/lock/command.lock - terminated");
 			}
 		}
 
@@ -2354,7 +2354,7 @@ sub lockhang {
 sub syslog_init {
 	local $SIG{CHLD} = 'DEFAULT';
 	my %syslogusers;
-	my @entries = slurp("/etc/csf/csf.syslogusers");
+	my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.syslogusers");
 	foreach my $line (@entries) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -2535,7 +2535,7 @@ sub block {
 			if ($config{LF_EMAIL_ALERT} and ($perm or (!$perm and $config{LF_TEMP_EMAIL_ALERT}))) {
 				$0 = "lfd - (child) sending alert email for $ip";
 
-				my @alert = slurp("/usr/local/csf/tpl/alert.txt");
+				my @alert = slurp("/usr/local/qhtlfirewall/tpl/alert.txt");
 				my $block = "Temporary Block for $temp seconds [$active]";
 				if ($perm) {$block = "Permanent Block [$active]"}
 
@@ -2560,7 +2560,7 @@ sub block {
 			if ($config{X_ARF}) {
 				$0 = "lfd - (child) sending X-ARF email for $ip";
 
-				my @alert = slurp("/usr/local/csf/tpl/x-arf.txt");
+				my @alert = slurp("/usr/local/qhtlfirewall/tpl/x-arf.txt");
 				my @message;
 				my $rfc3339 = strftime('%Y-%m-%dT%H:%M:%S%z',localtime);
 				my $boundary = time;
@@ -2665,7 +2665,7 @@ sub blockaccount {
 		}
 
 		if ($config{LF_EMAIL_ALERT}) {
-			my @alert = slurp("/usr/local/csf/tpl/alert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/alert.txt");
 			my $block = "Temporary Block for $temp seconds [LF_DISTATTACK]";
 			if ($perm) {$block = "Permanent Block [LF_DISTATTACK]"}
 
@@ -2720,7 +2720,7 @@ sub blockdistftp {
 		}
 
 		if ($config{LF_DISTFTP_ALERT}) {
-			my @alert = slurp("/usr/local/csf/tpl/alert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/alert.txt");
 			my $block = "Temporary Block for $temp seconds [LF_DISTFTP]";
 			if ($perm) {$block = "Permanent Block [LF_DISTFTP]"}
 
@@ -2780,7 +2780,7 @@ sub blockdistsmtp {
 		}
 
 		if ($config{LF_DISTSMTP_ALERT}) {
-			my @alert = slurp("/usr/local/csf/tpl/alert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/alert.txt");
 			my $block = "Temporary Block for $temp seconds [LF_DISTSMTP]";
 			if ($perm) {$block = "Permanent Block [LF_DISTSMTP]"}
 
@@ -2832,7 +2832,7 @@ sub disable404 {
 			if ($config{LT_EMAIL_ALERT}) {
 				$0 = "lfd - (child) sending alert email for $ip";
 
-				my @alert = slurp("/usr/local/csf/tpl/alert.txt");
+				my @alert = slurp("/usr/local/qhtlfirewall/tpl/alert.txt");
 				my $block = "Temporary Block for $config{LF_APACHE_404_PERM} seconds [LF_APACHE_404]";
 				if ($perm) {$block = "Permanent Block [LF_APACHE_404]"}
 				my @message;
@@ -2879,7 +2879,7 @@ sub disable403 {
 			if ($config{LT_EMAIL_ALERT}) {
 				$0 = "lfd - (child) sending alert email for $ip";
 
-				my @alert = slurp("/usr/local/csf/tpl/alert.txt");
+				my @alert = slurp("/usr/local/qhtlfirewall/tpl/alert.txt");
 				my $block = "Temporary Block for $config{LF_APACHE_403_PERM} seconds [LF_APACHE_403]";
 				if ($perm) {$block = "Permanent Block [LF_APACHE_403]"}
 				my @message;
@@ -2926,7 +2926,7 @@ sub disable401 {
 			if ($config{LT_EMAIL_ALERT}) {
 				$0 = "lfd - (child) sending alert email for $ip";
 
-				my @alert = slurp("/usr/local/csf/tpl/alert.txt");
+				my @alert = slurp("/usr/local/qhtlfirewall/tpl/alert.txt");
 				my $block = "Temporary Block for $config{LF_APACHE_401_PERM} seconds [LF_APACHE_401]";
 				if ($perm) {$block = "Permanent Block [LF_APACHE_401]"}
 				my @message;
@@ -2980,7 +2980,7 @@ sub logindisable {
 			if ($config{LT_EMAIL_ALERT}) {
 				$0 = "lfd - (child) sending alert email for $account";
 
-				my @alert = slurp("/usr/local/csf/tpl/tracking.txt");
+				my @alert = slurp("/usr/local/qhtlfirewall/tpl/tracking.txt");
 				my @message;
 				foreach my $line (@alert) {
 					$line =~ s/\[ip\]/$tip/ig;
@@ -3028,7 +3028,7 @@ sub portscans {
 			if ($config{PS_EMAIL_ALERT}) {
 				$0 = "lfd - (child) sending alert email for $ip";
 
-				my @alert = slurp("/usr/local/csf/tpl/portscan.txt");
+				my @alert = slurp("/usr/local/qhtlfirewall/tpl/portscan.txt");
 				my $block = "Temporary Block for $config{PS_BLOCK_TIME} seconds [PS_LIMIT]";
 				if ($config{PS_PERMANENT}) {$block = "Permanent Block [PS_LIMIT]"}
 
@@ -3050,7 +3050,7 @@ sub portscans {
 				if ($config{X_ARF}) {
 					$0 = "lfd - (child) sending X-ARF email for $ip";
 
-					my @alert = slurp("/usr/local/csf/tpl/x-arf.txt");
+					my @alert = slurp("/usr/local/qhtlfirewall/tpl/x-arf.txt");
 					my @message;
 					my $rfc3339 = strftime('%Y-%m-%dT%H:%M:%S%z',localtime);
 					my $boundary = time;
@@ -3127,7 +3127,7 @@ sub uidscans {
 		if ($user eq "") {$user = $uid}
 		logfile("*UID Tracking* $count blocks for UID $uid ($user)");
 
-		my @alert = slurp("/usr/local/csf/tpl/uidscan.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/uidscan.txt");
 		my @message;
 		foreach my $line (@alert) {
 			$line =~ s/\[uid\]/$uid ($user)/ig;
@@ -3153,7 +3153,7 @@ sub csfrestart {
 	$0 = "lfd - (re)starting csf...";
 
 	logfile("csf (re)start requested - running *csf startup*...");
-	&syscommand(__LINE__,"/usr/sbin/csf","-sf");
+	&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-sf");
 	logfile("csf (re)start completed");
 
 	if ($config{DEBUG} >= 3) {$timer = &timer("stop","csfrestart",$timer)}
@@ -3197,13 +3197,13 @@ sub csfcheck {
 		if ($ipdata[0] !~ /^Chain LOCALINPUT/) {
 			$0 = "lfd - starting csf...";
 			logfile("iptables appears to have been flushed - running *csf startup*...");
-			&syscommand(__LINE__,"/usr/sbin/csf","-sf");
+			&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-sf");
 			logfile("csf startup completed");
 			$0 = "lfd - processing";
 		}
 
 		if ($config{INTERWORX}) {
-			&syscommand(__LINE__,"cp -af /etc/csf/apf_stub.pl /etc/apf/apf");
+			&syscommand(__LINE__,"cp -af /etc/qhtlfirewall/apf_stub.pl /etc/apf/apf");
 			&syscommand(__LINE__,"chmod 750 /etc/apf/apf");
 		}
 
@@ -3223,8 +3223,8 @@ sub csfcheck {
 				}
 			}
 
-			if (-e "/var/lib/csf/cpanel.new") {
-				my $mtime = (stat("/var/lib/csf/cpanel.new"))[9];
+			if (-e "/var/lib/qhtlfirewall/cpanel.new") {
+				my $mtime = (stat("/var/lib/qhtlfirewall/cpanel.new"))[9];
 				if (time - $mtime < 3600) {$skip = 1}
 			}
 
@@ -3247,14 +3247,14 @@ sub csfcheck {
 						$0 = "lfd - (child) cPanel upgraded...";
 
 						my $lockstr = "LF_CSF";
-						sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+						sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 						flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 						print $THISLOCK time;
 
 						logfile("cPanel upgrade detected, restarting ConfigServer services...");
 
-						if (-e "/var/lib/csf/cpanel.new") {unlink "/var/lib/csf/cpanel.new"}
-						open (my $CPANELNEW, ">", "/var/lib/csf/cpanel.new");
+						if (-e "/var/lib/qhtlfirewall/cpanel.new") {unlink "/var/lib/qhtlfirewall/cpanel.new"}
+						open (my $CPANELNEW, ">", "/var/lib/qhtlfirewall/cpanel.new");
 						flock ($CPANELNEW, LOCK_EX);
 						print $CPANELNEW time;
 						close ($CPANELNEW);
@@ -3300,7 +3300,7 @@ sub csfcheck {
 						}
 
 						logfile("cPanel upgrade detected, restarting lfd");
-						open (my $LFDOUT, ">", "/var/lib/csf/lfd.restart");
+						open (my $LFDOUT, ">", "/var/lib/qhtlfirewall/qhtlwaterfall.restart");
 						close ($LFDOUT);
 				
 						close ($THISLOCK );
@@ -3320,8 +3320,8 @@ sub csfcheck {
 ###############################################################################
 # start loadcheck
 sub loadcheck {
-	if (-e "/var/lib/csf/csf.load") {
-		open (my $IN, "<", "/var/lib/csf/csf.load");
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.load") {
+		open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.load");
 		flock ($IN, LOCK_SH);
 		my $start = <$IN>;
 		close ($IN);
@@ -3329,7 +3329,7 @@ sub loadcheck {
 		if (time - $start < $config{PT_LOAD_SKIP}) {
 			return;
 		} else {
-			unlink ("/var/lib/csf/csf.load");
+			unlink ("/var/lib/qhtlfirewall/qhtlfirewall.load");
 		}
 	}
 	$SIG{CHLD} = 'IGNORE';
@@ -3343,7 +3343,7 @@ sub loadcheck {
 		$0 = "lfd - (child) checking load...";
 
 		my $lockstr = "PT_LOAD";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+	sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -3361,7 +3361,7 @@ sub loadcheck {
 
 		if ($reportload >= $config{PT_LOAD_LEVEL}) {
 			logfile("*LOAD* $config{PT_LOAD_AVG} minute load average is $reportload, threshold is $config{PT_LOAD_LEVEL} - email sent");
-			sysopen (my $LOAD, "/var/lib/csf/csf.load", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot write to file: $!");
+			sysopen (my $LOAD, "/var/lib/qhtlfirewall/qhtlfirewall.load", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot write to file: $!");
 			flock ($LOAD, LOCK_EX);
 			seek ($LOAD, 0, 0);
 			truncate ($LOAD, 0);
@@ -3416,7 +3416,7 @@ sub loadcheck {
 			my ($status, $apache) = $urlget->urlget($url);
 			if ($status) {$apache = "Unable to retrieve Apache Server Status [$url] - $apache"}
 
-			my @alert = slurp("/usr/local/csf/tpl/loadalert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/loadalert.txt");
 			my $boundary = "csf".time;
 			my @message;
 			foreach my $line (@alert) {
@@ -3453,7 +3453,7 @@ sub denycheck {
 	my $ipstring = quotemeta($ip);
 	my $skip = 0;
 
-	my @deny = slurp("/etc/csf/csf.deny");
+	my @deny = slurp("/etc/qhtlfirewall/qhtlfirewall.deny");
 	foreach my $line (@deny) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -3464,7 +3464,7 @@ sub denycheck {
 	if ($config{LF_REPEATBLOCK} and $denymatches < $config{LF_REPEATBLOCK}) {$denymatches = 0}
 	unless ($denymatches == 0) {$skip = 1}
 
-	open (my $IN, "<", "/var/lib/csf/csf.tempban");
+	open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempban");
 	flock ($IN, LOCK_SH);
 	@deny = <$IN>;
 	close ($IN);
@@ -3479,8 +3479,8 @@ sub denycheck {
 ###############################################################################
 # start queuecheck
 sub queuecheck {
-	if (-e "/var/lib/csf/csf.queue") {
-		open (my $IN, "<", "/var/lib/csf/csf.queue");
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.queue") {
+		open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.queue");
 		flock ($IN, LOCK_SH);
 		my $start = <$IN>;
 		close ($IN);
@@ -3488,7 +3488,7 @@ sub queuecheck {
 		if (time - $start < $config{LF_FLUSH}) {
 			return;
 		} else {
-			unlink ("/var/lib/csf/csf.queue");
+			unlink ("/var/lib/qhtlfirewall/qhtlfirewall.queue");
 		}
 	}
 	$SIG{CHLD} = 'IGNORE';
@@ -3502,7 +3502,7 @@ sub queuecheck {
 		$0 = "lfd - (child) checking mail queue...";
 
 		my $lockstr = "LF_QUEUE_INTERVAL";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+	sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -3540,14 +3540,14 @@ sub queuecheck {
 			if ($timeout) {$report = $timeout}
 			logfile("*Email Queue* $report");
 
-			sysopen (my $QUEUE, "/var/lib/csf/csf.queue", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot write to file: $!");
+			sysopen (my $QUEUE, "/var/lib/qhtlfirewall/qhtlfirewall.queue", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot write to file: $!");
 			flock ($QUEUE, LOCK_EX);
 			seek ($QUEUE, 0, 0);
 			truncate ($QUEUE, 0);
 			print $QUEUE time;
 			close ($QUEUE);
 
-			my @alert = slurp("/usr/local/csf/tpl/queuealert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/queuealert.txt");
 			my @message;
 			foreach my $line (@alert) {
 				$line =~ s/\[text\]/$report/ig;
@@ -3567,8 +3567,8 @@ sub queuecheck {
 ###############################################################################
 # start modsecipdbcheck
 sub modsecipdbcheck {
-	if (-e "/var/lib/csf/csf.modsecipdbcheck") {
-		open (my $IN, "<", "/var/lib/csf/csf.modsecipdbcheck");
+	if (-e "/var/lib/qhtlfirewall/qhtlfirewall.modsecipdbcheck") {
+		open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.modsecipdbcheck");
 		flock ($IN, LOCK_SH);
 		my $start = <$IN>;
 		close ($IN);
@@ -3576,7 +3576,7 @@ sub modsecipdbcheck {
 		if (time - $start < $config{LF_FLUSH}) {
 			return;
 		} else {
-			unlink ("/var/lib/csf/csf.modsecipdbcheck");
+			unlink ("/var/lib/qhtlfirewall/qhtlfirewall.modsecipdbcheck");
 		}
 	}
 	$SIG{CHLD} = 'IGNORE';
@@ -3590,7 +3590,7 @@ sub modsecipdbcheck {
 		$0 = "lfd - (child) checking modsec ip db...";
 
 		my $lockstr = "LF_MODSECIPDB_ALERT";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+	sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -3600,14 +3600,14 @@ sub modsecipdbcheck {
 			$size = sprintf("%.2f", $size);
 			my $report = "ModSecurity persistent IP database ($config{LF_MODSECIPDB_FILE}) size is ${size}GB";
 
-			sysopen (my $QUEUE, "/var/lib/csf/csf.modsecipdbcheck", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot write to file: $!");
+			sysopen (my $QUEUE, "/var/lib/qhtlfirewall/qhtlfirewall.modsecipdbcheck", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot write to file: $!");
 			flock ($QUEUE, LOCK_EX);
 			seek ($QUEUE, 0, 0);
 			truncate ($QUEUE, 0);
 			print $QUEUE time;
 			close ($QUEUE);
 
-			my @alert = slurp("/usr/local/csf/tpl/modsecipdbalert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/modsecipdbalert.txt");
 			my @message;
 			foreach my $line (@alert) {
 				$line =~ s/\[text\]/$report/ig;
@@ -3639,7 +3639,7 @@ sub connectiontracking {
 		$0 = "lfd - (child) connection tracking...";
 
 		my $lockstr = "CT_INTERVAL";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+	sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -3742,7 +3742,7 @@ sub connectiontracking {
 					if ($config{CT_EMAIL_ALERT}) {
 						$0 = "lfd - (child) (CT) sending alert email for $ip";
 
-						my @alert = slurp("/usr/local/csf/tpl/connectiontracking.txt");
+						my @alert = slurp("/usr/local/qhtlfirewall/tpl/connectiontracking.txt");
 						my $block = "Temporary Block for $config{CT_BLOCK_TIME} seconds [CT_LIMIT]";
 						if ($config{CT_PERMANENT}) {$block = "Permanent Block [CT_LIMIT]"}
 
@@ -3763,7 +3763,7 @@ sub connectiontracking {
 						if ($config{X_ARF}) {
 							$0 = "lfd - (child) sending X-ARF email for $ip";
 
-							my @alert = slurp("/usr/local/csf/tpl/x-arf.txt");
+							my @alert = slurp("/usr/local/qhtlfirewall/tpl/x-arf.txt");
 							my @message;
 							my $rfc3339 = strftime('%Y-%m-%dT%H:%M:%S%z',localtime);
 							my $boundary = time;
@@ -3826,7 +3826,7 @@ sub connectiontracking {
 					if ($config{CT_EMAIL_ALERT}) {
 						$0 = "lfd - (child) (CT) sending alert email for $subnet";
 
-						my @alert = slurp("/usr/local/csf/tpl/connectiontracking.txt");
+						my @alert = slurp("/usr/local/qhtlfirewall/tpl/connectiontracking.txt");
 						my $block = "Temporary Block for $config{CT_BLOCK_TIME} seconds [CT_LIMIT]";
 						if ($config{CT_PERMANENT}) {$block = "Permanent Block [CT_LIMIT]"}
 
@@ -3852,7 +3852,7 @@ sub connectiontracking {
 		
 		if ($tfail) {
 			$config{CT_INTERVAL} = $config{CT_INTERVAL} * 1.5;
-			sysopen (my $TEMPCONF, "/var/lib/csf/csf.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+			sysopen (my $TEMPCONF, "/var/lib/qhtlfirewall/qhtlfirewall.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 			flock ($TEMPCONF, LOCK_EX);
 			print $TEMPCONF "CT_INTERVAL = \"$config{CT_INTERVAL}\"\n";
 			close ($TEMPCONF);
@@ -3881,7 +3881,7 @@ sub accounttracking {
 		$0 = "lfd - (child) account tracking...";
 
 		my $lockstr = "AT_INTERVAL";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+	sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -3919,7 +3919,7 @@ sub accounttracking {
 		if ($report ne "") {
 			logfile("*Account Modification* Email sent");
 
-			my @alert = slurp("/usr/local/csf/tpl/accounttracking.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/accounttracking.txt");
 			my @message;
 			foreach my $line (@alert) {
 				$line =~ s/\[report\]/$report/ig;
@@ -3950,13 +3950,13 @@ sub syslogcheck {
 		$0 = "lfd - (child) SYSLOG check...";
 
 		my $lockstr = "SYSLOG_CHECK";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+	sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
 		logfile("*SYSLOG CHECK* Failed to detect check line [$syslogcheckcode] sent to SYSLOG");
 
-		my @alert = slurp("/usr/local/csf/tpl/syslogalert.txt");
+	my @alert = slurp("/usr/local/qhtlfirewall/tpl/syslogalert.txt");
 		my @message;
 		foreach my $line (@alert) {
 			$line =~ s/\[code\]/$syslogcheckcode/ig;
@@ -3987,7 +3987,7 @@ sub processtracking {
 		$0 = "lfd - (child) process tracking...";
 
 		my $lockstr = "PT_INTERVAL";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+	sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -4051,8 +4051,8 @@ sub processtracking {
 		my ($upsecs,undef) = split (/\s/,$up[0]);
 
 		my %pids;
-		if (! -z "/var/lib/csf/csf.temppids") {
-			open (my $IN, "<", "/var/lib/csf/csf.temppids");
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.temppids") {
+			open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.temppids");
 			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			close ($IN);
@@ -4066,8 +4066,8 @@ sub processtracking {
 			}
 		}
 		my %ignoreusers;
-		if (! -z "/var/lib/csf/csf.tempusers") {
-			open (my $IN, "<", "/var/lib/csf/csf.tempusers");
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempusers") {
+			open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempusers");
 			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			close ($IN);
@@ -4220,7 +4220,7 @@ sub processtracking {
 							delete $sessions{$sid};
 							kill 9, "-$sid";
 
-							my @alert = slurp("/usr/local/csf/tpl/forkbombalert.txt");
+							my @alert = slurp("/usr/local/qhtlfirewall/tpl/forkbombalert.txt");
 							my @message;
 							foreach my $line (@alert) {
 								$line =~ s/\[level\]/$config{PT_FORKBOMB}/ig;
@@ -4295,7 +4295,7 @@ sub processtracking {
 
 						logfile("*Suspicious Process* PID:$pid PPID:$ppid User:$user Uptime:$uptime secs EXE:$exe CMD:$cmdline");
 
-						sysopen (my $TEMPPIDS, "/var/lib/csf/csf.temppids", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+						sysopen (my $TEMPPIDS, "/var/lib/qhtlfirewall/qhtlfirewall.temppids", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 						flock ($TEMPPIDS, LOCK_EX);
 						print $TEMPPIDS time.":$pid\n";
 						if ($deleted and $ppid and ($ppid != $pid)) {
@@ -4318,7 +4318,7 @@ sub processtracking {
 						my $maps;
 						foreach my $line (@maps) {$maps .= $line."\n"}
 
-						my @alert = slurp("/usr/local/csf/tpl/processtracking.txt");
+						my @alert = slurp("/usr/local/qhtlfirewall/tpl/processtracking.txt");
 						my @message;
 						foreach my $line (@alert) {
 							$line =~ s/\[pid\]/$pid (Parent PID:$ppid)/ig;
@@ -4361,7 +4361,7 @@ sub processtracking {
 						}
 						$kill = "Killed";
 					} else {
-						sysopen (my $TEMPUSERS, "/var/lib/csf/csf.tempusers", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+						sysopen (my $TEMPUSERS, "/var/lib/qhtlfirewall/qhtlfirewall.tempusers", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 						flock ($TEMPUSERS, LOCK_EX);
 						print $TEMPUSERS time.":$user\n";
 						close ($TEMPUSERS);
@@ -4370,7 +4370,7 @@ sub processtracking {
 					logfile("*Excessive Processes* User:$user Kill:$config{PT_USERKILL} Process Count:$totproc{$user}{count}");
 
 					if (!$config{PT_USERKILL} or ($config{PT_USERKILL} and $config{PT_USERKILL_ALERT})) {
-						my @alert = slurp("/usr/local/csf/tpl/usertracking.txt");
+						my @alert = slurp("/usr/local/qhtlfirewall/tpl/usertracking.txt");
 						my @message;
 						foreach my $line (@alert) {
 							$line =~ s/\[user\]/$user/ig;
@@ -4426,14 +4426,14 @@ sub processtracking {
 						kill (9, $pid);
 						$kill = "Yes";
 					} else {
-						sysopen (my $TEMPPIDS, "/var/lib/csf/csf.temppids", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+						sysopen (my $TEMPPIDS, "/var/lib/qhtlfirewall/qhtlfirewall.temppids", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 						flock ($TEMPPIDS, LOCK_EX);
 						print $TEMPPIDS time.":$pid\n";
 						close ($TEMPPIDS);
 					}
 
 					if (!$config{PT_USERKILL} or ($config{PT_USERKILL} and $config{PT_USERKILL_ALERT})) {
-						my @alert = slurp("/usr/local/csf/tpl/resalert.txt");
+						my @alert = slurp("/usr/local/qhtlfirewall/tpl/resalert.txt");
 						my @message;
 						foreach my $line (@alert) {
 							$line =~ s/\[user\]/$procres{$pid}{user}/ig;
@@ -4490,7 +4490,7 @@ sub sshalert {
 
 		$0 = "lfd - (child) sending SSH login alert email for $ip";
 
-		my @alert = slurp("/usr/local/csf/tpl/sshalert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/sshalert.txt");
 		my $tip = iplookup($ip);
 		my @message;
 		foreach my $line (@alert) {
@@ -4529,7 +4529,7 @@ sub sualert {
 
 		$0 = "lfd - (child) sending SU login alert email from $sufrom to $suto";
 
-		my @alert = slurp("/usr/local/csf/tpl/sualert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/sualert.txt");
 		my @message;
 		foreach my $line (@alert) {
 			$line =~ s/\[to\]/$suto/ig;
@@ -4567,7 +4567,7 @@ sub sudoalert {
 
 		$0 = "lfd - (child) sending SU login alert email from $sufrom to $suto";
 
-		my @alert = slurp("/usr/local/csf/tpl/sudoalert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/sudoalert.txt");
 		my @message;
 		foreach my $line (@alert) {
 			$line =~ s/\[to\]/$suto/ig;
@@ -4604,7 +4604,7 @@ sub webminalert {
 
 		$0 = "lfd - (child) sending Webmin login alert email for $ip";
 
-		my @alert = slurp("/usr/local/csf/tpl/webminalert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/webminalert.txt");
 		my $tip = iplookup($ip);
 		my @message;
 		foreach my $line (@alert) {
@@ -4639,7 +4639,7 @@ sub consolealert {
 
 		$0 = "lfd - (child) sending console login alert email";
 
-		my @alert = slurp("/usr/local/csf/tpl/consolealert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/consolealert.txt");
 		my @message;
 		foreach my $line (@alert) {
 			$line =~ s/\[line\]/$logline/ig;
@@ -4673,7 +4673,7 @@ sub cpanelalert {
 
 		$0 = "lfd - (child) sending WHM/cPanel access alert email for $ip";
 
-		my @alert = slurp("/usr/local/csf/tpl/cpanelalert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/cpanelalert.txt");
 		my $tip = iplookup($ip);
 		my @message;
 		foreach my $line (@alert) {
@@ -4752,7 +4752,7 @@ sub scriptalert {
 
 		$0 = "lfd - (child) sending script alert";
 
-		my @alert = slurp("/usr/local/csf/tpl/scriptalert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/scriptalert.txt");
 		my @message;
 		foreach my $line (@alert) {
 			$line =~ s/\[path\]/\'$path\'/ig;
@@ -4819,7 +4819,7 @@ sub relayalert {
 			}
 		}
 
-		my @alert = slurp("/usr/local/csf/tpl/relayalert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/relayalert.txt");
 		my $block = "No";
 		if ($config{"RT\_$check\_BLOCK"} == 1) {$block = "Permanent Block [RT\_$check\_LIMIT]"}
 		if ($config{"RT\_$check\_BLOCK"} > 1) {$block = "Temporary Block for ".$config{"RT\_$check\_BLOCK"}." seconds [RT\_$check\_LIMIT]"}
@@ -4870,7 +4870,7 @@ sub portknocking {
 
 		$0 = "lfd - (child) sending Port Knocking alert email for $ip";
 
-		my @alert = slurp("/usr/local/csf/tpl/portknocking.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/portknocking.txt");
 		my $tip = iplookup($ip);
 		my @message;
 		foreach my $line (@alert) {
@@ -4901,7 +4901,7 @@ sub blocklist {
 		$0 = "lfd - retrieving blocklists";
 
 		my $lockstr = "BLOCKLISTS";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -4918,14 +4918,14 @@ sub blocklist {
 				$blocklists{$name}{interval} = 600;
 				$verbose = 0;
 			}
-			if (-e "/var/lib/csf/csf.block.$name") {
-				my $mtime = (stat("/var/lib/csf/csf.block.$name"))[9];
+			if (-e "/var/lib/qhtlfirewall/qhtlfirewall.block.$name") {
+				my $mtime = (stat("/var/lib/qhtlfirewall/qhtlfirewall.block.$name"))[9];
 				my $listtime = (time - $mtime);
 				if ($listtime >= $blocklists{$name}{interval}) {$getlist = 1}
 			} else {$getlist = 1}
 
 			if ($getlist and ($name eq "SPAMDROP" or $name eq "SPAMEDROP")) {
-				my $tmpfile = "/var/lib/csf/$name.tmp";
+				my $tmpfile = "/var/lib/qhtlfirewall/$name.tmp";
 				if (-e $tmpfile) {
 					my $mtime = (stat($tmpfile))[9];
 					my $listtime = (time - $mtime);
@@ -4960,8 +4960,8 @@ sub blocklist {
 				eval {local $SIG{__DIE__} = undef; $blcidr6->add("::1/128")};
 				foreach my $bl (keys %blocklists) {
 					if ($bl eq $name) {next}
-					if (-e "/var/lib/csf/csf.block.$bl") {
-						sysopen (my $BLOCK, "/var/lib/csf/csf.block.$bl", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+					if (-e "/var/lib/qhtlfirewall/qhtlfirewall.block.$bl") {
+						sysopen (my $BLOCK, "/var/lib/qhtlfirewall/qhtlfirewall.block.$bl", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 						flock ($BLOCK, LOCK_SH);
 						while (my $ipstr = <$BLOCK>) {
 							chomp $ipstr;
@@ -4983,7 +4983,7 @@ sub blocklist {
 				if ($config{DROP_IP_LOGGING}) {$drop = "BLOCKDROP"}
 
 				if ($text =~ m[^PK\x03\x04] or $text =~ m[^PK\x05\x06] or $text =~ m[^PK\x07\x08]) {
-					sysopen (my $BLOCK, "/var/lib/csf/csf.block.${name}.zip", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+					sysopen (my $BLOCK, "/var/lib/qhtlfirewall/qhtlfirewall.block.${name}.zip", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 					flock ($BLOCK, LOCK_EX);
 					print $BLOCK $text;
 					close ($BLOCK);
@@ -4992,20 +4992,20 @@ sub blocklist {
 						local $SIG{__DIE__} = undef;
 						local $SIG{'ALRM'} = sub {die};
 						alarm(180);
-						@data = &syscommand(__LINE__,$config{UNZIP},"-p","/var/lib/csf/csf.block.${name}.zip");
+						@data = &syscommand(__LINE__,$config{UNZIP},"-p","/var/lib/qhtlfirewall/qhtlfirewall.block.${name}.zip");
 						alarm(0);
 					};
 					alarm(0);
 					if ($@) {
-						logfile("CC Error: Unable to unzip Blocklist $name [/var/lib/csf/csf.block.${name}.zip] - timeout");
+						logfile("CC Error: Unable to unzip Blocklist $name [/var/lib/qhtlfirewall/qhtlfirewall.block.${name}.zip] - timeout");
 						$text = "";
 					} else {
-						logfile("CC: Unzipped Blocklist $name [/var/lib/csf/csf.block.${name}.zip]");
+						logfile("CC: Unzipped Blocklist $name [/var/lib/qhtlfirewall/qhtlfirewall.block.${name}.zip]");
 						$text = join("\n",@data);
 					}
 				}
 
-				sysopen (my $BLOCK, "/var/lib/csf/csf.block.$name", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+				sysopen (my $BLOCK, "/var/lib/qhtlfirewall/qhtlfirewall.block.$name", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 				flock ($BLOCK, LOCK_EX);
 				seek ($BLOCK, 0, 0);
 				truncate ($BLOCK, 0);
@@ -5049,7 +5049,7 @@ sub blocklist {
 				close ($BLOCK);
 
 				if ($config{LF_IPSET}) {
-					open (my $BLOCK, "<", "/var/lib/csf/csf.block.$name");
+					open (my $BLOCK, "<", "/var/lib/qhtlfirewall/qhtlfirewall.block.$name");
 					flock ($BLOCK, LOCK_SH);
 					my @ipset6;
 					while (my $line = <$BLOCK>) {
@@ -5085,7 +5085,7 @@ sub blocklist {
 							&iptablescmd(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} -F $name");
 						}
 					}
-					open (my $BLOCK, "<", "/var/lib/csf/csf.block.$name");
+					open (my $BLOCK, "<", "/var/lib/qhtlfirewall/qhtlfirewall.block.$name");
 					flock ($BLOCK, LOCK_SH);
 					while (my $line = <$BLOCK>) {
 						chomp $line;
@@ -5163,7 +5163,7 @@ sub countrycode {
 	my $force = shift;
 
 	if ($config{MM_LICENSE_KEY} eq "" and $config{CC_SRC} eq "1") {
-		logfile("CC Error: Country Code Lookups setting MM_LICENSE_KEY must be set in /etc/csf/csf.conf to continue using the MaxMind databases");
+	logfile("CC Error: Country Code Lookups setting MM_LICENSE_KEY must be set in /etc/qhtlfirewall/qhtlfirewall.conf to continue using the MaxMind databases");
 		return;
 	}
 
@@ -5177,8 +5177,8 @@ sub countrycode {
 		if ($config{DEBUG} >= 3) {$timer = &timer("start","countrycode",$timer)}
 		$0 = "lfd - retrieving countrycode lists";
 
-		my $lockstr = "COUNTRYCODE";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+	my $lockstr = "COUNTRYCODE";
+	sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -5205,13 +5205,13 @@ sub countrycode {
 		my %cclist;
 
 		if ($config{CC_SRC} eq "" or $config{CC_SRC} eq "1") {
-			unless (-e "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv") {$getgeo = 1}
-			if (-z "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv") {$getgeo = 1}
-			unless (-e "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv") {$getgeo = 1}
-			if (-z "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv") {$getgeo = 1}
+		unless (-e "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv") {$getgeo = 1}
+		if (-z "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv") {$getgeo = 1}
+		unless (-e "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv") {$getgeo = 1}
+		if (-z "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv") {$getgeo = 1}
 
-			if (-e "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv") {
-				my $mtime = (stat("/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv"))[9];
+			if (-e "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv") {
+				my $mtime = (stat("/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv"))[9];
 				my $days = int((time - $mtime) / 86400);
 				if ($days >= $config{CC_INTERVAL}) {$getgeo = 1}
 			} else {$getgeo = 1}
@@ -5221,24 +5221,24 @@ sub countrycode {
 					exit;
 				}
 				logfile("CC: Retrieving $config{cc_src} Country database [$config{cc_country}]");
-				my ($status, $text) = $urlget->urlget("$config{cc_country}","/var/lib/csf/Geo/GeoLite2-Country-CSV.zip");
+				my ($status, $text) = $urlget->urlget("$config{cc_country}","/var/lib/qhtlfirewall/Geo/GeoLite2-Country-CSV.zip");
 				if ($status) {
 					logfile("CC Error: Unable to retrieve $config{cc_src} Country database [$config{cc_country}] - $text");
 				} else {
-					if (-e "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv") {unlink "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv"}
+					if (-e "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv") {unlink "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv"}
 					my @data;
 					eval {
 						local $SIG{__DIE__} = undef;
 						local $SIG{'ALRM'} = sub {die};
 						alarm(180);
-						@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/csf/Geo/","/var/lib/csf/Geo/GeoLite2-Country-CSV.zip");
+						@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/qhtlfirewall/Geo/","/var/lib/qhtlfirewall/Geo/GeoLite2-Country-CSV.zip");
 						alarm(0);
 					};
 					alarm(0);
 					if ($@) {
-						logfile("CC Error: Unable to unzip $config{cc_src} Country database /var/lib/csf/Geo/GeoLite2-Country-CSV.zip - timeout");
+						logfile("CC Error: Unable to unzip $config{cc_src} Country database /var/lib/qhtlfirewall/Geo/GeoLite2-Country-CSV.zip - timeout");
 					}
-					if (-z "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv" or !(-e "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv")) {
+					if (-z "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv" or !(-e "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv")) {
 						logfile("CC Error: GeoLite2-Country-Blocks-IPv4.csv empty or missing");
 					}
 					foreach my $cc (split(/\,/,"$config{CC_DENY},$config{CC_ALLOW},$config{CC_ALLOW_FILTER},$config{CC_ALLOW_PORTS},$config{CC_DENY_PORTS},$config{CC_ALLOW_SMTPAUTH}")) {
@@ -5249,24 +5249,24 @@ sub countrycode {
 					}
 				}
 				logfile("CC: Retrieving $config{asn_src} ASN database [$config{cc_asn}]");
-				($status, $text) = $urlget->urlget("$config{cc_asn}","/var/lib/csf/Geo/GeoLite2-ASN-CSV.zip");
+				($status, $text) = $urlget->urlget("$config{cc_asn}","/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-CSV.zip");
 				if ($status) {
 					logfile("CC Error: Unable to retrieve $config{asn_src} ASN database [$config{cc_asn}] - $text");
 				} else {
-					if (-e "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv") {unlink "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv"}
+					if (-e "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv") {unlink "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv"}
 					my @data;
 					eval {
 						local $SIG{__DIE__} = undef;
 						local $SIG{'ALRM'} = sub {die};
 						alarm(180);
-						@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/csf/Geo/","/var/lib/csf/Geo/GeoLite2-ASN-CSV.zip");
+						@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/qhtlfirewall/Geo/","/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-CSV.zip");
 						alarm(0);
 					};
 					alarm(0);
 					if ($@) {
-						logfile("CC Error: Unable to unzip $config{cc_src} Country database /var/lib/csf/Geo/GeoLite2-ASN-CSV.zip - timeout");
+						logfile("CC Error: Unable to unzip $config{cc_src} Country database /var/lib/qhtlfirewall/Geo/GeoLite2-ASN-CSV.zip - timeout");
 					}
-					if (-z "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv" or !(-e "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv")) {
+					if (-z "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv" or !(-e "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv")) {
 						logfile("CC Error: GeoLite2-ASN-Blocks-IPv4.csv empty or missing");
 					}
 					foreach my $cc (split(/\,/,"$config{CC_DENY},$config{CC_ALLOW},$config{CC_ALLOW_FILTER},$config{CC_ALLOW_PORTS},$config{CC_DENY_PORTS},$config{CC_ALLOW_SMTPAUTH}")) {
@@ -5276,30 +5276,30 @@ sub countrycode {
 						}
 					}
 				}
-				unlink glob "/var/lib/csf/Geo/*.zip";
-				unlink glob "/var/lib/csf/Geo/*-Locations-de.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-es.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-fr.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-ja.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-pt-BR.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-ru.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-zh-CN.csv";
-				unlink glob "/var/lib/csf/Geo/*.dat";
-				unlink glob "/var/lib/csf/zone/*.zip";
-				unlink glob "/var/lib/csf/zone/*.csv";
-				unlink "/var/lib/csf/Geo/GeoIPv6.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*.zip";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-de.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-es.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-fr.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-ja.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-pt-BR.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-ru.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-zh-CN.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*.dat";
+				unlink glob "/var/lib/qhtlfirewall/zone/*.zip";
+				unlink glob "/var/lib/qhtlfirewall/zone/*.csv";
+				unlink "/var/lib/qhtlfirewall/Geo/GeoIPv6.csv";
 			}
 
 			$0 = "lfd - processing countrycode lists";
 			foreach my $cc (split(/\,/,"$config{CC_DENY},$config{CC_ALLOW},$config{CC_ALLOW_FILTER},$config{CC_ALLOW_PORTS},$config{CC_DENY_PORTS},$config{CC_ALLOW_SMTPAUTH}")) {
 				if ($cc) {
 					$cc = lc $cc;
-					if (-e "/var/lib/csf/zone/$cc.zone") {
-						my $mtime = (stat("/var/lib/csf/zone/$cc.zone"))[9];
+					if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
+						my $mtime = (stat("/var/lib/qhtlfirewall/zone/$cc.zone"))[9];
 						my $days = int((time - $mtime) / 86400);
 						if ($days >= $config{CC_INTERVAL}) {$getgeo = 1; $cclist{$cc} = 1}
 					} else {$getgeo = 1;  $cclist{$cc} = 1}
-					if (-z "/var/lib/csf/zone/$cc.zone") {$getgeo = 1;  $cclist{$cc} = 1}
+					if (-z "/var/lib/qhtlfirewall/zone/$cc.zone") {$getgeo = 1;  $cclist{$cc} = 1}
 
 					if ($cclist{$cc}) {
 						if ($config{CC_DENY} =~ /\b$cc\b/i) {$redo_deny = 1}
@@ -5316,7 +5316,7 @@ sub countrycode {
 				logfile("CC: Processing $config{cc_src} Country/ASN database");
 				my %dcidr;
 				my %geoid;
-				open (my $GEO, "<", "/var/lib/csf/Geo/GeoLite2-Country-Locations-en.csv");
+				open (my $GEO, "<", "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Locations-en.csv");
 				flock ($GEO, LOCK_SH);
 				while (my $record = <$GEO>) {
 					chomp $record;
@@ -5329,7 +5329,7 @@ sub countrycode {
 					}
 				}
 				close ($GEO);
-				open (my $IN, "<", "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv");
+				open (my $IN, "<", "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv");
 				flock ($IN, LOCK_SH);
 				while (my $record = <$IN>) {
 					chomp $record;
@@ -5342,7 +5342,7 @@ sub countrycode {
 					}
 				}
 				close ($IN);
-				open ($IN, "<", "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv");
+				open ($IN, "<", "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv");
 				flock ($IN, LOCK_SH);
 				while (my $record = <$IN>) {
 					chomp $record;
@@ -5361,12 +5361,12 @@ sub countrycode {
 					logfile("CC: Extracting zone from $config{cc_src} Country/ASN database for [".uc($cc)."]");
 					if (keys %{$dcidr{$cc}} eq 0) {
 						if (length($cc) == 2) {
-							logfile("CC: No entries found for [".uc($cc)."] in /var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv");
+							logfile("CC: No entries found for [".uc($cc)."] in /var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv");
 						} else {
-							logfile("CC: No entries found for [".uc($cc)."] in /var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv");
+							logfile("CC: No entries found for [".uc($cc)."] in /var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv");
 						}
 					} else {
-						sysopen (my $CIDROUT, "/var/lib/csf/zone/$cc.zone", O_WRONLY | O_CREAT);
+						sysopen (my $CIDROUT, "/var/lib/qhtlfirewall/zone/$cc.zone", O_WRONLY | O_CREAT);
 						flock ($CIDROUT, LOCK_EX);
 						seek ($CIDROUT, 0, 0);
 						truncate ($CIDROUT, 0);
@@ -5376,8 +5376,8 @@ sub countrycode {
 				}
 			}
 		} elsif ($config{CC_SRC} eq "2") {
-			unless (-e "/var/lib/csf/Geo/ip2asn-combined.tsv") {$getgeo = 1}
-			if (-z "/var/lib/csf/Geo/ip2asn-combined.tsv") {$getgeo = 1}
+			unless (-e "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv") {$getgeo = 1}
+			if (-z "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv") {$getgeo = 1}
 
 			if ($getgeo) {
 				unless (-e $config{UNZIP}) {
@@ -5385,24 +5385,24 @@ sub countrycode {
 					exit;
 				}
 				logfile("CC: Retrieving $config{asn_src} ASN database [$config{cc_asn}]");
-				my ($status, $text) = $urlget->urlget("$config{cc_asn}","/var/lib/csf/Geo/ip2asn-combined.tsv.gz");
+				my ($status, $text) = $urlget->urlget("$config{cc_asn}","/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv.gz");
 				if ($status) {
 					logfile("CC Error: Unable to retrieve $config{asn_src} ASN database [$config{cc_asn}] - $text");
 				} else {
-					if (-e "/var/lib/csf/Geo/ip2asn-combined.tsv") {unlink "/var/lib/csf/Geo/ip2asn-combined.tsv"}
+					if (-e "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv") {unlink "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv"}
 					my @data;
 					eval {
 						local $SIG{__DIE__} = undef;
 						local $SIG{'ALRM'} = sub {die};
 						alarm(180);
-						@data = &syscommand(__LINE__,$config{GUNZIP},"/var/lib/csf/Geo/ip2asn-combined.tsv.gz");
+						@data = &syscommand(__LINE__,$config{GUNZIP},"/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv.gz");
 						alarm(0);
 					};
 					alarm(0);
 					if ($@) {
-						logfile("CC Error: Unable to unzip $config{cc_src} Country database /var/lib/csf/Geo/ip2asn-combined.tsv.gz - timeout");
+						logfile("CC Error: Unable to unzip $config{cc_src} Country database /var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv.gz - timeout");
 					}
-					if (-z "/var/lib/csf/Geo/ip2asn-combined.tsv" or !(-e "/var/lib/csf/Geo/ip2asn-combined.tsv")) {
+					if (-z "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv" or !(-e "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv")) {
 						logfile("CC Error: ip2asn-combined.tsv empty or missing");
 					}
 					foreach my $cc (split(/\,/,"$config{CC_DENY},$config{CC_ALLOW},$config{CC_ALLOW_FILTER},$config{CC_ALLOW_PORTS},$config{CC_DENY_PORTS},$config{CC_ALLOW_SMTPAUTH}")) {
@@ -5418,12 +5418,12 @@ sub countrycode {
 			foreach my $cc (split(/\,/,"$config{CC_DENY},$config{CC_ALLOW},$config{CC_ALLOW_FILTER},$config{CC_ALLOW_PORTS},$config{CC_DENY_PORTS},$config{CC_ALLOW_SMTPAUTH}")) {
 				if ($cc) {
 					$cc = lc $cc;
-					if (-e "/var/lib/csf/zone/$cc.zone") {
-						my $mtime = (stat("/var/lib/csf/zone/$cc.zone"))[9];
+					if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
+						my $mtime = (stat("/var/lib/qhtlfirewall/zone/$cc.zone"))[9];
 						my $days = int((time - $mtime) / 86400);
 						if ($days >= $config{CC_INTERVAL}) {$getgeo = 1; $cclist{$cc} = 1}
 					} else {$getgeo = 1;  $cclist{$cc} = 1}
-					if (-z "/var/lib/csf/zone/$cc.zone") {$getgeo = 1;  $cclist{$cc} = 1}
+					if (-z "/var/lib/qhtlfirewall/zone/$cc.zone") {$getgeo = 1;  $cclist{$cc} = 1}
 
 					if ($cclist{$cc}) {
 						if ($config{CC_DENY} =~ /\b$cc\b/i) {$redo_deny = 1}
@@ -5439,7 +5439,7 @@ sub countrycode {
 			if ($getgeo) {
 				logfile("CC: Processing $config{asn_src} ASN database");
 				my %dcidr;
-				open ($IN, "<", "/var/lib/csf/Geo/ip2asn-combined.tsv");
+				open ($IN, "<", "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv");
 				flock ($IN, LOCK_SH);
 				while (my $record = <$IN>) {
 					chomp $record;
@@ -5464,9 +5464,9 @@ sub countrycode {
 					if (length($cc) > 2) {
 						logfile("CC: Extracting zone from $config{asn_src} ASN database for [".uc($cc)."]");
 						if (keys %{$dcidr{$cc}} eq 0) {
-							logfile("CC: No entries found for [".uc($cc)."] in /var/lib/csf/Geo/ip2asn-combined.tsv");
+							logfile("CC: No entries found for [".uc($cc)."] in /var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv");
 						} else {
-							sysopen (my $CIDROUT, "/var/lib/csf/zone/$cc.zone", O_WRONLY | O_CREAT);
+							sysopen (my $CIDROUT, "/var/lib/qhtlfirewall/zone/$cc.zone", O_WRONLY | O_CREAT);
 							flock ($CIDROUT, LOCK_EX);
 							seek ($CIDROUT, 0, 0);
 							truncate ($CIDROUT, 0);
@@ -5476,7 +5476,7 @@ sub countrycode {
 					}
 					elsif (length($cc) == 2) {
 						logfile("CC: Retrieving $config{ccl_src} Country Code Zone [".uc($cc)."] from https://www.ipdeny.com");
-						my ($status, $text) = $urlget->urlget("https://www.ipdeny.com/ipblocks/data/aggregated/${cc}-aggregated.zone","/var/lib/csf/zone/$cc.zone");
+						my ($status, $text) = $urlget->urlget("https://www.ipdeny.com/ipblocks/data/aggregated/${cc}-aggregated.zone","/var/lib/qhtlfirewall/zone/$cc.zone");
 						if ($status) {
 							logfile("CC Error: Unable to retrieve $config{ccl_src} Country Code Zone [".uc($cc)."] from https://www.ipdeny.com/ - $text");
 						} else {
@@ -5512,9 +5512,9 @@ sub countrycode {
 				$cc = lc $cc;
 				if ($config{CC_ALLOW_FILTER} and $redo_allow_filter) {
 					&iptablescmd(__LINE__,"$config{IPTABLES} $config{IPTABLESWAIT} -A CC_ALLOWF -m set --match-set cc_$cc src -j RETURN");}
-				if (-e "/var/lib/csf/zone/$cc.zone") {
+				if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 					logfile("CC: Repopulating ipset cc_$cc with IP addresses from [".uc($cc)."]");
-					open (my $IN, "<", "/var/lib/csf/zone/$cc.zone");
+					open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone");
 					flock ($IN, LOCK_SH);
 					while (my $line = <$IN>) {
 						chomp $line;
@@ -5557,10 +5557,10 @@ sub countrycode {
 				}
 				foreach my $cc (split(/\,/,$config{CC_DENY})) {
 					$cc = lc $cc;
-					if (-e "/var/lib/csf/zone/$cc.zone") {
+					if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 						if ($config{FASTSTART}) {$faststart = 1}
 						logfile("CC: Repopulating CC_DENY with IP addresses from [".uc($cc)."]");
-						open (my $IN, "<", "/var/lib/csf/zone/$cc.zone");
+						open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone");
 						flock ($IN, LOCK_SH);
 						while (my $line = <$IN>) {
 							chomp $line;
@@ -5601,10 +5601,10 @@ sub countrycode {
 				}
 				foreach my $cc (split(/\,/,$config{CC_ALLOW})) {
 					$cc = lc $cc;
-					if (-e "/var/lib/csf/zone/$cc.zone") {
+					if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 						if ($config{FASTSTART}) {$faststart = 1}
 						logfile("CC: Repopulating CC_ALLOW with IP addresses from [".uc($cc)."]");
-						open (my $IN, "<", "/var/lib/csf/zone/$cc.zone");
+						open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone");
 						flock ($IN, LOCK_SH);
 						while (my $line = <$IN>) {
 							chomp $line;
@@ -5646,10 +5646,10 @@ sub countrycode {
 				}
 				foreach my $cc (split(/\,/,$config{CC_ALLOW_FILTER})) {
 					$cc = lc $cc;
-					if (-e "/var/lib/csf/zone/$cc.zone") {
+					if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 						if ($config{FASTSTART}) {$faststart = 1}
 						logfile("CC: Repopulating CC_ALLOWF with IP addresses from [".uc($cc)."]");
-						open (my $IN, "<", "/var/lib/csf/zone/$cc.zone");
+						open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone");
 						flock ($IN, LOCK_SH);
 						while (my $line = <$IN>) {
 							chomp $line;
@@ -5708,10 +5708,10 @@ sub countrycode {
 				}
 				foreach my $cc (split(/\,/,$config{CC_ALLOW_PORTS})) {
 					$cc = lc $cc;
-					if (-e "/var/lib/csf/zone/$cc.zone") {
+					if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 						if ($config{FASTSTART}) {$faststart = 1}
 						logfile("CC: Repopulating CC_ALLOWP with IP addresses from [".uc($cc)."]");
-						open (my $IN, "<", "/var/lib/csf/zone/$cc.zone");
+						open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone");
 						flock ($IN, LOCK_SH);
 						while (my $line = <$IN>) {
 							chomp $line;
@@ -5754,10 +5754,10 @@ sub countrycode {
 				}
 				foreach my $cc (split(/\,/,$config{CC_DENY_PORTS})) {
 					$cc = lc $cc;
-					if (-e "/var/lib/csf/zone/$cc.zone") {
+					if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 						if ($config{FASTSTART}) {$faststart = 1}
 						logfile("CC: Repopulating CC_DENYP with IP addresses from [".uc($cc)."]");
-						open (my $IN, "<", "/var/lib/csf/zone/$cc.zone");
+						open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone");
 						flock ($IN, LOCK_SH);
 						while (my $line = <$IN>) {
 							chomp $line;
@@ -5800,12 +5800,12 @@ sub countrycode {
 			seek ($SMTPAUTH, 0, 0);
 			truncate ($SMTPAUTH, 0);
 			print $SMTPAUTH "# DO NOT EDIT THIS FILE\n#\n";
-			print $SMTPAUTH "# Modify /etc/csf/csf.smtpauth and then restart csf and then lfd\n\n";
+			print $SMTPAUTH "# Modify /etc/qhtlfirewall/qhtlfirewall.smtpauth and then restart qhtlfirewall and then qhtlwaterfall\n\n";
 			print $SMTPAUTH "127.0.0.0/8\n";
 			print $SMTPAUTH "\"::1\"\n";
 			print $SMTPAUTH "\"::1/128\"\n";
-			if (-e "/etc/csf/csf.smtpauth") {
-				my @entries = slurp("/etc/csf/csf.smtpauth");
+			if (-e "/etc/qhtlfirewall/qhtlfirewall.smtpauth") {
+				my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.smtpauth");
 				foreach my $line (@entries) {
 					if ($line =~ /^Include\s*(.*)$/) {
 						my @incfile = slurp($1);
@@ -5824,9 +5824,9 @@ sub countrycode {
 			}
 			foreach my $cc (split(/\,/,$config{CC_ALLOW_SMTPAUTH})) {
 				$cc = lc $cc;
-				if (-e "/var/lib/csf/zone/$cc.zone") {
+				if (-e "/var/lib/qhtlfirewall/zone/$cc.zone") {
 					print $SMTPAUTH "\n# IPv4 addresses for [".uc($cc)."]:\n";
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -5841,9 +5841,9 @@ sub countrycode {
 					}
 					logfile("CC: Finished repopulating /etc/exim.smtpauth with IPv4 addresses from [".uc($cc)."]");
 				}
-				if ($config{CC6_LOOKUPS} and -e "/var/lib/csf/zone/$cc.zone6") {
+				if ($config{CC6_LOOKUPS} and -e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 					print $SMTPAUTH "\n# IPv6 addresses for [".uc($cc)."]:\n";
-					foreach my $line (slurp("/var/lib/csf/zone/$cc.zone6")) {
+					foreach my $line (slurp("/var/lib/qhtlfirewall/zone/$cc.zone6")) {
 						$line =~ s/$cleanreg//g;
 						if ($line =~ /^(\s|\#|$)/) {next}
 						my ($ip,undef) = split (/\s/,$line,2);
@@ -5879,7 +5879,7 @@ sub countrycodelookups {
 	if ($config{CC_LOOKUPS} == 4) {return}
 
 	if ($config{MM_LICENSE_KEY} eq "" and $config{CC_SRC} eq "1") {
-		logfile("CC Error: Country Code Filters setting MM_LICENSE_KEY must be set in /etc/csf/csf.conf to continue using the MaxMind databases");
+		logfile("CC Error: Country Code Filters setting MM_LICENSE_KEY must be set in /etc/qhtlfirewall/qhtlfirewall.conf to continue using the MaxMind databases");
 		return;
 	}
 
@@ -5894,7 +5894,7 @@ sub countrycodelookups {
 		$0 = "lfd - retrieving countrycode lookups";
 
 		my $lockstr = "CC_LOOKUPS";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -5904,8 +5904,8 @@ sub countrycodelookups {
 
 		if ($config{CC_SRC} eq "" or $config{CC_SRC} eq "1") {
 			my $getgeo = 0;
-			my $geofile = "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv4.csv";
-			if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {$geofile = "/var/lib/csf/Geo/GeoLite2-City-Blocks-IPv4.csv"}
+			my $geofile = "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv4.csv";
+			if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {$geofile = "/var/lib/qhtlfirewall/Geo/GeoLite2-City-Blocks-IPv4.csv"}
 			if (-e $geofile) {
 				if (-z $geofile) {$getgeo = 1}
 				my $mtime = (stat($geofile))[9];
@@ -5913,7 +5913,7 @@ sub countrycodelookups {
 				if ($days >= $config{CC_INTERVAL}) {$getgeo = 1}
 
 				if ($config{CC_LOOKUPS} == 3) {
-					my $geofile = "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv4.csv";
+					my $geofile = "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv4.csv";
 					if (-z $geofile) {$getgeo = 1}
 					my $mtime = (stat($geofile))[9];
 					my $days = int((time - $mtime) / 86400);
@@ -5925,17 +5925,17 @@ sub countrycodelookups {
 				my $text;
 				if ($config{CC_LOOKUPS} == 3) {
 					logfile("CCL: Retrieving $config{asn_src} ASN database [$config{cc_asn}]");
-					($status, $text) = $urlget->urlget("$config{cc_asn}","/var/lib/csf/Geo/GeoLite2-ASN-CSV.zip");
+					($status, $text) = $urlget->urlget("$config{cc_asn}","/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-CSV.zip");
 					logfile("CCL: Retrieving $config{cc_src} City database [$config{cc_city}]");
-					($status, $text) = $urlget->urlget("$config{cc_city}","/var/lib/csf/Geo/GeoLite2-City-CSV.zip");
+					($status, $text) = $urlget->urlget("$config{cc_city}","/var/lib/qhtlfirewall/Geo/GeoLite2-City-CSV.zip");
 				}
 				elsif ($config{CC_LOOKUPS} == 2) {
 					logfile("CCL: Retrieving $config{cc_src} City database [$config{cc_city}]");
-					($status, $text) = $urlget->urlget("$config{cc_city}","/var/lib/csf/Geo/GeoLite2-City-CSV.zip");
+					($status, $text) = $urlget->urlget("$config{cc_city}","/var/lib/qhtlfirewall/Geo/GeoLite2-City-CSV.zip");
 				}
 				else {
 					logfile("CCL: Retrieving $config{cc_src} Country database [$config{cc_country}]");
-					($status, $text) = $urlget->urlget("$config{cc_country}","/var/lib/csf/Geo/GeoLite2-Country-CSV.zip");
+					($status, $text) = $urlget->urlget("$config{cc_country}","/var/lib/qhtlfirewall/Geo/GeoLite2-Country-CSV.zip");
 				}
 				if ($status) {
 					if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {
@@ -5951,23 +5951,23 @@ sub countrycodelookups {
 						alarm(180);
 						my ($childin, $childout, $cmdpid);
 						if ($config{CC_LOOKUPS} == 3) {
-							@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/csf/Geo/","/var/lib/csf/Geo/GeoLite2-ASN-CSV.zip");
-							@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/csf/Geo/","/var/lib/csf/Geo/GeoLite2-City-CSV.zip");
+							@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/qhtlfirewall/Geo/","/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-CSV.zip");
+							@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/qhtlfirewall/Geo/","/var/lib/qhtlfirewall/Geo/GeoLite2-City-CSV.zip");
 						}
 						elsif ($config{CC_LOOKUPS} == 2) {
-							@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/csf/Geo/","/var/lib/csf/Geo/GeoLite2-City-CSV.zip");
+							@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/qhtlfirewall/Geo/","/var/lib/qhtlfirewall/Geo/GeoLite2-City-CSV.zip");
 						}
 						else {
-							@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/csf/Geo/","/var/lib/csf/Geo/GeoLite2-Country-CSV.zip");
+							@data = &syscommand(__LINE__,$config{UNZIP},"-DDjod","/var/lib/qhtlfirewall/Geo/","/var/lib/qhtlfirewall/Geo/GeoLite2-Country-CSV.zip");
 						}
 						alarm(0);
 					};
 					alarm(0);
 					if ($@) {
 						if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {
-							logfile("CCL Error: Unable to unzip $config{cc_src} City database /var/lib/csf/Geo/GeoLite2-City-CSV.zip - timeout");
+							logfile("CCL Error: Unable to unzip $config{cc_src} City database /var/lib/qhtlfirewall/Geo/GeoLite2-City-CSV.zip - timeout");
 						} else {
-							logfile("CCL Error: Unable to unzip $config{cc_src} Country database /var/lib/csf/Geo/GeoLite2-Country-CSV.zip - timeout");
+							logfile("CCL Error: Unable to unzip $config{cc_src} Country database /var/lib/qhtlfirewall/Geo/GeoLite2-Country-CSV.zip - timeout");
 						}
 					}
 					if (!(-e $geofile) or -z $geofile) {
@@ -5976,27 +5976,27 @@ sub countrycodelookups {
 						my $now = time;
 						utime ($now,$now,$geofile);
 						logfile("CCL: Retrieved $config{cc_src} IP database");
-						open (my $OUT, ">", "/var/lib/csf/csf.cclookup");
+						open (my $OUT, ">", "/var/lib/qhtlfirewall/qhtlfirewall.cclookup");
 						close ($OUT);
 					}
 				}
-				unlink glob "/var/lib/csf/Geo/*.zip";
-				unlink glob "/var/lib/csf/Geo/*-Locations-de.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-es.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-fr.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-ja.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-pt-BR.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-ru.csv";
-				unlink glob "/var/lib/csf/Geo/*-Locations-zh-CN.csv";
-				unlink glob "/var/lib/csf/Geo/*.dat";
-				unlink glob "/var/lib/csf/zone/*.zip";
-				unlink glob "/var/lib/csf/zone/*.csv";
-				unlink "/var/lib/csf/Geo/GeoIPv6.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*.zip";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-de.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-es.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-fr.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-ja.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-pt-BR.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-ru.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*-Locations-zh-CN.csv";
+				unlink glob "/var/lib/qhtlfirewall/Geo/*.dat";
+				unlink glob "/var/lib/qhtlfirewall/zone/*.zip";
+				unlink glob "/var/lib/qhtlfirewall/zone/*.csv";
+				unlink "/var/lib/qhtlfirewall/Geo/GeoIPv6.csv";
 			}
 		} elsif ($config{CC_SRC} eq "2") {
 			my $getgeo = 0;
-			my $geofile = "/var/lib/csf/Geo/dbip-country-lite.csv";
-			if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {$geofile = "/var/lib/csf/Geo/dbip-city-lite.csv"}
+			my $geofile = "/var/lib/qhtlfirewall/Geo/dbip-country-lite.csv";
+			if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {$geofile = "/var/lib/qhtlfirewall/Geo/dbip-city-lite.csv"}
 			if (-e $geofile) {
 				if (-z $geofile) {$getgeo = 1}
 				my $mtime = (stat($geofile))[9];
@@ -6004,7 +6004,7 @@ sub countrycodelookups {
 				if ($days >= $config{CC_INTERVAL}) {$getgeo = 1}
 
 				if ($config{CC_LOOKUPS} == 3) {
-					my $geofile = "/var/lib/csf/Geo/ip2asn-combined.tsv";
+					my $geofile = "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv";
 					if (-z $geofile) {$getgeo = 1}
 					my $mtime = (stat($geofile))[9];
 					my $days = int((time - $mtime) / 86400);
@@ -6017,81 +6017,81 @@ sub countrycodelookups {
 					exit;
 				}
 				logfile("CCL: Retrieving CC Lookup database [$config{cc_cc}]");
-				my ($status, $text) = $urlget->urlget("$config{cc_cc}","/var/lib/csf/Geo/countryInfo.txt");
+				my ($status, $text) = $urlget->urlget("$config{cc_cc}","/var/lib/qhtlfirewall/Geo/countryInfo.txt");
 				if ($status) {
 					logfile("CCL Error: Unable to retrieve $config{cc_src} CC Lookup database [$config{cc_cc}] - $text");
 				} else {
-					if (-z "/var/lib/csf/Geo/countryInfo.txt" or !(-e "/var/lib/csf/Geo/countryInfo.txt")) {
+					if (-z "/var/lib/qhtlfirewall/Geo/countryInfo.txt" or !(-e "/var/lib/qhtlfirewall/Geo/countryInfo.txt")) {
 						logfile("CC Error: countryInfo.txt empty or missing");
 					}
 				}
 				if ($config{CC_LOOKUPS} == 2 or $config{CC_LOOKUPS} == 3) {
 					logfile("CCL: Retrieving $config{cc_src} City database [$config{cc_city}]");
-					my ($status, $text) = $urlget->urlget("$config{cc_city}","/var/lib/csf/Geo/dbip-city-lite.csv.gz");
+					my ($status, $text) = $urlget->urlget("$config{cc_city}","/var/lib/qhtlfirewall/Geo/dbip-city-lite.csv.gz");
 					if ($status) {
 						logfile("CCL Error: Unable to retrieve $config{cc_src} City database [$config{cc_city}] - $text");
 					} else {
-						if (-e "/var/lib/csf/Geo/dbip-city-lite.csv") {unlink "/var/lib/csf/Geo/dbip-city-lite.csv"}
+						if (-e "/var/lib/qhtlfirewall/Geo/dbip-city-lite.csv") {unlink "/var/lib/qhtlfirewall/Geo/dbip-city-lite.csv"}
 						my @data;
 						eval {
 							local $SIG{__DIE__} = undef;
 							local $SIG{'ALRM'} = sub {die};
 							alarm(180);
-							@data = &syscommand(__LINE__,$config{GUNZIP},"/var/lib/csf/Geo/dbip-city-lite.csv.gz");
+							@data = &syscommand(__LINE__,$config{GUNZIP},"/var/lib/qhtlfirewall/Geo/dbip-city-lite.csv.gz");
 							alarm(0);
 						};
 						alarm(0);
 						if ($@) {
-							logfile("CCL Error: Unable to gunzip $config{cc_src} City database /var/lib/csf/Geo/dbip-city-lite.csv.gz - timeout");
+							logfile("CCL Error: Unable to gunzip $config{cc_src} City database /var/lib/qhtlfirewall/Geo/dbip-city-lite.csv.gz - timeout");
 						}
-						if (-z "/var/lib/csf/Geo/dbip-city-lite.csv" or !(-e "/var/lib/csf/Geo/dbip-city-lite.csv")) {
+						if (-z "/var/lib/qhtlfirewall/Geo/dbip-city-lite.csv" or !(-e "/var/lib/qhtlfirewall/Geo/dbip-city-lite.csv")) {
 							logfile("CCL Error: dbip-city-lite.csv empty or missing");
 						}
 					}
 					if ($config{CC_LOOKUPS} == 3) {
 						logfile("CCL: Retrieving $config{asn_src} ASN database [$config{cc_asn}]");
-						($status, $text) = $urlget->urlget("$config{cc_asn}","/var/lib/csf/Geo/ip2asn-combined.tsv.gz");
+						($status, $text) = $urlget->urlget("$config{cc_asn}","/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv.gz");
 						if ($status) {
 							logfile("CCL Error: Unable to retrieve $config{asn_src} ASN database [$config{cc_asn}] - $text");
 						} else {
-							if (-e "/var/lib/csf/Geo/ip2asn-combined.tsv") {unlink "/var/lib/csf/Geo/ip2asn-combined.tsv"}
+							if (-e "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv") {unlink "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv"}
 							my @data;
 							eval {
 								local $SIG{__DIE__} = undef;
 								local $SIG{'ALRM'} = sub {die};
 								alarm(180);
-								@data = &syscommand(__LINE__,$config{GUNZIP},"/var/lib/csf/Geo/ip2asn-combined.tsv.gz");
+								@data = &syscommand(__LINE__,$config{GUNZIP},"/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv.gz");
 								alarm(0);
 							};
 							alarm(0);
 							if ($@) {
-								logfile("CCL Error: Unable to unzip $config{cc_src} Country database /var/lib/csf/Geo/ip2asn-combined.tsv.gz - timeout");
+								logfile("CCL Error: Unable to unzip $config{cc_src} Country database /var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv.gz - timeout");
 							}
-							if (-z "/var/lib/csf/Geo/ip2asn-combined.tsv" or !(-e "/var/lib/csf/Geo/ip2asn-combined.tsv")) {
+							if (-z "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv" or !(-e "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv")) {
 								logfile("CCL Error: ip2asn-combined.tsv empty or missing");
 							}
 						}
 					}
 				} else {
 					logfile("CC: Retrieving $config{cc_src} Country database [$config{cc_country}]");
-					my ($status, $text) = $urlget->urlget("$config{cc_country}","/var/lib/csf/Geo/dbip-country-lite.csv.gz");
+					my ($status, $text) = $urlget->urlget("$config{cc_country}","/var/lib/qhtlfirewall/Geo/dbip-country-lite.csv.gz");
 					if ($status) {
 						logfile("CCL Error: Unable to retrieve $config{cc_src} Country database [$config{cc_country}] - $text");
 					} else {
-						if (-e "/var/lib/csf/Geo/dbip-country-lite.csv") {unlink "/var/lib/csf/Geo/dbip-country-lite.csv"}
+						if (-e "/var/lib/qhtlfirewall/Geo/dbip-country-lite.csv") {unlink "/var/lib/qhtlfirewall/Geo/dbip-country-lite.csv"}
 						my @data;
 						eval {
 							local $SIG{__DIE__} = undef;
 							local $SIG{'ALRM'} = sub {die};
 							alarm(180);
-							@data = &syscommand(__LINE__,$config{GUNZIP},"/var/lib/csf/Geo/dbip-country-lite.csv.gz");
+							@data = &syscommand(__LINE__,$config{GUNZIP},"/var/lib/qhtlfirewall/Geo/dbip-country-lite.csv.gz");
 							alarm(0);
 						};
 						alarm(0);
 						if ($@) {
-							logfile("CC Error: Unable to gunzip $config{cc_src} Country database /var/lib/csf/Geo/dbip-country-lite.csv.gz - timeout");
+							logfile("CC Error: Unable to gunzip $config{cc_src} Country database /var/lib/qhtlfirewall/Geo/dbip-country-lite.csv.gz - timeout");
 						}
-						if (-z "/var/lib/csf/Geo/dbip-country-lite.csv" or !(-e "/var/lib/csf/Geo/dbip-country-lite.csv")) {
+						if (-z "/var/lib/qhtlfirewall/Geo/dbip-country-lite.csv" or !(-e "/var/lib/qhtlfirewall/Geo/dbip-country-lite.csv")) {
 							logfile("CC Error: dbip-country-lite.csv empty or missing");
 						}
 					}
@@ -6143,12 +6143,12 @@ sub countrycode6 {
 	foreach my $cc (split(/\,/,"$config{CC_DENY},$config{CC_ALLOW},$config{CC_ALLOW_FILTER},$config{CC_ALLOW_PORTS},$config{CC_DENY_PORTS},$config{CC_ALLOW_SMTPAUTH}")) {
 		if ($cc eq "") {next}
 		$cc = lc $cc;
-		if (-e "/var/lib/csf/zone/$cc.zone6") {
-			my $mtime = (stat("/var/lib/csf/zone/$cc.zone6"))[9];
+		if (-e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
+			my $mtime = (stat("/var/lib/qhtlfirewall/zone/$cc.zone6"))[9];
 			my $days = int((time - $mtime) / 86400);
 			if ($days >= $config{CC_INTERVAL}) {$getgeo = 1; $cclist{$cc} = 1}
 		} else {$getgeo = 1;  $cclist{$cc} = 1}
-		if (-z "/var/lib/csf/zone/$cc.zone6") {$getgeo = 1;  $cclist{$cc} = 1}
+		if (-z "/var/lib/qhtlfirewall/zone/$cc.zone6") {$getgeo = 1;  $cclist{$cc} = 1}
 
 		if ($cclist{$cc}) {
 			if ($config{CC_DENY} =~ /\b$cc\b/i) {$redo_deny = 1}
@@ -6165,7 +6165,7 @@ sub countrycode6 {
 			logfile("CC: Processing $config{cc_src} Country/ASN IPv6 database");
 			my %dcidr;
 			my %geoid;
-			open (my $GEO, "<", "/var/lib/csf/Geo/GeoLite2-Country-Locations-en.csv");
+			open (my $GEO, "<", "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Locations-en.csv");
 			flock ($GEO, LOCK_SH);
 			while (my $record = <$GEO>) {
 				chomp $record;
@@ -6178,7 +6178,7 @@ sub countrycode6 {
 				}
 			}
 			close ($GEO);
-			open (my $IN, "<", "/var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv6.csv");
+			open (my $IN, "<", "/var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv6.csv");
 			flock ($IN, LOCK_SH);
 			while (my $record = <$IN>) {
 				chomp $record;
@@ -6191,7 +6191,7 @@ sub countrycode6 {
 				}
 			}
 			close ($IN);
-			open ($IN, "<", "/var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv6.csv");
+			open ($IN, "<", "/var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv6.csv");
 			flock ($IN, LOCK_SH);
 			while (my $record = <$IN>) {
 				chomp $record;
@@ -6210,12 +6210,12 @@ sub countrycode6 {
 				logfile("CC: Extracting zone from $config{cc_src} Country/ASN IPv6 database for [".uc($cc)."]");
 				if (keys %{$dcidr{$cc}} eq 0) {
 					if (length($cc) == 2) {
-						logfile("CC: No IPv6 entries found for [".uc($cc)."] in /var/lib/csf/Geo/GeoLite2-Country-Blocks-IPv6.csv");
+						logfile("CC: No IPv6 entries found for [".uc($cc)."] in /var/lib/qhtlfirewall/Geo/GeoLite2-Country-Blocks-IPv6.csv");
 					} else {
-						logfile("CC: No IPv6 entries found for [".uc($cc)."] in /var/lib/csf/Geo/GeoLite2-ASN-Blocks-IPv6.csv");
+						logfile("CC: No IPv6 entries found for [".uc($cc)."] in /var/lib/qhtlfirewall/Geo/GeoLite2-ASN-Blocks-IPv6.csv");
 					}
 				} else {
-					sysopen (my $CIDROUT, "/var/lib/csf/zone/$cc.zone6", O_WRONLY | O_CREAT);
+					sysopen (my $CIDROUT, "/var/lib/qhtlfirewall/zone/$cc.zone6", O_WRONLY | O_CREAT);
 					flock ($CIDROUT, LOCK_EX);
 					seek ($CIDROUT, 0, 0);
 					truncate ($CIDROUT, 0);
@@ -6228,7 +6228,7 @@ sub countrycode6 {
 		if ($getgeo) {
 			logfile("CC: Processing $config{cc_src} Country/ASN IPv6 database");
 			my %dcidr;
-			open ($IN, "<", "/var/lib/csf/Geo/ip2asn-combined.tsv");
+			open ($IN, "<", "/var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv");
 			flock ($IN, LOCK_SH);
 			while (my $record = <$IN>) {
 				chomp $record;
@@ -6253,9 +6253,9 @@ sub countrycode6 {
 				if (length($cc) > 2) {
 					logfile("CC: Extracting IPv6 zone from $config{asn_src} ASN database for [".uc($cc)."]");
 					if (keys %{$dcidr{$cc}} eq 0) {
-						logfile("CC: No entries found for [".uc($cc)."] in /var/lib/csf/Geo/ip2asn-combined.tsv");
+						logfile("CC: No entries found for [".uc($cc)."] in /var/lib/qhtlfirewall/Geo/ip2asn-combined.tsv");
 					} else {
-						sysopen (my $CIDROUT, "/var/lib/csf/zone/$cc.zone6", O_WRONLY | O_CREAT);
+						sysopen (my $CIDROUT, "/var/lib/qhtlfirewall/zone/$cc.zone6", O_WRONLY | O_CREAT);
 						flock ($CIDROUT, LOCK_EX);
 						seek ($CIDROUT, 0, 0);
 						truncate ($CIDROUT, 0);
@@ -6265,7 +6265,7 @@ sub countrycode6 {
 				}
 				elsif (length($cc) == 2) {
 					logfile("CC: Retrieving $config{ccl_src} Country Code IPv6 Zone [".uc($cc)."] from https://www.ipdeny.com");
-					my ($status, $text) = $urlget->urlget("https://www.ipdeny.com/ipv6/ipaddresses/aggregated/${cc}-aggregated.zone","/var/lib/csf/zone/$cc.zone6");
+					my ($status, $text) = $urlget->urlget("https://www.ipdeny.com/ipv6/ipaddresses/aggregated/${cc}-aggregated.zone","/var/lib/qhtlfirewall/zone/$cc.zone6");
 					if ($status) {
 						logfile("CC Error: Unable to retrieve $config{ccl_src} Country Code IPv6 Zone [".uc($cc)."] from https://www.ipdeny.com - $text");
 					} else {
@@ -6291,9 +6291,9 @@ sub countrycode6 {
 			undef @ipset;
 			$cc = lc $cc;
 			if ($config{CC_ALLOW_FILTER} and $redo_allow_filter) {&iptablescmd(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} -A CC_ALLOWF -m set --match-set cc_6_$cc src -j RETURN")}
-			if (-e "/var/lib/csf/zone/$cc.zone6") {
+			if (-e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 				logfile("CC: Repopulating ipset cc_6_$cc with IP addresses from [".uc($cc)."]");
-				open (my $IN, "<", "/var/lib/csf/zone/$cc.zone6");
+				open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone6");
 				flock ($IN, LOCK_SH);
 				while (my $line = <$IN>) {
 					chomp $line;
@@ -6336,10 +6336,10 @@ sub countrycode6 {
 			}
 			foreach my $cc (split(/\,/,$config{CC_DENY})) {
 				$cc = lc $cc;
-				if (-e "/var/lib/csf/zone/$cc.zone6") {
+				if (-e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 					if ($config{FASTSTART}) {$faststart = 1}
 					logfile("CC: Repopulating CC_DENY with IP addresses from [".uc($cc)."]");
-					open (my $IN, "<", "/var/lib/csf/zone/$cc.zone6");
+					open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone6");
 					flock ($IN, LOCK_SH);
 					while (my $line = <$IN>) {
 						chomp $line;
@@ -6375,10 +6375,10 @@ sub countrycode6 {
 			}
 			foreach my $cc (split(/\,/,$config{CC_ALLOW})) {
 				$cc = lc $cc;
-				if (-e "/var/lib/csf/zone/$cc.zone6") {
+				if (-e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 					if ($config{FASTSTART}) {$faststart = 1}
 					logfile("CC: Repopulating CC_ALLOW with IP addresses from [".uc($cc)."]");
-					open (my $IN, "<", "/var/lib/csf/zone/$cc.zone6");
+					open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone6");
 					flock ($IN, LOCK_SH);
 					while (my $line = <$IN>) {
 						chomp $line;
@@ -6415,10 +6415,10 @@ sub countrycode6 {
 			}
 			foreach my $cc (split(/\,/,$config{CC_ALLOW_FILTER})) {
 				$cc = lc $cc;
-				if (-e "/var/lib/csf/zone/$cc.zone6") {
+				if (-e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 					if ($config{FASTSTART}) {$faststart = 1}
 					logfile("CC: Repopulating CC_ALLOWF with IP addresses from [".uc($cc)."]");
-					open (my $IN, "<", "/var/lib/csf/zone/$cc.zone6");
+					open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone6");
 					flock ($IN, LOCK_SH);
 					while (my $line = <$IN>) {
 						chomp $line;
@@ -6472,10 +6472,10 @@ sub countrycode6 {
 			}
 			foreach my $cc (split(/\,/,$config{CC_ALLOW_PORTS})) {
 				$cc = lc $cc;
-				if (-e "/var/lib/csf/zone/$cc.zone6") {
+				if (-e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 					if ($config{FASTSTART}) {$faststart = 1}
 					logfile("CC: Repopulating CC_ALLOWP with IP addresses from [".uc($cc)."]");
-					open (my $IN, "<", "/var/lib/csf/zone/$cc.zone6");
+					open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone6");
 					flock ($IN, LOCK_SH);
 					while (my $line = <$IN>) {
 						chomp $line;
@@ -6513,10 +6513,10 @@ sub countrycode6 {
 			}
 			foreach my $cc (split(/\,/,$config{CC_DENY_PORTS})) {
 				$cc = lc $cc;
-				if (-e "/var/lib/csf/zone/$cc.zone6") {
+				if (-e "/var/lib/qhtlfirewall/zone/$cc.zone6") {
 					if ($config{FASTSTART}) {$faststart = 1}
 					logfile("CC: Repopulating CC_DENYP with IP addresses from [".uc($cc)."]");
-					open (my $IN, "<", "/var/lib/csf/zone/$cc.zone6");
+					open (my $IN, "<", "/var/lib/qhtlfirewall/zone/$cc.zone6");
 					flock ($IN, LOCK_SH);
 					while (my $line = <$IN>) {
 						chomp $line;
@@ -6561,7 +6561,7 @@ sub global {
 		$0 = "lfd - retrieving global lists";
 
 		my $lockstr = "LF_GLOBAL";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -6612,7 +6612,7 @@ sub global {
 						}
 					}
 				}
-				sysopen (my $GALLOW, "/var/lib/csf/csf.gallow", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+				sysopen (my $GALLOW, "/var/lib/qhtlfirewall/qhtlfirewall.gallow", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 				flock ($GALLOW, LOCK_EX);
 				seek ($GALLOW, 0, 0);
 				truncate ($GALLOW, 0);
@@ -6723,7 +6723,7 @@ sub global {
 						}
 					}
 				}
-				sysopen (my $GDENY, "/var/lib/csf/csf.gdeny", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+				sysopen (my $GDENY, "/var/lib/qhtlfirewall/qhtlfirewall.gdeny", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 				flock ($GDENY, LOCK_EX);
 				seek ($GDENY, 0, 0);
 				truncate ($GDENY, 0);
@@ -6780,7 +6780,7 @@ sub global {
 			} else {
 				logfile("Global Ignore - retrieved and ignoring");
 
-				sysopen (my $GIGNORE, "/var/lib/csf/csf.gignore", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+				sysopen (my $GIGNORE, "/var/lib/qhtlfirewall/qhtlfirewall.gignore", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 				flock ($GIGNORE, LOCK_EX);
 				seek ($GIGNORE, 0, 0);
 				truncate ($GIGNORE, 0);
@@ -6800,7 +6800,7 @@ sub global {
 			} else {
 				logfile("Global DynDNS - retrieved and allowing IP addresses");
 
-				sysopen (my $GDYNDNS, "/var/lib/csf/csf.gdyndns", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+				sysopen (my $GDYNDNS, "/var/lib/qhtlfirewall/qhtlfirewall.gdyndns", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 				flock ($GDYNDNS, LOCK_EX);
 				seek ($GDYNDNS, 0, 0);
 				truncate ($GDYNDNS, 0);
@@ -6837,7 +6837,7 @@ sub dyndns {
 		$0 = "lfd - resolving dyndns IP addresses";
 
 		my $lockstr = "DYNDNS";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -6846,7 +6846,7 @@ sub dyndns {
 		$0 = "lfd - resolving dyndns IP addresses";
 
 		my @dyndns;
-		my @entries = slurp("/etc/csf/csf.dyndns");
+		my @entries = slurp("/etc/qhtlfirewall/qhtlfirewall.dyndns");
 		foreach my $line (@entries) {
 			if ($line =~ /^Include\s*(.*)$/) {
 				my @incfile = slurp($1);
@@ -6886,7 +6886,7 @@ sub dyndns {
 				&iptablescmd(__LINE__,"$config{IP6TABLES} $config{IPTABLESWAIT} -F ALLOWDYNOUT");
 			}
 		}
-		sysopen (my $TEMPDYN, "/var/lib/csf/csf.tempdyn", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+		sysopen (my $TEMPDYN, "/var/lib/qhtlfirewall/qhtlfirewall.tempdyn", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 		flock ($TEMPDYN, LOCK_EX);
 		seek ($TEMPDYN, 0, 0);
 		truncate ($TEMPDYN, 0);
@@ -6960,7 +6960,7 @@ sub globaldyndns {
 		$0 = "lfd - resolving global dyndns IP addresses";
 
 		my $lockstr = "GLOBAL_DYNDNS_INTERVAL";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -6968,7 +6968,7 @@ sub globaldyndns {
 		&listlock("lock");
 		$0 = "lfd - resolving global dyndns IP addresses";
 
-		open (my $IN, "<", "/var/lib/csf/csf.gdyndns");
+		open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.gdyndns");
 		flock ($IN, LOCK_SH);
 		my @dyndns = <$IN>;
 		close ($IN);
@@ -7008,7 +7008,7 @@ sub globaldyndns {
 				}
 			}
 		}
-		sysopen (my $TEMPDYN, "/var/lib/csf/csf.tempgdyn", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+		sysopen (my $TEMPDYN, "/var/lib/qhtlfirewall/qhtlfirewall.tempgdyn", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 		flock ($TEMPDYN, LOCK_EX);
 		seek ($TEMPDYN, 0, 0);
 		truncate ($TEMPDYN, 0);
@@ -7079,7 +7079,7 @@ sub globaldyndns {
 sub listlock {
 	my $state = shift;
 	if ($state eq "lock") {
-		sysopen ($LISTLOCK, "/var/lib/csf/lock/list.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/list.lock");
+		sysopen ($LISTLOCK, "/var/lib/qhtlfirewall/lock/list.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/list.lock");
 		flock ($LISTLOCK, LOCK_EX) or &childcleanup("*Lock Error* [listlock] unable to lock");
 		print $LISTLOCK time;
 	} else {
@@ -7102,7 +7102,7 @@ sub dirwatch {
 		$0 = "lfd - checking directories";
 
 		my $lockstr = "LF_DIRWATCH";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -7110,8 +7110,8 @@ sub dirwatch {
 		my $start = time;
 		my $tfail = 0;
 		undef %nofiles;
-		if (! -z "/var/lib/csf/csf.tempfiles") {
-			open (my $IN, "<", "/var/lib/csf/csf.tempfiles");
+		if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempfiles") {
+			open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempfiles");
 			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			close ($IN);
@@ -7147,7 +7147,7 @@ sub dirwatch {
 			if (@suspicious) {
 				$0 = "lfd - reporting directory watch results";
 
-				my @alert = slurp("/usr/local/csf/tpl/filealert.txt");
+				my @alert = slurp("/usr/local/qhtlfirewall/tpl/filealert.txt");
 				my $matches = 0;
 				foreach my $file (@suspicious) {
 					if ($nofiles{$file}) {next}
@@ -7171,7 +7171,7 @@ sub dirwatch {
 					$matches++;
 					if ($matches > 10) {
 						logfile("Too many hits for *LF_DIRWATCH* - Directory Watching disabled");
-						sysopen (my $DWDISABLE, "/var/lib/csf/csf.dwdisable", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+						sysopen (my $DWDISABLE, "/var/lib/qhtlfirewall/qhtlfirewall.dwdisable", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 						flock ($DWDISABLE, LOCK_EX);
 						print $DWDISABLE "disabled\n";
 						close ($DWDISABLE);
@@ -7202,10 +7202,10 @@ sub dirwatch {
 							delete $nofiles{$file};
 						}
 						elsif (-f $file) {
-							system($config{TAR},"-rf","/var/lib/csf/suspicious.tar",$file);
+								system($config{TAR},"-rf","/var/lib/qhtlfirewall/suspicious.tar",$file);
 							unlink ($file);
 							$line .= " - removed";
-							$action = "Moved into /var/lib/csf/suspicious.tar";
+								$action = "Moved into /var/lib/qhtlfirewall/suspicious.tar";
 							delete $nofiles{$file};
 						}
 					}
@@ -7224,7 +7224,7 @@ sub dirwatch {
 					ConfigServer::Sendmail::relay("", "", @message);
 
 					if (! $config{LF_DIRWATCH_DISABLE}) {
-						sysopen (my $TEMPFILES, "/var/lib/csf/csf.tempfiles", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+						sysopen (my $TEMPFILES, "/var/lib/qhtlfirewall/qhtlfirewall.tempfiles", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 						flock ($TEMPFILES, LOCK_EX);
 						print $TEMPFILES time.":$file\n";
 						close ($TEMPFILES);
@@ -7235,7 +7235,7 @@ sub dirwatch {
 
 		if ($tfail) {
 			$config{LF_DIRWATCH} = $config{LF_DIRWATCH} * 3;
-			sysopen (my $TEMPCONF, "/var/lib/csf/csf.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+			sysopen (my $TEMPCONF, "/var/lib/qhtlfirewall/qhtlfirewall.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 			flock ($TEMPCONF, LOCK_EX);
 			print $TEMPCONF "LF_DIRWATCH = \"$config{LF_DIRWATCH}\"\n";
 			close ($TEMPCONF);
@@ -7336,15 +7336,15 @@ sub dirwatchfile {
 		if ($config{DEBUG} >= 3) {$timer = &timer("start","dirwatchfile",$timer)}
 
 		my $lockstr = "LF_DIRWATCH_FILE";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
 		$0 = "lfd - checking files and directories";
 
 		undef %nofiles;
-		if (-e "/var/lib/csf/csf.tempwatch") {
-			open (my $IN, "<", "/var/lib/csf/csf.tempwatch");
+		if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempwatch") {
+			open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempwatch");
 			flock ($IN, LOCK_SH);
 			my @data = <$IN>;
 			close ($IN);
@@ -7356,7 +7356,7 @@ sub dirwatchfile {
 			}
 		}
 
-		my @alert = slurp("/usr/local/csf/tpl/watchalert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/watchalert.txt");
 		foreach my $file (keys %dirwatchfile) {
 			unless (-e $file) {
 				logfile("Directory *File Watching* [$file] does not exist");
@@ -7404,7 +7404,7 @@ sub dirwatchfile {
 			}
 		}
 		
-		sysopen (my $TEMPWATCH, "/var/lib/csf/csf.tempwatch", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot write out file: $!");
+		sysopen (my $TEMPWATCH, "/var/lib/qhtlfirewall/qhtlfirewall.tempwatch", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot write out file: $!");
 		flock ($TEMPWATCH, LOCK_EX);
 		seek ($TEMPWATCH, 0, 0);
 		truncate ($TEMPWATCH, 0);
@@ -7434,7 +7434,7 @@ sub integrity {
 		if ($config{DEBUG} >= 3) {$timer = &timer("start","integrity",$timer)}
 
 		my $lockstr = "LF_INTEGRITY";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -7446,14 +7446,14 @@ sub integrity {
 		my $tfail = 0;
 
 		my $action;
-		if (-z "/var/lib/csf/csf.tempint") {$action = "start"}
-		unless (-e "/var/lib/csf/csf.tempint") {$action = "start"}
+		if (-z "/var/lib/qhtlfirewall/qhtlfirewall.tempint") {$action = "start"}
+		unless (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempint") {$action = "start"}
 		if ($action eq "start") {
 			eval {
 				local $SIG{__DIE__} = undef;
 				local $SIG{'ALRM'} = sub {die};
 				alarm($alarm);
-				&syscommand(__LINE__,"$config{MD5SUM} $integrity > /var/lib/csf/csf.tempint");
+				&syscommand(__LINE__,"$config{MD5SUM} $integrity > /var/lib/qhtlfirewall/qhtlfirewall.tempint");
 				alarm(0);
 			};
 			alarm(0);
@@ -7467,7 +7467,7 @@ sub integrity {
 				local $SIG{__DIE__} = undef;
 				local $SIG{'ALRM'} = sub {die};
 				alarm($alarm);
-				@data = &syscommand(__LINE__,"$config{MD5SUM} --check /var/lib/csf/csf.tempint");
+				@data = &syscommand(__LINE__,"$config{MD5SUM} --check /var/lib/qhtlfirewall/qhtlfirewall.tempint");
 				alarm(0);
 			};
 			alarm(0);
@@ -7490,7 +7490,7 @@ sub integrity {
 					logfile("*System Integrity* has detected modified file(s):$files");
 					$0 = "lfd - (child) system integrity alert";
 
-					my @alert = slurp("/usr/local/csf/tpl/integrityalert.txt");
+					my @alert = slurp("/usr/local/qhtlfirewall/tpl/integrityalert.txt");
 					my @message;
 					foreach my $line (@alert) {
 						$line =~ s/\r//;
@@ -7498,13 +7498,13 @@ sub integrity {
 						push @message, $line;
 					}
 					ConfigServer::Sendmail::relay("", "", @message);
-					unlink "/var/lib/csf/csf.tempint";
+					unlink "/var/lib/qhtlfirewall/qhtlfirewall.tempint";
 
 					eval {
 						local $SIG{__DIE__} = undef;
 						local $SIG{'ALRM'} = sub {die};
 						alarm($alarm);
-						&syscommand(__LINE__,"$config{MD5SUM} $integrity > /var/lib/csf/csf.tempint");
+						&syscommand(__LINE__,"$config{MD5SUM} $integrity > /var/lib/qhtlfirewall/qhtlfirewall.tempint");
 						alarm(0);
 					};
 					alarm(0);
@@ -7518,7 +7518,7 @@ sub integrity {
 
 		if ($tfail) {
 			$config{LF_INTEGRITY} = $config{LF_INTEGRITY} * 1.5;
-			sysopen (my $TEMPCONF, "/var/lib/csf/csf.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+			sysopen (my $TEMPCONF, "/var/lib/qhtlfirewall/qhtlfirewall.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 			flock ($TEMPCONF, LOCK_EX);
 			print $TEMPCONF "LF_INTEGRITY = \"$config{LF_INTEGRITY}\"\n";
 			close ($TEMPCONF);
@@ -7548,25 +7548,25 @@ sub logscanner {
 		if ($config{DEBUG} >= 3) {$timer = &timer("start","logscanner",$timer)}
 
 		my $lockstr = "LOGSCANNER";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
 		$0 = "lfd - log scanner";
 
-		unless (-z "/var/lib/csf/csf.logtemp" and $config{LOGSCANNER_EMPTY} == 0) {
+		unless (-z "/var/lib/qhtlfirewall/qhtlfirewall.logtemp" and $config{LOGSCANNER_EMPTY} == 0) {
 			my $text;
 			my %loglines;
 			my $total = 0;
 			my $max = 0;
 
-			sysopen (my $LOGTEMP,"/var/lib/csf/csf.logtemp", O_RDWR | O_CREAT);
+			sysopen (my $LOGTEMP,"/var/lib/qhtlfirewall/qhtlfirewall.logtemp", O_RDWR | O_CREAT);
 			flock ($LOGTEMP, LOCK_EX);
 			my @data = <$LOGTEMP>;
 			seek ($LOGTEMP, 0, 0);
 			truncate ($LOGTEMP, 0);
-			if (-e "/var/lib/csf/csf.logmax") {
-				unlink "/var/lib/csf/csf.logmax";
+			if (-e "/var/lib/qhtlfirewall/qhtlfirewall.logmax") {
+				unlink "/var/lib/qhtlfirewall/qhtlfirewall.logmax";
 				$max = 1;
 			}
 			close ($LOGTEMP);
@@ -7593,7 +7593,7 @@ sub logscanner {
 
 			if ($text eq "") {$text = "...No log lines to report..."}
 
-			my @alert = slurp("/usr/local/csf/tpl/logalert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/logalert.txt");
 			my @message;
 			foreach my $line (@alert) {
 				$line =~ s/\r//;
@@ -7628,7 +7628,7 @@ sub exploit {
 		if ($config{DEBUG} >= 3) {$timer = &timer("start","exploit",$timer)}
 
 		my $lockstr = "LF_EXPLOIT";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 
@@ -7650,19 +7650,19 @@ sub exploit {
 
 		if ($report) {
 			$0 = "lfd - (child) system exploit alert";
-			sysopen (my $TEMPEXPLOIT, "/var/lib/csf/csf.tempexploit", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
+			sysopen (my $TEMPEXPLOIT, "/var/lib/qhtlfirewall/qhtlfirewall.tempexploit", O_WRONLY | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot open out file: $!");
 			flock ($TEMPEXPLOIT, LOCK_EX);
 			print $TEMPEXPLOIT time;
 			close ($TEMPEXPLOIT);
 
-			my @alert = slurp("/usr/local/csf/tpl/exploitalert.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/exploitalert.txt");
 			my @message;
 			foreach my $line (@alert) {
 				$line =~ s/\[text\]/$report/ig;
 				push @message, $line;
 			}
 			ConfigServer::Sendmail::relay("", "", @message);
-			unlink "/var/lib/csf/csf.tempexp";
+			unlink "/var/lib/qhtlfirewall/qhtlfirewall.tempexp";
 		}
 
 		close ($THISLOCK );
@@ -7841,7 +7841,7 @@ sub ignoreip {
 		my $dnsrip;
 		my $dnshost;
 		my $cachehit;
-		open (my $DNS, "<", "/var/lib/csf/csf.dnscache");
+		open (my $DNS, "<", "/var/lib/qhtlfirewall/qhtlfirewall.dnscache");
 		flock ($DNS, LOCK_SH);
 		while (my $line = <$DNS>) {
 			chomp $line;
@@ -7871,7 +7871,7 @@ sub ignoreip {
 			};
 			alarm(0);
 			unless (checkip(\$matchip)) {$matchip = ""}
-			sysopen (my $DNS, "/var/lib/csf/csf.dnscache", O_WRONLY | O_APPEND | O_CREAT);
+			sysopen (my $DNS, "/var/lib/qhtlfirewall/qhtlfirewall.dnscache", O_WRONLY | O_APPEND | O_CREAT);
 			flock ($DNS, LOCK_EX);
 			print $DNS "$ip|$matchip|$matchdomain\n";
 			close ($DNS);
@@ -8140,8 +8140,8 @@ sub iptablescmd {
 		return;
 	}
 
-	if (-e "/etc/csf/csf.error") {
-		&cleanup(__LINE__,"*Error* csf reported an error (see /etc/csf/csf.error). *lfd stopped*");
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.error") {
+		&cleanup(__LINE__,"*Error* qhtlfirewall reported an error (see /etc/qhtlfirewall/qhtlfirewall.error). *qhtlwaterfall stopped*");
 		exit 1;
 	}
 
@@ -8219,8 +8219,8 @@ sub syscommand {
 	my $status = 0;
 	my @output;
 
-	if (-e "/etc/csf/csf.error") {
-		&cleanup(__LINE__,"*Error* csf reported an error (see /etc/csf/csf.error). *lfd stopped*");
+	if (-e "/etc/qhtlfirewall/qhtlfirewall.error") {
+		&cleanup(__LINE__,"*Error* qhtlfirewall reported an error (see /etc/qhtlfirewall/qhtlfirewall.error). *qhtlwaterfall stopped*");
 		exit 1;
 	}
 
@@ -8250,7 +8250,7 @@ sub iptableslock {
 	my $lock = shift;
 	my $iptablesx = shift;
 	if ($lock eq "lock") {
-		sysopen ($IPTABLESLOCK, "/var/lib/csf/lock/command.lock", O_RDWR | O_CREAT);
+		sysopen ($IPTABLESLOCK, "/var/lib/qhtlfirewall/lock/command.lock", O_RDWR | O_CREAT);
 		flock ($IPTABLESLOCK, LOCK_EX);
 		autoflush $IPTABLESLOCK 1;
 		seek ($IPTABLESLOCK, 0, 0);
@@ -8284,7 +8284,7 @@ sub timer {
 # start csflock
 sub csflock {
 	my $ret = 0;
-	sysopen (my $CSFLOCKFILE, "/var/lib/csf/csf.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open csf lock file");
+	sysopen (my $CSFLOCKFILE, "/var/lib/qhtlfirewall/qhtlfirewall.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open qhtlfirewall lock file");
 	flock ($CSFLOCKFILE, LOCK_SH | LOCK_NB) or $ret = 1;
 	close ($CSFLOCKFILE);
 
@@ -8375,7 +8375,7 @@ sub ipblock {
 				}
 			}
 
-			sysopen (my $TEMPIP, "/var/lib/csf/csf.tempip", O_RDWR | O_CREAT);
+			sysopen (my $TEMPIP, "/var/lib/qhtlfirewall/qhtlfirewall.tempip", O_RDWR | O_CREAT);
 			flock ($TEMPIP, LOCK_EX);
 			my @data = <$TEMPIP>;
 			chomp @data;
@@ -8461,7 +8461,7 @@ sub ipblock {
 				} else {
 					my $tip = iplookup($ipblock);
 					$message = "(NETBLOCK) $tip has had more than $config{LF_NETBLOCK_COUNT} blocks in the last $config{LF_NETBLOCK_INTERVAL} secs";
-					&syscommand(__LINE__,"/usr/sbin/csf","-d",$ipblock,"lfd: $message");
+					&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-d",$ipblock,"lfd: $message");
 					logfile("$message - *Blocked in csf* [$active]");
 					if ($config{CLUSTER_BLOCK} and $config{CLUSTER_SENDTO} and !$cluster) {&lfdclient(1,$message,$ipblock,"","inout","0")}
 					if ($config{BLOCK_REPORT}) {&block_report($ipblock,"*","1","inout","0",$message,"","LF_NETBLOCK_COUNT")}
@@ -8472,7 +8472,7 @@ sub ipblock {
 				if ($config{LF_NETBLOCK_ALERT}) {
 					$0 = "lfd - (child) sending alert email for $ipblock";
 
-					my @alert = slurp("/usr/local/csf/tpl/netblock.txt");
+					my @alert = slurp("/usr/local/qhtlfirewall/tpl/netblock.txt");
 					my @message;
 					my $tip = iplookup($ipblock);
 					foreach my $line (@alert) {
@@ -8501,8 +8501,8 @@ sub ipblock {
 				} else {
 					my $tip = iplookup($ip);
 					$message = "(PERMBLOCK) $tip has had more than $config{LF_PERMBLOCK_COUNT} temp blocks in the last $config{LF_PERMBLOCK_INTERVAL} secs";
-					&syscommand(__LINE__,"/usr/sbin/csf","-tr",$ip);
-					&syscommand(__LINE__,"/usr/sbin/csf","-d",$ip,"lfd: $message");
+					&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-tr",$ip);
+					&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-d",$ip,"lfd: $message");
 					logfile("$message - *Blocked in csf* [$active]");
 					if ($config{CLUSTER_BLOCK} and $config{CLUSTER_SENDTO} and !$cluster) {&lfdclient(1,$message,$ip,"","inout","0")}
 					if ($config{BLOCK_REPORT}) {&block_report($ip,"*","1","inout","0",$message,"","LF_PERMBLOCK_COUNT")}
@@ -8512,7 +8512,7 @@ sub ipblock {
 				if ($config{LF_PERMBLOCK_ALERT}) {
 					$0 = "lfd - (child) sending alert email for $ip";
 
-					my @alert = slurp("/usr/local/csf/tpl/permblock.txt");
+					my @alert = slurp("/usr/local/qhtlfirewall/tpl/permblock.txt");
 					my $tip = iplookup($ip);
 					my @message;
 					foreach my $line (@alert) {
@@ -8552,7 +8552,7 @@ sub ipblock {
 							my ($tport,$proto) = split(/\;/,$dport);
 							$dport = $tport;
 							if ($proto eq "") {$proto = "tcp"}
-							&syscommand(__LINE__,"/usr/sbin/csf","-d","$proto|in|d=$dport|s=$ip","lfd: $message");
+							&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-d","$proto|in|d=$dport|s=$ip","lfd: $message");
 							logfile("$message - *Blocked in csf* port=$dport [$active]");
 							$blocked = 1;
 						}
@@ -8570,7 +8570,7 @@ sub ipblock {
 						$return = 2;
 					} else {
 						$blocked = 1;
-						&syscommand(__LINE__,"/usr/sbin/csf","-d",$ip,"lfd: $message");
+						&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-d",$ip,"lfd: $message");
 						logfile("$message - *Blocked in csf* [$active]");
 					}
 				}
@@ -8635,7 +8635,7 @@ sub ipblock {
 						}
 					}
 				}
-				sysopen (my $TEMPBAN, "/var/lib/csf/csf.tempban", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+				sysopen (my $TEMPBAN, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 				flock ($TEMPBAN, LOCK_EX);
 				print $TEMPBAN time."|$ip|$port|$inout|$timeout|lfd - $message\n";
 				close ($TEMPBAN);
@@ -8653,7 +8653,7 @@ sub ipblock {
 ###############################################################################
 # start ipunblock
 sub ipunblock {
-	if (! -z "/var/lib/csf/csf.tempban") {
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempban") {
 		$SIG{CHLD} = 'IGNORE';
 		unless (defined ($childpid = fork)) {
 			&cleanup(__LINE__,"*Error* cannot fork: $!");
@@ -8663,7 +8663,7 @@ sub ipunblock {
 			$0 = "lfd - processing temporary bans";
 			my $timer = time;
 			if ($config{DEBUG} >= 3) {$timer = &timer("start","ipunblock",$timer)}
-			sysopen (my $TEMPBAN, "/var/lib/csf/csf.tempban", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"Unable to open /var/lib/csf/csf.tempban: $!");
+			sysopen (my $TEMPBAN, "/var/lib/qhtlfirewall/qhtlfirewall.tempban", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"Unable to open /var/lib/qhtlfirewall/qhtlfirewall.tempban: $!");
 			unless (flock ($TEMPBAN, LOCK_EX | LOCK_NB)) {
 				if ($config{DEBUG} >= 3) {logfile("debug: Unable to lock csf.tempban in ipunblock")}
 			} else {
@@ -8764,7 +8764,7 @@ sub ipunblock {
 			exit;
 		}
 	}
-	if (! -z "/var/lib/csf/csf.tempallow") {
+	if (! -z "/var/lib/qhtlfirewall/qhtlfirewall.tempallow") {
 		$SIG{CHLD} = 'IGNORE';
 		unless (defined ($childpid = fork)) {
 			&cleanup(__LINE__,"*Error* cannot fork: $!");
@@ -8774,7 +8774,7 @@ sub ipunblock {
 			$0 = "lfd - processing temporary allows";
 			my $timer = time;
 			if ($config{DEBUG} >= 3) {$timer = &timer("start","ipunblock",$timer)}
-			sysopen (my $TEMPALLOW, "/var/lib/csf/csf.tempallow", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"Enable to open /var/lib/csf/csf.tempallow: $!");
+			sysopen (my $TEMPALLOW, "/var/lib/qhtlfirewall/qhtlfirewall.tempallow", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"Enable to open /var/lib/qhtlfirewall/qhtlfirewall.tempallow: $!");
 			unless (flock ($TEMPALLOW, LOCK_EX | LOCK_NB)) {
 				if ($config{DEBUG} >= 3) {logfile("debug: Unable to lock csf.tempallow in ipunblock")}
 			} else {
@@ -8978,7 +8978,7 @@ sub stats_report {
 		$0 = "lfd - (child) Stats Report...";
 
 		my $lockstr = "ST_ENABLE_report";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		unless (flock ($THISLOCK, LOCK_EX | LOCK_NB)) {
 			if ($config{DEBUG} >= 1) {
 				&childcleanup("debug: *Lock Error* [$lockstr] still active - section skipped");
@@ -8990,11 +8990,11 @@ sub stats_report {
 
 		#[0-23] hour, [24-54] day, [55-57] month
 		my $STATS;
-		if (-e "/var/lib/csf/stats/lfdstats") {
-			sysopen ($STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+		if (-e "/var/lib/qhtlfirewall/stats/lfdstats") {
+			sysopen ($STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 		}
-		elsif (-e "/var/lib/csf/stats/lfdmain") {
-			sysopen (my $OLDSTATS,"/var/lib/csf/stats/lfdmain", O_RDWR | O_CREAT);
+		elsif (-e "/var/lib/qhtlfirewall/stats/lfdmain") {
+			sysopen (my $OLDSTATS,"/var/lib/qhtlfirewall/stats/lfdmain", O_RDWR | O_CREAT);
 			flock ($OLDSTATS, LOCK_EX);
 			my @stats = <$OLDSTATS>;
 			chomp @stats;
@@ -9006,7 +9006,7 @@ sub stats_report {
 				push @newstats,$line;
 				$cnt++;
 			}
-			sysopen (my $STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+			sysopen (my $STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 			flock ($STATS, LOCK_EX);
 			seek ($STATS, 0, 0);
 			truncate ($STATS, 0);
@@ -9015,11 +9015,11 @@ sub stats_report {
 			}
 			close ($STATS);
 
-			rename "/var/lib/csf/stats/lfdmain", "/var/lib/csf/stats/lfdmain.".time;
+			rename "/var/lib/qhtlfirewall/stats/lfdmain", "/var/lib/qhtlfirewall/stats/lfdmain.".time;
 			close ($OLDSTATS);
-			sysopen ($STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+			sysopen ($STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 		} else {
-			sysopen ($STATS,"/var/lib/csf/stats/lfdstats", O_RDWR | O_CREAT);
+			sysopen ($STATS,"/var/lib/qhtlfirewall/stats/lfdstats", O_RDWR | O_CREAT);
 		}
 		flock ($STATS, LOCK_EX);
 		my @stats = <$STATS>;
@@ -9164,7 +9164,7 @@ sub messengerrecaptcha {
 		$SIG{__DIE__} = sub {&childcleanup(@_);};
 
 		if (-f "$homedir/unblock.txt") {
-			my @alert = slurp("/usr/local/csf/tpl/recaptcha.txt");
+			my @alert = slurp("/usr/local/qhtlfirewall/tpl/recaptcha.txt");
 			sysopen (my $UNBLOCK, "$homedir/unblock.txt", O_RDWR | O_CREAT);
 			flock($UNBLOCK, LOCK_EX);
 			while (my $line = <$UNBLOCK>) {
@@ -9172,8 +9172,8 @@ sub messengerrecaptcha {
 				my ($unblockip,$host,$hostip) = split(/;/,$line);
 				if (checkip(\$unblockip)) {
 					&logfile("reCAPTCHA: Unblocking client [$unblockip] on domain [$host ($hostip)]");
-					&syscommand(__LINE__,"/usr/sbin/csf","-dr",$unblockip);
-					&syscommand(__LINE__,"/usr/sbin/csf","-tr",$unblockip);
+					&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-dr",$unblockip);
+					&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-tr",$unblockip);
 
 					if ($config{RECAPTCHA_ALERT}) {
 						my $tip = iplookup($unblockip);
@@ -9224,12 +9224,12 @@ sub messengerstop {
 		}
 		elsif (-f $config{MESSENGERV3LOCATION}) {
 			my @conf = slurp($config{MESSENGERV3LOCATION});
-			if (grep {$_ =~ m[^Include /var/lib/csf/csf.conf]i} @conf) {
+			if (grep {$_ =~ m[^Include /var/lib/qhtlfirewall/qhtlfirewall.conf]i} @conf) {
 				sysopen (my $FILE, $config{MESSENGERV3LOCATION}, O_WRONLY | O_CREAT | O_TRUNC);
 				flock ($FILE, LOCK_EX);
 				foreach my $line (@conf) {
 			        $line =~ s/$cleanreg//g;
-					if ($line =~ m[^Include /var/lib/csf/csf.conf]i) {next}
+					if ($line =~ m[^Include /var/lib/qhtlfirewall/qhtlfirewall.conf]i) {next}
 					print $FILE $line."\n";
 				}
 				close ($FILE);
@@ -9268,7 +9268,7 @@ sub messenger {
 		my ($status,$reason) = $messenger1->start($port,$user,$type);
 		if ($status) {
 			logfile("*MESSENGER*: Error starting $type service: $reason");
-			sysopen (my $TEMPCONF, "/var/lib/csf/csf.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+			sysopen (my $TEMPCONF, "/var/lib/qhtlfirewall/qhtlfirewall.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 			flock ($TEMPCONF, LOCK_EX);
 			print $TEMPCONF "MESSENGER_${type}_IN = \"\"\n";
 			close ($TEMPCONF);
@@ -9441,7 +9441,7 @@ sub ui {
 		$SIG{__DIE__} = sub {&childcleanup(@_);};
 		$childproc = "UI";
 
-		my @alert = slurp("/usr/local/csf/tpl/uialert.txt");
+		my @alert = slurp("/usr/local/qhtlfirewall/tpl/uialert.txt");
 		my $server;
 		if ($config{IPV6}) {
 			$server = IO::Socket::SSL->new(
@@ -9456,8 +9456,8 @@ sub ui {
 						SSL_cipher_list => $config{UI_CIPHER},
 						SSL_honor_cipher_order => 1,
 						SSL_version => $config{UI_SSL_VERSION},
-						SSL_key_file => '/etc/csf/ui/server.key',
-						SSL_cert_file => '/etc/csf/ui/server.crt',
+						SSL_key_file => '/etc/qhtlfirewall/ui/server.key',
+						SSL_cert_file => '/etc/qhtlfirewall/ui/server.crt',
 			) or &childcleanup(__LINE__,"UI: *Error* cannot open server on port $config{UI_PORT}: ".IO::Socket::SSL->errstr);
 		} else {
 			$server = IO::Socket::SSL->new(
@@ -9472,8 +9472,8 @@ sub ui {
 						SSL_cipher_list => $config{UI_CIPHER},
 						SSL_honor_cipher_order => 1,
 						SSL_version => $config{UI_SSL_VERSION},
-						SSL_key_file => '/etc/csf/ui/server.key',
-						SSL_cert_file => '/etc/csf/ui/server.crt',
+						SSL_key_file => '/etc/qhtlfirewall/ui/server.key',
+						SSL_cert_file => '/etc/qhtlfirewall/ui/server.crt',
 			) or &childcleanup(__LINE__,"UI: *Error* cannot open server on port $config{UI_PORT}: ".IO::Socket::SSL->errstr);
 		}
 
@@ -9548,7 +9548,7 @@ sub ui {
 					}
 
 					if ($config{"UI_BAN"}) {
-						open (my $UIBAN,"<","/etc/csf/ui/ui.ban");
+						open (my $UIBAN,"<","/etc/qhtlfirewall/ui/ui.ban");
 						flock ($UIBAN, LOCK_SH);
 						my @records = <$UIBAN>;
 						chomp @records;
@@ -9557,7 +9557,7 @@ sub ui {
 							if ($record =~ /^(\#|\s|\r|\n)/) {next}
 							my ($rip,undef) = split(/\s/,$record);
 							if ($rip eq $peeraddress) {
-								logfile("UI: Access attempt from a banned IP address in /etc/csf/ui/ui.ban - denied [$peeraddress]");
+								logfile("UI: Access attempt from a banned IP address in /etc/qhtlfirewall/ui/ui.ban - denied [$peeraddress]");
 								if ($config{UI_ALERT} >= 4) {
 									my @message;
 									my $tip = iplookup($peeraddress);
@@ -9578,7 +9578,7 @@ sub ui {
 
 					if ($config{"UI_ALLOW"}) {
 						my $allow = 0;
-						sysopen (my $UIALLOW,"/etc/csf/ui/ui.allow", O_RDWR | O_CREAT);
+						sysopen (my $UIALLOW,"/etc/qhtlfirewall/ui/ui.allow", O_RDWR | O_CREAT);
 						flock ($UIALLOW, LOCK_SH);
 						my @records = <$UIALLOW>;
 						chomp @records;
@@ -9601,7 +9601,7 @@ sub ui {
 							}
 						}
 						unless ($allow) {
-							logfile("UI: Access attempt from an IP not in /etc/csf/ui/ui.allow - denied [$peeraddress]");
+							logfile("UI: Access attempt from an IP not in /etc/qhtlfirewall/ui/ui.allow - denied [$peeraddress]");
 							if ($config{UI_ALERT} >= 4) {
 								my @message;
 								my $tip = iplookup($peeraddress);
@@ -9715,7 +9715,7 @@ sub ui {
 					if ($header{cookie} =~ /csfsession=(\w+)/) {$cookie = $1}
 
 					if (($session ne "" and $cookie ne "") or defined $FORM{csflogin}) {
-						sysopen (my $SESSION,"/var/lib/csf/ui/ui.session", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open csf.session: $!");
+						sysopen (my $SESSION,"/var/lib/qhtlfirewall/ui/ui.session", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open session: $!");
 						flock ($SESSION, LOCK_EX);
 						my @records = <$SESSION>;
 						chomp @records;
@@ -9789,15 +9789,15 @@ sub ui {
 						$fails{$peeraddress}++;
 						if ($fails{$peeraddress} > $config{UI_RETRY}) {
 							if ($config{UI_BAN}) {
-								sysopen (my $SESSIONBAN,"/etc/csf/ui/ui.ban", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open csf.session: $!");
+								sysopen (my $SESSIONBAN,"/etc/qhtlfirewall/ui/ui.ban", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open session: $!");
 								flock ($SESSIONBAN, LOCK_EX);
 								print $SESSIONBAN "$peeraddress - Banned for too many login failures ".localtime()."\n";
 								close ($SESSIONBAN);
-								logfile("UI: *Invalid login* attempts from $peeraddress [$fails{$peeraddress}/$config{UI_RETRY}] - Banned in /etc/csf/ui/ui.ban");
+								logfile("UI: *Invalid login* attempts from $peeraddress [$fails{$peeraddress}/$config{UI_RETRY}] - Banned in /etc/qhtlfirewall/ui/ui.ban");
 							} else {
 								logfile("UI: *Invalid login* attempts from $peeraddress [$fails{$peeraddress}/$config{UI_RETRY}] - Not Banned");
 							}
-							sysopen (my $SESSION,"/var/lib/csf/ui/ui.session", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open csf.session: $!");
+							sysopen (my $SESSION,"/var/lib/qhtlfirewall/ui/ui.session", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open session: $!");
 							flock ($SESSION, LOCK_EX);
 							my @records = <$SESSION>;
 							chomp @records;
@@ -9838,7 +9838,7 @@ sub ui {
 							exit;
 						} else {
 							my $time = time;
-							sysopen (my $SESSION,"/var/lib/csf/ui/ui.session", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open csf.session: $!");
+							sysopen (my $SESSION,"/var/lib/qhtlfirewall/ui/ui.session", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open session: $!");
 							flock ($SESSION, LOCK_EX);
 							print $SESSION "fail|$time||||$peeraddress||\n";
 							close ($SESSION);
@@ -9866,7 +9866,7 @@ sub ui {
 						$md5current->add($header{'user-agent'});
 						my $md5sum = $md5current->b64digest;
 						my $time = time;
-						sysopen (my $SESSION,"/var/lib/csf/ui/ui.session", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open csf.session: $!");
+						sysopen (my $SESSION,"/var/lib/qhtlfirewall/ui/ui.session", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open session: $!");
 						flock ($SESSION, LOCK_EX);
 						my @records = <$SESSION>;
 						chomp @records;
@@ -9920,7 +9920,7 @@ sub ui {
 							elsif ($FORM{csfapp} eq "cxs" and $config{UI_CXS}) {$newapp = "cxs"}
 							elsif ($FORM{csfapp} eq "cse" and $config{UI_CSE}) {$newapp = "cse"}
 							if ($newapp ne $application) {
-								sysopen (my $SESSION,"/var/lib/csf/ui/ui.session", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open csf.session: $!");
+								sysopen (my $SESSION,"/var/lib/qhtlfirewall/ui/ui.session", O_RDWR | O_CREAT) or &childcleanup(__LINE__,"UI: unable to open session: $!");
 								flock ($SESSION, LOCK_EX);
 								my @records = <$SESSION>;
 								chomp @records;
@@ -9940,7 +9940,7 @@ sub ui {
 						if ($file eq "/") {
 							print "HTTP/1.0 200 OK\r\n";
 							if ($application eq "csf") {
-								open (my $IN, "<", "/etc/csf/version.txt") or die $!;
+								open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
 								flock ($IN, LOCK_SH);
 								$myv = <$IN>;
 								close ($IN);
@@ -9954,14 +9954,14 @@ sub ui {
 								my @header;
 								my @footer;
 								my $htmltag = "data-post='$FORM{action}'";
-								if (-e "/etc/csf/csf.header") {
-									open (my $HEADER, "<", "/etc/csf/csf.header");
+								if (-e "/etc/qhtlfirewall/qhtlfirewall.header") {
+									open (my $HEADER, "<", "/etc/qhtlfirewall/qhtlfirewall.header");
 									flock ($HEADER, LOCK_SH);
 									@header = <$HEADER>;
 									close ($HEADER);
 								}
-								if (-e "/etc/csf/csf.footer") {
-									open (my $FOOTER, "<", "/etc/csf/csf.footer");
+								if (-e "/etc/qhtlfirewall/qhtlfirewall.footer") {
+									open (my $FOOTER, "<", "/etc/qhtlfirewall/qhtlfirewall.footer");
 									flock ($FOOTER, LOCK_SH);
 									@footer = <$FOOTER>;
 									close ($FOOTER);
@@ -10255,7 +10255,7 @@ EOF
 								print "Content-type: application/octet-stream\r\n";
 							}
 							print "\r\n";
-							open (my $IMAGE, "<", "/etc/csf/ui/images/$1");
+							open (my $IMAGE, "<", "/etc/qhtlfirewall/ui/images/$1");
 							flock ($IMAGE, LOCK_SH);
 							while (<$IMAGE>) {print $_}
 							close ($IMAGE);
@@ -10376,25 +10376,25 @@ sub lfdserver {
 							}
 							elsif ($command eq "A" and checkip(\$ip)) {
 								logfile("Cluster member $pip said, ALLOW $ip, [$message]");
-								&syscommand(__LINE__,"/usr/sbin/csf","-a",$ip,"Cluster member $pip said, ALLOW $ip, Reason:[$message]");
+								&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-a",$ip,"Cluster member $pip said, ALLOW $ip, Reason:[$message]");
 							}
 							elsif ($command eq "TA") {
 								logfile("Cluster member $pip said, TEMPALLOW $ip, Reason:[$message]");
-								&syscommand(__LINE__,"/usr/sbin/csf","-ta",$ip,$timeout,"-p",$ports,"-d",$inout,"Cluster member $pip said, TEMPALLOW $ip, Reason:[$message]");
+								&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-ta",$ip,$timeout,"-p",$ports,"-d",$inout,"Cluster member $pip said, TEMPALLOW $ip, Reason:[$message]");
 							}
 							elsif ($command eq "AR" and checkip(\$ip)) {
 								logfile("Cluster member $pip said, REMOVE ALLOW $tip");
-								&syscommand(__LINE__,"/usr/sbin/csf","-ar",$ip);
-								&syscommand(__LINE__,"/usr/sbin/csf","-tr",$ip);
+								&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-ar",$ip);
+								&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-tr",$ip);
 							}
 							elsif ($command eq "R" and checkip(\$ip)) {
 								logfile("Cluster member $pip said, REMOVE DENY $tip");
-								&syscommand(__LINE__,"/usr/sbin/csf","-dr",$ip);
-								&syscommand(__LINE__,"/usr/sbin/csf","-tr",$ip);
+								&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-dr",$ip);
+								&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-tr",$ip);
 							}
 							elsif ($command eq "I" and checkip(\$ip)) {
 								my $ignorematches;
-								my @ignore = slurp("/etc/csf/csf.ignore");
+								my @ignore = slurp("/etc/qhtlfirewall/qhtlfirewall.ignore");
 								foreach my $line (@ignore) {
 									if ($line =~ /^Include\s*(.*)$/) {
 										my @incfile = slurp($1);
@@ -10412,7 +10412,7 @@ sub lfdserver {
 										last;
 									}
 								}
-								sysopen (my $IGNORE, "/etc/csf/csf.ignore", O_RDWR | O_CREAT);
+								sysopen (my $IGNORE, "/etc/qhtlfirewall/qhtlfirewall.ignore", O_RDWR | O_CREAT);
 								flock ($IGNORE, LOCK_EX);
 								my $text = join("", <$IGNORE>);
 								@ignore = split(/$slurpreg/,$text);
@@ -10421,7 +10421,7 @@ sub lfdserver {
 									print $IGNORE "$ip # Cluster member $pip said, IGNORE $ip, Reason:[$message] - ".localtime(time)."\n";
 									logfile("Cluster member $pip said, IGNORE $ip, [$message]");
 									logfile("Cluster - lfd restarting...");
-									open (my $LFDOUT, ">", "/var/lib/csf/lfd.restart");
+									open (my $LFDOUT, ">", "/var/lib/qhtlfirewall/qhtlwaterfall.restart");
 									close ($LFDOUT);
 								} else {
 									logfile("Cluster member $pip said, IGNORE $ip, [$message], however it is already being ignored");
@@ -10430,7 +10430,7 @@ sub lfdserver {
 							}
 							elsif ($command eq "IR" and checkip(\$ip)) {
 								my $hit;
-								sysopen (my $IGNORE, "/etc/csf/csf.ignore", O_RDWR | O_CREAT);
+								sysopen (my $IGNORE, "/etc/qhtlfirewall/qhtlfirewall.ignore", O_RDWR | O_CREAT);
 								flock ($IGNORE, LOCK_EX);
 								my $text = join("", <$IGNORE>);
 								my @ignore = split(/$slurpreg/,$text);
@@ -10452,10 +10452,10 @@ sub lfdserver {
 								if ($hit) {
 									logfile("Cluster member $pip said, REMOVE IGNORE $tip");
 									logfile("Cluster - lfd restarting...");
-									open (my $LFDOUT, ">", "/var/lib/csf/lfd.restart");
+									open (my $LFDOUT, ">", "/var/lib/qhtlfirewall/qhtlwaterfall.restart");
 									close ($LFDOUT);
 								} else {
-									logfile("Cluster member $pip said, REMOVE IGNORE $tip, however it is not in csf.ignore");
+									logfile("Cluster member $pip said, REMOVE IGNORE $tip, however it is not in qhtlfirewall.ignore");
 								}
 							}
 							elsif ($command eq "PING") {
@@ -10463,7 +10463,7 @@ sub lfdserver {
 							}
 							elsif ($command eq "G") {
 								logfile("Cluster member $pip said GREP $tip");
-								my @output = &syscommand(__LINE__,"/usr/sbin/csf","-g",$ip);
+								my @output = &syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-g",$ip);
 								$grep = join("",@output);
 							}
 							elsif ($command eq "C") {
@@ -10488,7 +10488,7 @@ sub lfdserver {
 									if ($config{CLUSTER_CONFIG}) {
 										my (undef,$content) = split(/\n/,$decrypted,2);
 										logfile("Cluster member $pip said store file [$file]");
-										open (my $FH, ">", "/etc/csf/$file");
+										open (my $FH, ">", "/etc/qhtlfirewall/$file");
 										flock ($FH, LOCK_EX);
 										binmode ($FH);
 										print $FH $content;
@@ -10503,11 +10503,11 @@ sub lfdserver {
 							elsif ($command eq "RESTART") {
 								if ($config{CLUSTER_MASTER} and ($config{CLUSTER_MASTER} eq $peeraddress)) {
 									if ($config{CLUSTER_CONFIG}) {
-										logfile("Cluster member $pip said restart csf and lfd");
-										logfile("Cluster - csf restarting...");
-										&syscommand(__LINE__,"/usr/sbin/csf","-sf");
-										logfile("Cluster - lfd restarting...");
-										open (my $LFDOUT, ">", "/var/lib/csf/lfd.restart");
+										logfile("Cluster member $pip said restart qhtlfirewall and qhtlwaterfall");
+									logfile("Cluster - qhtlfirewall restarting...");
+									&syscommand(__LINE__,"/usr/sbin/qhtlfirewall","-sf");
+									logfile("Cluster - qhtlwaterfall restarting...");
+									open (my $LFDOUT, ">", "/var/lib/qhtlfirewall/qhtlwaterfall.restart");
 										close ($LFDOUT);
 									} else {
 										logfile("*Cluster* member $pip said restart csf and lfd, however CLUSTER_CONFIG disabled");
@@ -10612,7 +10612,7 @@ sub updateconfig {
 	my $chname = shift;
 	my $chvalue = shift;
 
-	sysopen (my $OUT, "/etc/csf/csf.conf", O_RDWR | O_CREAT);
+	sysopen (my $OUT, "/etc/qhtlfirewall/qhtlfirewall.conf", O_RDWR | O_CREAT);
 	flock ($OUT, LOCK_EX);
 	my @confdata = <$OUT>;
 	chomp @confdata;
@@ -10667,14 +10667,14 @@ sub stats {
 					elsif ($out and $dst) {$text = iplookup($dst)}
 				}
 
-				sysopen (my $IPTABLES, "/var/lib/csf/stats/iptables_log", O_WRONLY | O_APPEND | O_CREAT);
+				sysopen (my $IPTABLES, "/var/lib/qhtlfirewall/stats/iptables_log", O_WRONLY | O_APPEND | O_CREAT);
 				flock ($IPTABLES, LOCK_EX);
 				print $IPTABLES "$text|$line\n";
 				close ($IPTABLES);
 
-				if ((stat("/var/lib/csf/stats/iptables_log"))[7] > (2048 * $config{ST_IPTABLES})) {
+				if ((stat("/var/lib/qhtlfirewall/stats/iptables_log"))[7] > (2048 * $config{ST_IPTABLES})) {
 					my $lockstr = "ST_IPTABLES";
-					sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+					sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 					unless (flock ($THISLOCK, LOCK_EX | LOCK_NB)) {
 						if ($config{DEBUG} >= 1) {
 							&childcleanup("debug: *Lock Error* [$lockstr] still active - section skipped");
@@ -10684,7 +10684,7 @@ sub stats {
 					}
 
 					print $THISLOCK time;
-					sysopen (my $IPTABLES, "/var/lib/csf/stats/iptables_log", O_RDWR | O_CREAT);
+					sysopen (my $IPTABLES, "/var/lib/qhtlfirewall/stats/iptables_log", O_RDWR | O_CREAT);
 					flock ($IPTABLES, LOCK_EX);
 
 					my @iptables = <$IPTABLES>;
@@ -10728,7 +10728,7 @@ sub systemstats {
 		$0 = "lfd - (child) System Statistics...";
 
 		my $lockstr = "ST_SYSTEM";
-		sysopen (my $THISLOCK, "/var/lib/csf/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/csf/lock/$lockstr.lock");
+		sysopen (my $THISLOCK, "/var/lib/qhtlfirewall/lock/$lockstr.lock", O_RDWR | O_CREAT) or &childcleanup("*Error* Unable to open /var/lib/qhtlfirewall/lock/$lockstr.lock");
 		flock ($THISLOCK, LOCK_EX | LOCK_NB) or &childcleanup("*Lock Error* [$lockstr] still active - section skipped");
 		print $THISLOCK time;
 		
@@ -10863,7 +10863,7 @@ sub systemstats {
 			$cputemp = sprintf("%.2f",$cputemp/1000)
 		}
 
-		sysopen (my $EMAIL, "/var/lib/csf/stats/email", O_RDWR | O_CREAT);
+		sysopen (my $EMAIL, "/var/lib/qhtlfirewall/stats/email", O_RDWR | O_CREAT);
 		flock ($EMAIL, LOCK_EX);
 		my $stats = <$EMAIL>;
 		chomp $stats;
@@ -10876,7 +10876,7 @@ sub systemstats {
 		if ($config{ST_MYSQL}) {
 			eval('use DBI;'); ##no critic
 			if ($@) {
-				sysopen (my $TEMPCONF, "/var/lib/csf/csf.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
+				sysopen (my $TEMPCONF, "/var/lib/qhtlfirewall/qhtlfirewall.tempconf", O_WRONLY | O_APPEND | O_CREAT) or &childcleanup(__LINE__,"*Error* Cannot append out file: $!");
 				flock ($TEMPCONF, LOCK_EX);
 				print $TEMPCONF "ST_MYSQL = \"0\"\n";
 				close ($TEMPCONF);
@@ -10954,8 +10954,8 @@ sub systemstats {
 
 		if ($config{ST_DISKW}) {
 			my $skip = 0;
-			if (-e "/var/lib/csf/csf.tempdisk") {
-				open (my $ST_DISKW, "<", "/var/lib/csf/csf.tempdisk");
+			if (-e "/var/lib/qhtlfirewall/qhtlfirewall.tempdisk") {
+				open (my $ST_DISKW, "<", "/var/lib/qhtlfirewall/qhtlfirewall.tempdisk");
 				flock ($ST_DISKW, LOCK_SH);
 				my $line = <$ST_DISKW>;
 				chomp $line;
@@ -10991,14 +10991,14 @@ sub systemstats {
 					$diskw = 0;
 					logfile("STATS: 15 sec. timeout performing ST_DISKW");
 				}
-				sysopen (my $ST_DISKW, "/var/lib/csf/csf.tempdisk", O_WRONLY | O_CREAT);
+				sysopen (my $ST_DISKW, "/var/lib/qhtlfirewall/qhtlfirewall.tempdisk", O_WRONLY | O_CREAT);
 				flock ($ST_DISKW, LOCK_EX);
 				print $ST_DISKW time.":$diskw\n";
 				close ($ST_DISKW);
 			}
 		}
 
-		sysopen (my $SYSSTAT,"/var/lib/csf/stats/system", O_WRONLY | O_APPEND | O_CREAT);
+	sysopen (my $SYSSTAT,"/var/lib/qhtlfirewall/stats/system", O_WRONLY | O_APPEND | O_CREAT);
 		flock ($SYSSTAT, LOCK_EX);
 		print $SYSSTAT "$time,$cputotal,$cpuidle,$cpuiowait,$memtotal,$memfree,$memswaptotal,$memswapfree,$load[0],$load[1],$load[2],$netin,$netout,$diskread,$diskwrite,$mailin,$mailout,$cputemp,$mysqlin,$mysqlout,$mysqlq,$mysqlsq,$mysqlcn,$mysqlth,$apachecpu,$apacheacc,$apachebwork,$apacheiwork,$diskw,$memcached\n";
 		close ($SYSSTAT);
@@ -11017,7 +11017,7 @@ sub systemstats {
 sub allowip {
 	my $ipmatch = shift;
 
-	my @allow = slurp("/etc/csf/csf.allow");
+	my @allow = slurp("/etc/qhtlfirewall/qhtlfirewall.allow");
 	foreach my $line (@allow) {
 		if ($line =~ /^Include\s*(.*)$/) {
 			my @incfile = slurp($1);
@@ -11045,8 +11045,8 @@ sub allowip {
 		}
 	}
 
-	if ($config{GLOBAL_ALLOW} and -e "/var/lib/csf/csf.gallow") {
-		open (my $IN, "<", "/var/lib/csf/csf.gallow");
+	if ($config{GLOBAL_ALLOW} and -e "/var/lib/qhtlfirewall/qhtlfirewall.gallow") {
+		open (my $IN, "<", "/var/lib/qhtlfirewall/qhtlfirewall.gallow");
 		flock ($IN, LOCK_SH);
 		my @allow = <$IN>;
 		close ($IN);
@@ -11063,7 +11063,7 @@ sub allowip {
 				if (checkip(\$cidrhit)) {
 					my $dcidr = Net::CIDR::Lite->new;
 					eval {local $SIG{__DIE__} = undef; $dcidr->add($cidrhit)};
-					if ($@) {logfile("Invalid CIDR in csf.gallow: $cidrhit")}
+					if ($@) {logfile("Invalid CIDR in qhtlfirewall.gallow: $cidrhit")}
 					if ($dcidr->find($ipmatch)) {
 						return 2;
 					}
diff --git a/qhtlfirewall/qhtlwaterfall.service b/qhtlfirewall/qhtlwaterfall.service
index 3fd9cd1..facc15f 100644
--- a/qhtlfirewall/qhtlwaterfall.service
+++ b/qhtlfirewall/qhtlwaterfall.service
@@ -4,9 +4,9 @@ After=network.target qhtlfirewall.service
 
 [Service]
 LimitNOFILE=4096
-ExecStart=/usr/sbin/lfd
+ExecStart=/usr/sbin/qhtlwaterfall
 Type=forking
-PIDFile=/run/lfd.pid
+PIDFile=/run/qhtlwaterfall.pid
 
 [Install]
 WantedBy=multi-user.target
diff --git a/qhtlfirewall/uninstall.cwp.sh b/qhtlfirewall/uninstall.cwp.sh
index c2e5e62..1b97f2d 100644
--- a/qhtlfirewall/uninstall.cwp.sh
+++ b/qhtlfirewall/uninstall.cwp.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,41 +16,41 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+    update-rc.d -f qhtlwaterfall remove
+    update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+    rc-update del qhtlwaterfall default
+    rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
-rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
+rm -fv /etc/cron.d/qhtlfirewall_update
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 rm -fv /usr/local/cwpsrv/htdocs/resources/admin/modules/csfofficial.php
 rm -fv /usr/local/cwpsrv/htdocs/resources/admin/modules/csf.pl
diff --git a/qhtlfirewall/uninstall.cyberpanel.sh b/qhtlfirewall/uninstall.cyberpanel.sh
index f694128..f156497 100644
--- a/qhtlfirewall/uninstall.cyberpanel.sh
+++ b/qhtlfirewall/uninstall.cyberpanel.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,41 +16,41 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+    update-rc.d -f qhtlwaterfall remove
+    update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+    rc-update del qhtlwaterfall default
+    rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
-rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
+rm -fv /etc/cron.d/qhtlfirewall_update
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 rm -Rfv /usr/local/CyberCP/configservercsf
 rm -fv /home/cyberpanel/plugins/configservercsf
@@ -64,7 +64,7 @@ fi
 
 service lscpd restart
 
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall
 
 echo
 echo "...Done"
diff --git a/qhtlfirewall/uninstall.directadmin.sh b/qhtlfirewall/uninstall.directadmin.sh
index 81e77ae..9a3c69e 100644
--- a/qhtlfirewall/uninstall.directadmin.sh
+++ b/qhtlfirewall/uninstall.directadmin.sh
@@ -1,10 +1,10 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
 sed -i 's/lfd=ON/lfd=OFF/' /usr/local/directadmin/data/admin/services.status
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -18,44 +18,44 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+    update-rc.d -f qhtlwaterfall remove
+    update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+    rc-update del qhtlwaterfall default
+    rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+    rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+    rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+    rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+    rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+    rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+    rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
-rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
+rm -fv /etc/cron.d/qhtlfirewall_update
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
 rm -Rfv /usr/local/directadmin/plugins/csf
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.man.1
 
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall
 
 echo
 echo "...Done"
diff --git a/qhtlfirewall/uninstall.generic.sh b/qhtlfirewall/uninstall.generic.sh
index fe577b5..698271b 100644
--- a/qhtlfirewall/uninstall.generic.sh
+++ b/qhtlfirewall/uninstall.generic.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,43 +16,43 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+    update-rc.d -f qhtlwaterfall remove
+    update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+    rc-update del qhtlwaterfall default
+    rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
-rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
+rm -fv /etc/cron.d/qhtlfirewall_update
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall
 
 echo
 echo "...Done"
diff --git a/qhtlfirewall/uninstall.interworx.sh b/qhtlfirewall/uninstall.interworx.sh
index 768703d..6a786ca 100644
--- a/qhtlfirewall/uninstall.interworx.sh
+++ b/qhtlfirewall/uninstall.interworx.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,44 +16,44 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+    update-rc.d -f qhtlwaterfall remove
+    update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+    rc-update del qhtlwaterfall default
+    rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
-rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
+rm -fv /etc/cron.d/qhtlfirewall_update
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 /usr/local/interworx/bin/nodeworx.pex -u --controller Plugins --action edit --plugin_name configservercsf --status 0 -n
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf /usr/local/interworx/plugins/configservercsf /usr/local/interworx/html/configserver/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall /usr/local/interworx/plugins/configservercsf /usr/local/interworx/html/configserver/csf
 chattr -ia /etc/apf/apf
 if [ -e "/etc/apf/apf.old" ]; then
     cp -avf /etc/apf/apf.old /etc/apf/apf
diff --git a/qhtlfirewall/uninstall.sh b/qhtlfirewall/uninstall.sh
index 1ebb7e9..0494764 100644
--- a/qhtlfirewall/uninstall.sh
+++ b/qhtlfirewall/uninstall.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,46 +16,46 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+    update-rc.d -f qhtlwaterfall remove
+    update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+    rc-update del qhtlwaterfall default
+    rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
 if [ -e "/usr/local/cpanel/bin/unregister_appconfig" ]; then
     cd /
-	/usr/local/cpanel/bin/unregister_appconfig csf
+    /usr/local/cpanel/bin/unregister_appconfig csf
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
-rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
+rm -fv /etc/cron.d/qhtlfirewall_update
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 /bin/rm -fv /usr/local/cpanel/whostmgr/docroot/cgi/addon_csf.cgi
 /bin/rm -Rfv /usr/local/cpanel/whostmgr/docroot/cgi/csf
@@ -67,11 +67,11 @@ rm -fv /usr/local/man/man1/csf.man.1
 /bin/rm -Rfv /usr/local/cpanel/Cpanel/Config/ConfigObj/Driver/ConfigServercsf
 /bin/touch /usr/local/cpanel/Cpanel/Config/ConfigObj/Driver
 
-rm -fv /var/run/chkservd/lfd
-sed -i 's/lfd:1//' /etc/chkserv.d/chkservd.conf
+rm -fv /var/run/chkservd/qhtlwaterfall
+sed -i 's/qhtlwaterfall:1//' /etc/chkserv.d/chkservd.conf
 /scripts/restartsrv_chkservd
 
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall
 
 echo
 echo "...Done"
diff --git a/qhtlfirewall/uninstall.vesta.sh b/qhtlfirewall/uninstall.vesta.sh
index 6eb6c33..38d4734 100644
--- a/qhtlfirewall/uninstall.vesta.sh
+++ b/qhtlfirewall/uninstall.vesta.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,16 +16,16 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+    update-rc.d -f qhtlwaterfall remove
+    update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+    rc-update del qhtlwaterfall default
+    rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
         rm -vf /etc/rc.d/rc3.d/S80csf
         rm -vf /etc/rc.d/rc4.d/S80csf
@@ -34,25 +34,25 @@ else
         rm -vf /etc/rc.d/rc4.d/S85lfd
         rm -vf /etc/rc.d/rc5.d/S85lfd
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+    /sbin/chkconfig qhtlfirewall off
+    /sbin/chkconfig qhtlwaterfall off
+    /sbin/chkconfig qhtlfirewall --del
+    /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
-rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
+rm -fv /etc/cron.d/qhtlfirewall_update
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.man.1
 
-rm -fv /usr/sbin/csf /usr/local/vesta/bin/csf.pl
+rm -fv /usr/sbin/qhtlfirewall /usr/local/vesta/bin/csf.pl
 rm -Rfv /etc/csf /usr/local/vesta/web/list/csf/ 
 rm -fv /usr/local/csf/lib/ConfigServer/csf.pm
 sed -i "/CSF/d" /usr/local/vesta/web/templates/admin/panel.html
diff --git a/qhtlfirewall/vestacp/csf.pl b/qhtlfirewall/vestacp/csf.pl
index f862888..b87b7ff 100644
--- a/qhtlfirewall/vestacp/csf.pl
+++ b/qhtlfirewall/vestacp/csf.pl
@@ -23,7 +23,7 @@ use File::Find;
 use Fcntl qw(:DEFAULT :flock);
 use Sys::Hostname qw(hostname);
 use IPC::Open3;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use ConfigServer::DisplayUI;
 use ConfigServer::Config;
 
@@ -32,7 +32,7 @@ our ($script, $images, $myv, %FORM, %in);
 my $config = ConfigServer::Config->loadconfig();
 my %config = $config->config;
 
-open (my $IN, "<", "/etc/csf/version.txt") or die $!;
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
 $myv = <$IN>;
 close ($IN);
 chomp $myv;
diff --git a/qhtlfirewall/vestacp/frame.php b/qhtlfirewall/vestacp/frame.php
index ce6d5f3..b5f1530 100644
--- a/qhtlfirewall/vestacp/frame.php
+++ b/qhtlfirewall/vestacp/frame.php
@@ -14,7 +14,7 @@ if ($_SESSION['user'] != 'admin') {
     exit;
 }
 
-exec (VESTA_CMD."csf.pl \"$env\"", $result, $return_var);
+exec (VESTA_CMD."qhtlfirewall.pl \"$env\"", $result, $return_var);
 
 $header = 1;
 foreach ($result as $line) {
diff --git a/qhtlfirewall/vestacp/qhtlfirewall.pl b/qhtlfirewall/vestacp/qhtlfirewall.pl
new file mode 100644
index 0000000..2fc6996
--- /dev/null
+++ b/qhtlfirewall/vestacp/qhtlfirewall.pl
@@ -0,0 +1,203 @@
+#!/usr/bin/perl
+###############################################################################
+# Copyright (C) 2006-2025 Jonathan Michaelson
+#
+# https://github.com/waytotheweb/scripts
+#
+# This program is free software; you can redistribute it and/or modify it under
+# the terms of the GNU General Public License as published by the Free Software
+# Foundation; either version 3 of the License, or (at your option) any later
+# version.
+#
+# This program is distributed in the hope that it will be useful, but WITHOUT
+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
+# details.
+#
+# You should have received a copy of the GNU General Public License along with
+# this program; if not, see <https://www.gnu.org/licenses>.
+###############################################################################
+# start main
+use strict;
+use File::Find;
+use Fcntl qw(:DEFAULT :flock);
+use Sys::Hostname qw(hostname);
+use IPC::Open3;
+use lib '/usr/local/qhtlfirewall/lib';
+use ConfigServer::DisplayUI;
+use ConfigServer::Config;
+
+our ($script, $images, $myv, %FORM, %in);
+
+my $config = ConfigServer::Config->loadconfig();
+my %config = $config->config;
+
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
+$myv = <$IN>;
+close ($IN);
+chomp $myv;
+
+$script = "/list/csf/frame.php";
+$images = "/list/csf/images";
+
+my $buffer = $ENV{'QUERY_STRING'};
+if ($buffer eq "") {$buffer = $ENV{POST}}
+if ($buffer eq "") {read(STDIN, $buffer,$ENV{'CONTENT_LENGTH'})}
+if ($buffer eq "") {foreach my $item (@ARGV) {$buffer .= $item."&"}}
+my @pairs = split(/&/, $buffer);
+foreach my $pair (@pairs) {
+    my ($name, $value) = split(/=/, $pair);
+    $value =~ tr/+/ /;
+    $value =~ s/%([a-fA-F0-9][a-fA-F0-9])/pack("C", hex($1))/eg;
+    $FORM{$name} = $value;
+}
+
+print "content-type: text/html\n\n";
+
+my $bootstrapcss = "<link rel='stylesheet' href='$images/bootstrap/css/bootstrap.min.css'>";
+my $jqueryjs = "<script src='$images/jquery.min.js'></script>";
+my $bootstrapjs = "<script src='$images/bootstrap/js/bootstrap.min.js'></script>";
+
+unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq "logtailcmd" or $FORM{action} eq "loggrepcmd") {
+    print <<EOF;
+<!doctype html>
+<html lang='en'>
+<head>
+    <title>QHTL Firewall</title>
+    <meta charset='utf-8'>
+    <meta name='viewport' content='width=device-width, initial-scale=1'>
+    $bootstrapcss
+    <link href='$images/configserver.css' rel='stylesheet' type='text/css'>
+    $jqueryjs
+    $bootstrapjs
+
+<style>
+.mobilecontainer {
+    display:none;
+}
+.normalcontainer {
+    display:block;
+}
+EOF
+    if ($config{STYLE_MOBILE}) {
+        print <<EOF;
+\@media (max-width: 600px) {
+    .mobilecontainer {
+        display:block;
+    }
+    .normalcontainer {
+        display:none;
+    }
+}
+EOF
+    }
+    print "</style>\n";
+    print <<EOF;
+</head>
+<body>
+<div id="loader"></div>
+<a id='toplink' class='toplink' title='Go to bottom'><span class='glyphicon glyphicon-hand-down'></span></a>
+<div class='container-fluid'>
+<div class='panel panel-default'>
+<h4><img src='$images/csf_small.png' style='padding-left: 10px'> QHTL Firewall - qhtlfirewall v$myv</h4>
+</div>
+EOF
+}
+
+my $templatehtml;
+open (my $SCRIPTOUT, '>', \$templatehtml);
+select $SCRIPTOUT;
+ConfigServer::DisplayUI::main(\%FORM, $script, $script, $images, $myv);
+close ($SCRIPTOUT);
+select STDOUT;
+$templatehtml =~ s/csfframe\?/csfframe\&/g;
+print $templatehtml;
+
+unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq "logtailcmd" or $FORM{action} eq "loggrepcmd") {
+    print <<EOF;
+<a class='botlink' id='botlink' title='Go to top'><span class='glyphicon glyphicon-hand-up'></span></a>
+<script>
+    function getCookie(cname) {
+        var name = cname + "=";
+        var ca = document.cookie.split(';');
+        for(var i = 0; i <ca.length; i++) {
+            var c = ca[i];
+            while (c.charAt(0)==' ') {
+                c = c.substring(1);
+            }
+            if (c.indexOf(name) == 0) {
+                return c.substring(name.length,c.length);
+            }
+        }
+        return "";
+    } 
+    $("#loader").hide();
+    $.fn.scrollBottom = function() { 
+      return $(document).height() - this.scrollTop() - this.height(); 
+    };
+    $('#botlink').on("click",function(){
+        $('html,body').animate({ scrollTop: 0 }, 'slow', function () {});
+    });
+    $('#toplink').on("click",function() {
+        var window_height = $(window).height();
+        var document_height = $(document).height();
+        $('html,body').animate({ scrollTop: window_height + document_height }, 'slow', function () {});
+    });
+    $('#tabAll').click(function(){
+        $('#tabAll').addClass('active');
+        $('.tab-pane').each(function(i,t){
+            $('#myTabs li').removeClass('active');
+            $(this).addClass('active');
+        });
+    });
+    $(document).ready(function(){
+        $('[data-tooltip="tooltip"]').tooltip();
+        $(window).scroll(function () {
+            if ($(this).scrollTop() > 500) {
+                $('#botlink').fadeIn();
+            } else {
+                $('#botlink').fadeOut();
+            }
+            if ($(this).scrollBottom() > 500) {
+                $('#toplink').fadeIn();
+            } else {
+                $('#toplink').fadeOut();
+            }
+        });
+EOF
+    if ($config{STYLE_MOBILE}) {
+        print <<EOF;
+        var csfview = getCookie('csfview');
+        if (csfview == 'mobile') {
+            $(".mobilecontainer").css('display','block');
+            $(".normalcontainer").css('display','none');
+            $("#csfreturn").addClass('btn-primary btn-lg btn-block').removeClass('btn-default');
+        } else if (csfview == 'desktop') {
+            $(".mobilecontainer").css('display','none');
+            $(".normalcontainer").css('display','block');
+            $("#csfreturn").removeClass('btn-primary btn-lg btn-block').addClass('btn-default');
+        }
+EOF
+    }
+    print "});\n";
+    if ($config{STYLE_MOBILE}) {
+        print <<EOF;
+    $("#NormalView").click(function(){
+        document.cookie = "csfview=desktop; path=/";
+        $(".mobilecontainer").css('display','none');
+        $(".normalcontainer").css('display','block');
+    });
+    $("#MobileView").click(function(){
+        document.cookie = "csfview=mobile; path=/";
+        $(".mobilecontainer").css('display','block');
+        $(".normalcontainer").css('display','none');
+    });
+EOF
+    }
+    print "  parent.resizeIframe(parent.document.getElementById('myiframe'));\n";
+    print "</script>\n";
+    print "</body>\n";
+    print "</html>\n";
+}
+
+1;
diff --git a/qhtlfirewall/webmin/qhtlfirewall/index.cgi b/qhtlfirewall/webmin/qhtlfirewall/index.cgi
index edafbcb..6b29eed 100644
--- a/qhtlfirewall/webmin/qhtlfirewall/index.cgi
+++ b/qhtlfirewall/webmin/qhtlfirewall/index.cgi
@@ -24,7 +24,7 @@ use File::Find;
 use Fcntl qw(:DEFAULT :flock);
 use Sys::Hostname qw(hostname);
 use IPC::Open3;
-use lib '/usr/local/csf/lib';
+use lib '/usr/local/qhtlfirewall/lib';
 use ConfigServer::DisplayUI;
 use ConfigServer::Config;
 
@@ -33,13 +33,13 @@ our ($script, $images, $myv, %FORM, %in);
 my $config = ConfigServer::Config->loadconfig();
 my %config = $config->config;
 
-open (my $IN, "<", "/etc/csf/version.txt") or die $!;
+open (my $IN, "<", "/etc/qhtlfirewall/version.txt") or die $!;
 $myv = <$IN>;
 close ($IN);
 chomp $myv;
 
 $script = "index.cgi";
-$images = "csfimages";
+$images = "images";
 
 do '../web-lib.pl';      
 &init_config();         
@@ -59,33 +59,33 @@ my @body;
 my @footer;
 my $bodytag;
 my $htmltag = " data-post='$FORM{action}' ";
-if (-e "/etc/csf/csf.header") {
-	open (my $HEADER, "<", "/etc/csf/csf.header");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.header") {
+	open (my $HEADER, "<", "/etc/qhtlfirewall/qhtlfirewall.header");
 	flock ($HEADER, LOCK_SH);
 	@header = <$HEADER>;
 	close ($HEADER);
 }
-if (-e "/etc/csf/csf.body") {
-	open (my $BODY, "<", "/etc/csf/csf.body");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.body") {
+	open (my $BODY, "<", "/etc/qhtlfirewall/qhtlfirewall.body");
 	flock ($BODY, LOCK_SH);
 	@body = <$BODY>;
 	close ($BODY);
 }
-if (-e "/etc/csf/csf.footer") {
-	open (my $FOOTER, "<", "/etc/csf/csf.footer");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.footer") {
+	open (my $FOOTER, "<", "/etc/qhtlfirewall/qhtlfirewall.footer");
 	flock ($FOOTER, LOCK_SH);
 	@footer = <$FOOTER>;
 	close ($FOOTER);
 }
-if (-e "/etc/csf/csf.htmltag") {
-	open (my $HTMLTAG, "<", "/etc/csf/csf.htmltag");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.htmltag") {
+	open (my $HTMLTAG, "<", "/etc/qhtlfirewall/qhtlfirewall.htmltag");
 	flock ($HTMLTAG, LOCK_SH);
 	$htmltag .= <$HTMLTAG>;
 	chomp $htmltag;
 	close ($HTMLTAG);
 }
-if (-e "/etc/csf/csf.bodytag") {
-	open (my $BODYTAG, "<", "/etc/csf/csf.bodytag");
+if (-e "/etc/qhtlfirewall/qhtlfirewall.bodytag") {
+	open (my $BODYTAG, "<", "/etc/qhtlfirewall/qhtlfirewall.bodytag");
 	flock ($BODYTAG, LOCK_SH);
 	$bodytag = <$BODYTAG>;
 	chomp $bodytag;
@@ -105,11 +105,12 @@ unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq
 	print "<head>\n";
 	print "	<title>ConfigServer Security &amp; Firewall</title>\n";
 	print "	<meta charset='utf-8'>\n";
+		print "	<title>QHTL Firewall</title>\n";
 	print "	<meta name='viewport' content='width=device-width, initial-scale=1'>\n";
 	print "	$bootstrapcss\n";
 	print "	<link href='$images/configserver.css' rel='stylesheet' type='text/css'>\n";
 	print "	$jqueryjs\n";
-	print "	$bootstrapjs\n";
+	print "	<meta charset='utf-8'>\n";
 	print "<style>\n";
 	print ".mobilecontainer {\n";
 	print "	display:none;\n";
@@ -137,11 +138,11 @@ unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq
 	print "<div class='container-fluid'>\n";
 	print "<div class='panel panel-default'>\n";
 	print "<h4><img src='$images/csf_small.png' style='padding-left: 10px'> ConfigServer Security &amp; Firewall - csf v$myv</h4>\n";
+		print "<h4><img src='$images/csf_small.png' style='padding-left: 10px'> QHTL Firewall - qhtlfirewall v$myv</h4>\n";
 	print "</div>\n";
 }
 
 ConfigServer::DisplayUI::main(\%FORM, $script, 0, $images, $myv);
-
 unless ($FORM{action} eq "tailcmd" or $FORM{action} =~ /^cf/ or $FORM{action} eq "logtailcmd" or $FORM{action} eq "loggrepcmd") {
 	print "<a class='botlink' id='botlink' title='Go to top'><span class='glyphicon glyphicon-hand-up'></span></a>\n";
 	print "<script>\n";
diff --git a/qhtlfirewall/webmin/qhtlfirewall/module.info b/qhtlfirewall/webmin/qhtlfirewall/module.info
index 121a2cf..da665ec 100644
--- a/qhtlfirewall/webmin/qhtlfirewall/module.info
+++ b/qhtlfirewall/webmin/qhtlfirewall/module.info
@@ -1,3 +1,3 @@
-name=csf
-desc=ConfigServer Security & Firewall
+name=qhtlfirewall
+desc=QHTL Firewall
 category=system
diff --git a/uninstallers/qhtlfirewall/uninstall.cpanel.sh b/uninstallers/qhtlfirewall/uninstall.cpanel.sh
index 1ebb7e9..81ee6c7 100644
--- a/uninstallers/qhtlfirewall/uninstall.cpanel.sh
+++ b/uninstallers/qhtlfirewall/uninstall.cpanel.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,31 +16,31 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+        update-rc.d -f qhtlwaterfall remove
+        update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+        rc-update del qhtlwaterfall default
+        rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
 if [ -e "/usr/local/cpanel/bin/unregister_appconfig" ]; then
@@ -48,14 +48,14 @@ if [ -e "/usr/local/cpanel/bin/unregister_appconfig" ]; then
 	/usr/local/cpanel/bin/unregister_appconfig csf
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
 rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 /bin/rm -fv /usr/local/cpanel/whostmgr/docroot/cgi/addon_csf.cgi
 /bin/rm -Rfv /usr/local/cpanel/whostmgr/docroot/cgi/csf
@@ -67,11 +67,11 @@ rm -fv /usr/local/man/man1/csf.man.1
 /bin/rm -Rfv /usr/local/cpanel/Cpanel/Config/ConfigObj/Driver/ConfigServercsf
 /bin/touch /usr/local/cpanel/Cpanel/Config/ConfigObj/Driver
 
-rm -fv /var/run/chkservd/lfd
-sed -i 's/lfd:1//' /etc/chkserv.d/chkservd.conf
+rm -fv /var/run/chkservd/qhtlwaterfall
+sed -i 's/qhtlwaterfall:1//' /etc/chkserv.d/chkservd.conf
 /scripts/restartsrv_chkservd
 
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall
 
 echo
 echo "...Done"
diff --git a/uninstallers/qhtlfirewall/uninstall.cwp.sh b/uninstallers/qhtlfirewall/uninstall.cwp.sh
index c2e5e62..658418f 100644
--- a/uninstallers/qhtlfirewall/uninstall.cwp.sh
+++ b/uninstallers/qhtlfirewall/uninstall.cwp.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,41 +16,41 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+        update-rc.d -f qhtlwaterfall remove
+        update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+        rc-update del qhtlwaterfall default
+        rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
 rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 rm -fv /usr/local/cwpsrv/htdocs/resources/admin/modules/csfofficial.php
 rm -fv /usr/local/cwpsrv/htdocs/resources/admin/modules/csf.pl
diff --git a/uninstallers/qhtlfirewall/uninstall.cyberpanel.sh b/uninstallers/qhtlfirewall/uninstall.cyberpanel.sh
index f694128..c127261 100644
--- a/uninstallers/qhtlfirewall/uninstall.cyberpanel.sh
+++ b/uninstallers/qhtlfirewall/uninstall.cyberpanel.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,41 +16,41 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+        update-rc.d -f qhtlwaterfall remove
+        update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+        rc-update del qhtlwaterfall default
+        rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
 rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 rm -Rfv /usr/local/CyberCP/configservercsf
 rm -fv /home/cyberpanel/plugins/configservercsf
@@ -64,7 +64,7 @@ fi
 
 service lscpd restart
 
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall
 
 echo
 echo "...Done"
diff --git a/uninstallers/qhtlfirewall/uninstall.directadmin.sh b/uninstallers/qhtlfirewall/uninstall.directadmin.sh
index 7667d6f..b73f214 100644
--- a/uninstallers/qhtlfirewall/uninstall.directadmin.sh
+++ b/uninstallers/qhtlfirewall/uninstall.directadmin.sh
@@ -54,7 +54,7 @@ rm -fv /etc/logrotate.d/qhtlwaterfall
 
 # Remove binaries and manpage
 rm -fv /usr/sbin/qhtlfirewall /usr/sbin/qhtlwaterfall
-rm -fv /usr/local/man/man1/csf.1
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 # Remove DirectAdmin plugin
 rm -Rfv /usr/local/directadmin/plugins/csf
diff --git a/uninstallers/qhtlfirewall/uninstall.generic.sh b/uninstallers/qhtlfirewall/uninstall.generic.sh
index fe577b5..1669b7f 100644
--- a/uninstallers/qhtlfirewall/uninstall.generic.sh
+++ b/uninstallers/qhtlfirewall/uninstall.generic.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,43 +16,43 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+        update-rc.d -f qhtlwaterfall remove
+        update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+        rc-update del qhtlwaterfall default
+        rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
 rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall
 
 echo
 echo "...Done"
diff --git a/uninstallers/qhtlfirewall/uninstall.interworx.sh b/uninstallers/qhtlfirewall/uninstall.interworx.sh
index 768703d..f1c8665 100644
--- a/uninstallers/qhtlfirewall/uninstall.interworx.sh
+++ b/uninstallers/qhtlfirewall/uninstall.interworx.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,44 +16,44 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+        update-rc.d -f qhtlwaterfall remove
+        update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+        rc-update del qhtlwaterfall default
+        rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     fi
-    rm -fv /etc/init.d/csf
-    rm -fv /etc/init.d/lfd
+    rm -fv /etc/init.d/qhtlfirewall
+    rm -fv /etc/init.d/qhtlwaterfall
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
 rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
 /usr/local/interworx/bin/nodeworx.pex -u --controller Plugins --action edit --plugin_name configservercsf --status 0 -n
-rm -Rfv /etc/csf /usr/local/csf /var/lib/csf /usr/local/interworx/plugins/configservercsf /usr/local/interworx/html/configserver/csf
+rm -Rfv /etc/qhtlfirewall /usr/local/qhtlfirewall /var/lib/qhtlfirewall /usr/local/interworx/plugins/configservercsf /usr/local/interworx/html/configserver/csf
 chattr -ia /etc/apf/apf
 if [ -e "/etc/apf/apf.old" ]; then
     cp -avf /etc/apf/apf.old /etc/apf/apf
diff --git a/uninstallers/qhtlfirewall/uninstall.vesta.sh b/uninstallers/qhtlfirewall/uninstall.vesta.sh
index 6eb6c33..58a90a7 100644
--- a/uninstallers/qhtlfirewall/uninstall.vesta.sh
+++ b/uninstallers/qhtlfirewall/uninstall.vesta.sh
@@ -1,8 +1,8 @@
 #!/bin/sh
-echo "Uninstalling csf and lfd..."
+echo "Uninstalling qhtlfirewall and qhtlwaterfall..."
 echo
 
-/usr/sbin/csf -f
+/usr/sbin/qhtlfirewall -f
 
 if test `cat /proc/1/comm` = "systemd"
 then
@@ -16,46 +16,46 @@ then
     systemctl daemon-reload
 else
     if [ -f /etc/redhat-release ]; then
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     elif [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
-        update-rc.d -f lfd remove
-        update-rc.d -f csf remove
+        update-rc.d -f qhtlwaterfall remove
+        update-rc.d -f qhtlfirewall remove
     elif [ -f /etc/gentoo-release ]; then
-        rc-update del lfd default
-        rc-update del csf default
+        rc-update del qhtlwaterfall default
+        rc-update del qhtlfirewall default
     elif [ -f /etc/slackware-version ]; then
-        rm -vf /etc/rc.d/rc3.d/S80csf
-        rm -vf /etc/rc.d/rc4.d/S80csf
-        rm -vf /etc/rc.d/rc5.d/S80csf
-        rm -vf /etc/rc.d/rc3.d/S85lfd
-        rm -vf /etc/rc.d/rc4.d/S85lfd
-        rm -vf /etc/rc.d/rc5.d/S85lfd
+        rm -vf /etc/rc.d/rc3.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc4.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc5.d/S80qhtlfirewall
+        rm -vf /etc/rc.d/rc3.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc4.d/S85qhtlwaterfall
+        rm -vf /etc/rc.d/rc5.d/S85qhtlwaterfall
     else
-        /sbin/chkconfig csf off
-        /sbin/chkconfig lfd off
-        /sbin/chkconfig csf --del
-        /sbin/chkconfig lfd --del
+        /sbin/chkconfig qhtlfirewall off
+        /sbin/chkconfig qhtlwaterfall off
+        /sbin/chkconfig qhtlfirewall --del
+        /sbin/chkconfig qhtlwaterfall --del
     fi
     rm -fv /etc/init.d/csf
     rm -fv /etc/init.d/lfd
 fi
 
-rm -fv /etc/chkserv.d/lfd
-rm -fv /usr/sbin/csf
-rm -fv /usr/sbin/lfd
+rm -fv /etc/chkserv.d/qhtlwaterfall
+rm -fv /usr/sbin/qhtlfirewall
+rm -fv /usr/sbin/qhtlwaterfall
 rm -fv /etc/cron.d/csf_update
-rm -fv /etc/cron.d/lfd-cron
-rm -fv /etc/cron.d/csf-cron
-rm -fv /etc/logrotate.d/lfd
-rm -fv /usr/local/man/man1/csf.man.1
+rm -fv /etc/cron.d/qhtlwaterfall-cron
+rm -fv /etc/cron.d/qhtlfirewall-cron
+rm -fv /etc/logrotate.d/qhtlwaterfall
+rm -fv /usr/local/man/man1/qhtlfirewall.1
 
-rm -fv /usr/sbin/csf /usr/local/vesta/bin/csf.pl
-rm -Rfv /etc/csf /usr/local/vesta/web/list/csf/ 
-rm -fv /usr/local/csf/lib/ConfigServer/csf.pm
-sed -i "/CSF/d" /usr/local/vesta/web/templates/admin/panel.html
+rm -fv /usr/sbin/qhtlfirewall /usr/local/vesta/bin/csf.pl
+rm -Rfv /etc/qhtlfirewall /usr/local/vesta/web/list/csf/ 
+rm -fv /usr/local/qhtlfirewall/lib/ConfigServer/csf.pm
+sed -i "/QHTL/d" /usr/local/vesta/web/templates/admin/panel.html
 
 echo
 echo "...Done"
-- 
2.50.1

